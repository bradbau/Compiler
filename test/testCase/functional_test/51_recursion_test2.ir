--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("fib")
--accepting rule at line 80 ("(")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 101 ("if")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("n")
--accepting rule at line 114 (" ")
--accepting rule at line 93 ("==")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 81 (")")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 101 ("if")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("n")
--accepting rule at line 114 (" ")
--accepting rule at line 93 ("==")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 81 (")")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("p")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("p")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("q")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("q")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("fib")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("p")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("fib")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("q")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
<int>
<id,fib>
<(>
<int>
<id,n>
<)>
<{>
<if>
<(>
<id,n>
<==>
Lval
<into>
ExpNumber:0
<)>
<return>
<into>
ExpNumber:0
<;>
<if>
<(>
<id,n>
<==>
Lval
<intd>
ExpNumber:0
<)>
<return>
<intd>
ExpNumber:0
<;>
<int>
<id,p>
<;>
<id,p>
<=>
Lval
<id,n>
<->
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,q>
<;>
<id,q>
<=>
Lval
<id,n>
<->
Lval
<intd>
ExpNumber:0
<;>
stmt1
<return>
<id,fib>
<(>
<id,p>
<)>
Lval
<+>
<id,fib>
<(>
<id,q>
<)>
Lval
<;>
<}>
<int>
<id,main>
<(>
<)>
<{>
<int>
<id,tmp>
<;>
<id,tmp>
<=>
Lval
<intd>
Exp--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("fib")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("tmp")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--(end of buffer or a NUL)
--EOF (start condition 0)
Number:0
<;>
stmt1
<return>
<id,fib>
<(>
<id,tmp>
<)>
Lval
<;>
<}>
CompUnits (1)
  FuncDef (1)
    FuncFParam (1)
    Block (2)
      BlockItems (2)
        IF_Stmt (2)
          Cond (2)
            OPEQUAL (2)
              LVal_EXP (2)
                LVal (2)
                  IDENTIFIER n
                  ArrayExps (2)
              IntConst (2)
                CONSTANTOCT: 0
          Return_Stmt (3)
            IntConst (3)
              CONSTANTOCT: 0
        BlockItems (4)
          IF_Stmt (4)
            Cond (4)
              OPEQUAL (4)
                LVal_EXP (4)
                  LVal (4)
                    IDENTIFIER n
                    ArrayExps (4)
                IntConst (4)
                  CONSTANTINTD: 1
            Return_Stmt (5)
              IntConst (5)
                CONSTANTINTD: 1
          BlockItems (6)
            VarDecl (6)
              IDENTIFIER p
            BlockItems (7)
              Lval_Opassign_Stmt (7)
                LVal (7)
                  IDENTIFIER p
                  ArrayExps (7)
                MINUSExp (7)
                  LVal_EXP (7)
                    LVal (7)
                      IDENTIFIER n
                      ArrayExps (7)
                  IntConst (7)
                    CONSTANTINTD: 1
              BlockItems (8)
                VarDecl (8)
                  IDENTIFIER q
                BlockItems (9)
                  Lval_Opassign_Stmt (9)
                    LVal (9)
                      IDENTIFIER q
                      ArrayExps (9)
                    MINUSExp (9)
                      LVal_EXP (9)
                        LVal (9)
                          IDENTIFIER n
                          ArrayExps (9)
                      IntConst (9)
                        CONSTANTINTD: 2
                  BlockItems (10)
                    Return_Stmt (10)
                      PLUSExp (10)
                        funcall (10)
                          IDENTIFIER fib
                          FuncRParams (10)
                            LVal_EXP (10)
                              LVal (10)
                                IDENTIFIER p
                                ArrayExps (10)
                        funcall (10)
                          IDENTIFIER fib
                          FuncRParams (10)
                            LVal_EXP (10)
                              LVal (10)
                                IDENTIFIER q
                                ArrayExps (10)
  CompUnits (13)
    FuncDef (13)
      FuncFParam (13)
      Block (14)
        BlockItems (14)
          VarDecl (14)
            IDENTIFIER tmp
          BlockItems (15)
            Lval_Opassign_Stmt (15)
              LVal (15)
                IDENTIFIER tmp
                ArrayExps (15)
              IntConst (15)
                CONSTANTINTD: 10
            BlockItems (16)
              Return_Stmt (16)
                funcall (16)
                  IDENTIFIER fib
                  FuncRParams (16)
                    LVal_EXP (16)
                      LVal (16)
                        IDENTIFIER tmp
                        ArrayExps (16)


===========================================================
Global
ID             category       type           depictor
               
fib            Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:fib
ID             category       type           depictor
              
n              Variable       TYPEINTEGER    NOT NULL       
===========================================================
Local:fib
ID             category       type           depictor
              
p              Variable       TYPEINTEGER    NULL           
q              Variable       TYPEINTEGER    NULL           
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:main
ID             category       type           depictor
              
tmp            Variable       TYPEINTEGER    NULL           
Segmentation fault (core dumped)
