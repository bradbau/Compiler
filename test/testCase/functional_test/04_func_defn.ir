--(end of buffer or a NUL)
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("a")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("func")
--accepting rule at line 88 ("(")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("p")
--accepting rule at line 89 (")")
--accepting rule at line 86 ("{")
--accepting rule at line 131 ("
")
--accepting rule at line 130 ("	")
--accepting rule at line 128 ("p")
--accepting rule at line 130 (" ")
--accepting rule at line 97 ("=")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("p")
--accepting rule at line 130 (" ")
--accepting rule at line 93 ("-")
--accepting rule at line 130 (" ")
--accepting rule at line 125 ("1")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 ("	")
--accepting rule at line 124 ("return")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("p")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 87 ("}")
--accepting rule at line 131 ("
")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("main")
--accepting rule at line 88 ("(")
--accepting rule at line 89 (")")
--accepting rule at line 86 ("{")
--accepting rule at line 131 ("
")
--accepting rule at line 130 ("	")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("b")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 ("	")
--accepting rule at line 128 ("a")
--accepting rule at line 130 (" ")
--accepting rule at line 97 ("=")
--accepting rule at line 130 (" ")
--accepting rule at line 125 ("10")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 ("	")
--accepting rule at line 128 ("b")
--accepting rule at line 130 (" ")
--accepting rule at line 97 ("=")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("func")
--accepting rule at line 88 ("(")
--accepting rule at line 128 ("a")
--accepting rule at line 89 (")")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 ("	")
--accepting rule at line 124 ("return")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("b")
<int>
<id,a>
<;>
VarDecVarDefVarDefsDeclCompUnit<int>
<id,func>
<(>
<int>
<id,p>
<)>
FuncFParamFuncFParams<{>
<id,p>
<=>
ArrayExpsLval
<id,p>
<->
ArrayExpsLval
<intd>
<;>
stmt1
BlockItem<return>
<id,p>
<;>
ArrayExpsLval
StmtBlockItem<}>
BlockItemsBlockItemsBlockItemsBlockCompUnit<int>
<id,main>
<(>
<)>
FuncFParams<{>
<int>
<id,b>
VarDec<;>
VarDefVarDefsDeclBlockItem<id,a>
<=>
ArrayExpsLval
<intd>
<;>
stmt1
BlockItem<id,b>
<=>
ArrayExpsLval
<id,func>
<(>
<id,a>
<)>
ArrayExpsLval
<;>
stmt1
BlockItem<return>
<--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 87 ("}")
--accepting rule at line 131 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
id,b>
<;>
ArrayExpsLval
StmtBlockItem<}>
BlockItemsBlockItemsBlockItemsBlockItemsBlockItemsBlockCompUnitCompUnitsCompUnitsCompUnitsCompUnitsCompilerCompUnits (1)
  VarDecl (1)
    IDENTIFIER a  CompUnits (2)
    FuncDef (2)
      FuncFParam (2)
      Block (3)
        BlockItems (3)
          Lval_Opassign_Stmt (3)
            LVal (3)
              IDENTIFIER p            MINUSExp (3)
              LVal_EXP (3)
                LVal (3)
                  IDENTIFIER p              IntConst (3)
                CONSTANTINTD: 1
          BlockItems (4)
            Return_Stmt (4)
              LVal_EXP (4)
                LVal (4)
                  IDENTIFIER p    CompUnits (6)
      FuncDef (6)
        FuncFParam (6)
        Block (7)
          BlockItems (7)
            VarDecl (7)
              IDENTIFIER b            BlockItems (8)
              Lval_Opassign_Stmt (8)
                LVal (8)
                  IDENTIFIER a                IntConst (8)
                  CONSTANTINTD: 10
              BlockItems (9)
                Lval_Opassign_Stmt (9)
                  LVal (9)
                    IDENTIFIER b                  funcall (9)
                    IDENTIFIER func                    FuncRParams (9)
                      LVal_EXP (9)
                        LVal (9)
                          IDENTIFIER a                BlockItems (10)
                  Return_Stmt (10)
                    LVal_EXP (10)
                      LVal (10)
                        IDENTIFIER b

===========================================================
Global
ID             category       type           depictor
               
a              Variable       TYPEINTEGER    NULL           
func           Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:func
ID             category       type           depictor
              
p              Variable       TYPEINTEGER    NULL           
===========================================================
Local:func
ID             category       type           depictor
              
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:main
ID             category       type           depictor
              
b              Variable       TYPEINTEGER    NULL           
Segmentation fault (core dumped)
