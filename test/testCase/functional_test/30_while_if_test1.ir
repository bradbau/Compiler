<int>
<id,whileIf>
<(>
<)>
<{>
<int>
<id,a>
<;>
<id,a>
<=>
Lval
<into>
ExpNumber:0
<;>
stmt1
<int>
<id,b>
<;>
<id,b>
<=>
Lval
<into>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,a>
<<>
Lval
<intd>
ExpNumber:0
<)>
<{>
<if>
<(>
<id,a>
<==>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,b>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<else>
<if>
<(>
<id,a>
<==>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,b>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<else>
<{>
<id,b>
<=>
Lval
<id,a>
<*>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,a>
<=>
Lval
<id,a>
<+>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<(>
<id,b>
<)>
Lval
<;>
<}>
<int>
<id,main>
<(>
<)>
<{>
<return>
<(>
<id,whileIf>
<(>
<)>
<)>
<;>
<}>
CompUnits (2)
  FuncDef (2)
    NOFParam (2)
    Block (3)
      BlockItems (3)
        VarDecl (3)
          IDENTIFIER a
        BlockItems (4)
          Lval_Opassign_Stmt (4)
            LVal (4)
              IDENTIFIER a
              ArrayExps (4)
            IntConst (4)
              CONSTANTOCT: 0
          BlockItems (5)
            VarDecl (5)
              IDENTIFIER b
            BlockItems (6)
              Lval_Opassign_Stmt (6)
                LVal (6)
                  IDENTIFIER b
                  ArrayExps (6)
                IntConst (6)
                  CONSTANTOCT: 0
              BlockItems (7)
                While_Stmt (7)
                  Cond (7)
                    OPLIGHT (7)
                      LVal_EXP (7)
                        LVal (7)
                          IDENTIFIER a
                          ArrayExps (7)
                      IntConst (7)
                        CONSTANTINTD: 100
                  Block_Stmt (8)
                    Block (8)
                      BlockItems (8)
                        IF_ELSE_Stmt (8)
                          Cond (8)
                            OPEQUAL (8)
                              LVal_EXP (8)
                                LVal (8)
                                  IDENTIFIER a
                                  ArrayExps (8)
                              IntConst (8)
                                CONSTANTINTD: 5
                          Block_Stmt (9)
                            Block (9)
                              BlockItems (9)
                                Lval_Opassign_Stmt (9)
                                  LVal (9)
                                    IDENTIFIER b
                                    ArrayExps (9)
                                  IntConst (9)
                                    CONSTANTINTD: 25
                          IF_ELSE_Stmt (11)
                            Cond (11)
                              OPEQUAL (11)
                                LVal_EXP (11)
                                  LVal (11)
                                    IDENTIFIER a
                                    ArrayExps (11)
                                IntConst (11)
                                  CONSTANTINTD: 10
                            Block_Stmt (12)
                              Block (12)
                                BlockItems (12)
                                  Lval_Opassign_Stmt (12)
                                    LVal (12)
                                      IDENTIFIER b
                                      ArrayExps (12)
                                    IntConst (12)
                                      CONSTANTINTD: 42
                            Block_Stmt (15)
                              Block (15)
                                BlockItems (15)
                                  Lval_Opassign_Stmt (15)
                                    LVal (15)
                                      IDENTIFIER b
                                      ArrayExps (15)
                                    MulExp (15)
                                      LVal_EXP (15)
                                        LVal (15)
                                          IDENTIFIER a
                                          ArrayExps (15)
                                      IntConst (15)
                                        CONSTANTINTD: 2
                        BlockItems (17)
                          Lval_Opassign_Stmt (17)
                            LVal (17)
                              IDENTIFIER a
                              ArrayExps (17)
                            PLUSExp (17)
                              LVal_EXP (17)
                                LVal (17)
                                  IDENTIFIER a
                                  ArrayExps (17)
                              IntConst (17)
                                CONSTANTINTD: 1
                BlockItems (19)
                  Return_Stmt (19)
                    (Exp) (19)
                      LVal_EXP (19)
                        LVal (19)
                          IDENTIFIER b
                          ArrayExps (19)
  CompUnits (23)
    FuncDef (23)
      NOFParam (23)
      Block (24)
        BlockItems (24)
          Return_Stmt (24)
            (Exp) (24)
              funcall (24)
                IDENTIFIER whileIf


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
whileIf        Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:whileIf
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:whileIf
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
===========================================================
456
789
789
456
789
789
456
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
789
456

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   2)	FUNCTION whileIf :
  2  (at line   4)	_t0 := #0
  3  (at line   4)	a := _t0
  4  (at line   6)	_t1 := #0
  5  (at line   6)	b := _t1
  6  (at line   7)	LABEL label0 :
  7  (at line   7)	_t2 := a
  8  (at line   7)	_t5 := #100
  9  (at line   7)	IF _t2 < _t5 GOTO label1
 10  (at line   7)	GOTO label2
 11  (at line   7)	LABEL label1 :
 12  (at line   8)	_t6 := a
 13  (at line   8)	_t9 := #5
 14  (at line   8)	IF _t6 = _t9 GOTO label3
 15  (at line   8)	GOTO label4
 16  (at line   8)	LABEL label3 :
 17  (at line   9)	_t10 := #25
 18  (at line   9)	b := _t10
 19  (at line   8)	GOTO label5
 20  (at line   8)	LABEL label4 :
 21  (at line  11)	_t11 := a
 22  (at line  11)	_t14 := #10
 23  (at line  11)	IF _t11 = _t14 GOTO label6
 24  (at line  11)	GOTO label7
 25  (at line  11)	LABEL label6 :
 26  (at line  12)	_t15 := #42
 27  (at line  12)	b := _t15
 28  (at line  11)	GOTO label8
 29  (at line  11)	LABEL label7 :
 30  (at line  15)	_t17 := a
 31  (at line  15)	_t18 := #2
 32  (at line  15)	_t16 := _t17 * _t18
 33  (at line  15)	b := _t16
 34  (at line  11)	LABEL label8 :
 35  (at line   8)	LABEL label5 :
 36  (at line  17)	_t20 := a
 37  (at line  17)	_t21 := #1
 38  (at line  17)	_t19 := _t20 + _t21
 39  (at line  17)	a := _t19
 40  (at line   7)	GOTO label0
 41  (at line   7)	LABEL label2 :
 42  (at line  19)	_t23 := b
 43  (at line  19)	_t22 := _t23
 44  (at line  19)	RETURN _t22

 45  (at line  23)	FUNCTION main :
 46  (at line  24)	_t25 := CALL whileIf
 47  (at line  24)	_t24 := _t25
 48  (at line  24)	RETURN _t24


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
whileIf        Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:whileIf
ID             category       type           depictor
              
               NOParam                       NOT NULL       
scope type is wrong
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
===========================================================
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
Variable offset count+4 :a
Variable offset count+4 :b
Variable offset count+4 :a
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t0
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t1
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t2
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t5
Variable offset count+4 :_t22
scope type not local in functiondf
scopeprev:1
Variable offset count+4 :_t23
tac type ASSIGN
 assign 0 to tegister0
tac type ASSIGN
tac type ASSIGN
 assign 0 to tegister2
tac type ASSIGN
tac type LABELDF
L0:

tac type ASSIGN
tac type ASSIGN
 assign 100 to tegister5
tac type IFLT
tac type GOTO
Goto string B L2

tac type LABELDF
L1:

tac type ASSIGN
tac type ASSIGN
 assign 5 to tegister8
tac type IFEQ
tac type GOTO
Goto string B L4

tac type LABELDF
L3:

tac type ASSIGN
 assign 25 to tegister9
tac type ASSIGN
tac type GOTO
Goto string B L5

tac type LABELDF
L4:

tac type ASSIGN
tac type ASSIGN
 assign 10 to tegisterStore Register in getregisterNoLoad variable
10
tac type IFEQ
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type GOTO
Goto string B L7

tac type LABELDF
L6:

tac type ASSIGN
 assign 42 to tegisterStore Register in getregisterNoLoad variable
10
tac type ASSIGN
tac type GOTO
Goto string B L8

tac type LABELDF
L7:

tac type ASSIGN
Store Register in getregisterNoLoad variable
tac type ASSIGN
 assign 2 to tegisterStore Register in getregisterNoLoad variable
10
tac type MUL
Store Register in getregisterNoLoad variable
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ASSIGN
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type LABELDF
L8:

tac type LABELDF
L5:

tac type ASSIGN
Store Register in getregisterNoLoad variable
tac type ASSIGN
 assign 1 to tegisterStore Register in getregisterNoLoad variable
10
tac type ADD
Store Register in getregisterNoLoad variable
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ASSIGN
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type GOTO
Goto string B L0

tac type LABELDF
L2:

tac type ASSIGN
Store Register in getregisterNoLoad variable
tac type ASSIGN
Store Register in getregisterNoLoad variable
Segmentation fault (core dumped)
