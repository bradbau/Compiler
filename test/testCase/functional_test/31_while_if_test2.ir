<int>
<id,ifWhile>
<(>
<)>
<{>
<int>
<id,a>
<;>
<id,a>
<=>
Lval
<into>
ExpNumber:0
<;>
stmt1
<int>
<id,b>
<;>
<id,b>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<if>
<(>
<id,a>
<==>
Lval
<intd>
ExpNumber:0
<)>
<{>
<while>
<(>
<id,b>
<==>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,b>
<=>
Lval
<id,b>
<+>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,b>
<=>
Lval
<id,b>
<+>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<else>
<while>
<(>
<id,a>
<<>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,b>
<=>
Lval
<id,b>
<*>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<=>
Lval
<id,a>
<+>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<(>
<id,b>
<)>
Lval
<;>
<}>
<int>
<id,main>
<(>
<)>
<{>
<return>
<(>
<id,ifWhile>
<(>
<)>
<)>
<;>
<}>
CompUnits (1)
  FuncDef (1)
    NOFParam (1)
    Block (2)
      BlockItems (2)
        VarDecl (2)
          IDENTIFIER a
        BlockItems (3)
          Lval_Opassign_Stmt (3)
            LVal (3)
              IDENTIFIER a
              ArrayExps (3)
            IntConst (3)
              CONSTANTOCT: 0
          BlockItems (4)
            VarDecl (4)
              IDENTIFIER b
            BlockItems (5)
              Lval_Opassign_Stmt (5)
                LVal (5)
                  IDENTIFIER b
                  ArrayExps (5)
                IntConst (5)
                  CONSTANTINTD: 3
              BlockItems (6)
                IF_ELSE_Stmt (6)
                  Cond (6)
                    OPEQUAL (6)
                      LVal_EXP (6)
                        LVal (6)
                          IDENTIFIER a
                          ArrayExps (6)
                      IntConst (6)
                        CONSTANTINTD: 5
                  Block_Stmt (7)
                    Block (7)
                      BlockItems (7)
                        While_Stmt (7)
                          Cond (7)
                            OPEQUAL (7)
                              LVal_EXP (7)
                                LVal (7)
                                  IDENTIFIER b
                                  ArrayExps (7)
                              IntConst (7)
                                CONSTANTINTD: 2
                          Block_Stmt (8)
                            Block (8)
                              BlockItems (8)
                                Lval_Opassign_Stmt (8)
                                  LVal (8)
                                    IDENTIFIER b
                                    ArrayExps (8)
                                  PLUSExp (8)
                                    LVal_EXP (8)
                                      LVal (8)
                                        IDENTIFIER b
                                        ArrayExps (8)
                                    IntConst (8)
                                      CONSTANTINTD: 2
                        BlockItems (10)
                          Lval_Opassign_Stmt (10)
                            LVal (10)
                              IDENTIFIER b
                              ArrayExps (10)
                            PLUSExp (10)
                              LVal_EXP (10)
                                LVal (10)
                                  IDENTIFIER b
                                  ArrayExps (10)
                              IntConst (10)
                                CONSTANTINTD: 25
                  While_Stmt (13)
                    Cond (13)
                      OPLIGHT (13)
                        LVal_EXP (13)
                          LVal (13)
                            IDENTIFIER a
                            ArrayExps (13)
                        IntConst (13)
                          CONSTANTINTD: 5
                    Block_Stmt (14)
                      Block (14)
                        BlockItems (14)
                          Lval_Opassign_Stmt (14)
                            LVal (14)
                              IDENTIFIER b
                              ArrayExps (14)
                            MulExp (14)
                              LVal_EXP (14)
                                LVal (14)
                                  IDENTIFIER b
                                  ArrayExps (14)
                              IntConst (14)
                                CONSTANTINTD: 2
                          BlockItems (15)
                            Lval_Opassign_Stmt (15)
                              LVal (15)
                                IDENTIFIER a
                                ArrayExps (15)
                              PLUSExp (15)
                                LVal_EXP (15)
                                  LVal (15)
                                    IDENTIFIER a
                                    ArrayExps (15)
                                IntConst (15)
                                  CONSTANTINTD: 1
                BlockItems (17)
                  Return_Stmt (17)
                    (Exp) (17)
                      LVal_EXP (17)
                        LVal (17)
                          IDENTIFIER b
                          ArrayExps (17)
  CompUnits (21)
    FuncDef (21)
      NOFParam (21)
      Block (22)
        BlockItems (22)
          Return_Stmt (22)
            (Exp) (22)
              funcall (22)
                IDENTIFIER ifWhile


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
ifWhile        Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:ifWhile
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:ifWhile
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
===========================================================
456
789
789
456
789
789
456
789
789
456
789
789
789
789
789
456
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
456
789
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   1)	FUNCTION ifWhile :
  2  (at line   3)	_t0 := #0
  3  (at line   3)	a := _t0
  4  (at line   5)	_t1 := #3
  5  (at line   5)	b := _t1
  6  (at line   6)	_t2 := a
  7  (at line   6)	_t5 := #5
  8  (at line   6)	IF _t2 = _t5 GOTO label0
  9  (at line   6)	GOTO label1
 10  (at line   6)	LABEL label0 :
 11  (at line   7)	LABEL label2 :
 12  (at line   7)	_t6 := b
 13  (at line   7)	_t9 := #2
 14  (at line   7)	IF _t6 = _t9 GOTO label3
 15  (at line   7)	GOTO label4
 16  (at line   7)	LABEL label3 :
 17  (at line   8)	_t11 := b
 18  (at line   8)	_t12 := #2
 19  (at line   8)	_t10 := _t11 + _t12
 20  (at line   8)	b := _t10
 21  (at line   7)	GOTO label2
 22  (at line   7)	LABEL label4 :
 23  (at line  10)	_t14 := b
 24  (at line  10)	_t15 := #25
 25  (at line  10)	_t13 := _t14 + _t15
 26  (at line  10)	b := _t13
 27  (at line   6)	GOTO label5
 28  (at line   6)	LABEL label1 :
 29  (at line  13)	LABEL label6 :
 30  (at line  13)	_t16 := a
 31  (at line  13)	_t19 := #5
 32  (at line  13)	IF _t16 < _t19 GOTO label7
 33  (at line  13)	GOTO label8
 34  (at line  13)	LABEL label7 :
 35  (at line  14)	_t21 := b
 36  (at line  14)	_t22 := #2
 37  (at line  14)	_t20 := _t21 * _t22
 38  (at line  14)	b := _t20
 39  (at line  15)	_t24 := a
 40  (at line  15)	_t25 := #1
 41  (at line  15)	_t23 := _t24 + _t25
 42  (at line  15)	a := _t23
 43  (at line  13)	GOTO label6
 44  (at line  13)	LABEL label8 :
 45  (at line   6)	LABEL label5 :
 46  (at line  17)	_t27 := b
 47  (at line  17)	_t26 := _t27
 48  (at line  17)	RETURN _t26

 49  (at line  21)	FUNCTION main :
 50  (at line  22)	_t29 := CALL ifWhile
 51  (at line  22)	_t28 := _t29
 52  (at line  22)	RETURN _t28


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
ifWhile        Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:ifWhile
ID             category       type           depictor
              
               NOParam                       NOT NULL       
scope type is wrong
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
===========================================================
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
Variable offset count+4 :a
Variable offset count+4 :b
Variable offset count+4 :a
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t0
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t1
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t2
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t5
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t16
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t19
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t20
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t21
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t22
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t23
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t24
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t25
Variable offset count+4 :_t26
scope type not local in functiondf
scopeprev:1
Variable offset count+4 :_t27
tac type ASSIGN
 assign 0 to tegisteruserreg0contains0
userreg1contains0
userreg2contains0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
0
userreg0contains0x89ec60
tac type ASSIGN
userreg0contains0x89ec60
userreg1contains0
userreg2contains0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x89ec60
tac type ASSIGN
 assign 3 to tegisteruserreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
2
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
tac type ASSIGN
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
tac type ASSIGN
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x89ec60
userreg1contains0x8968a0
tac type ASSIGN
 assign 5 to tegisteruserreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
5
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
tac type IFEQ
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
tac type GOTO
Goto string B L1

tac type LABELDF
L0:

tac type LABELDF
L2:

tac type ASSIGN
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
tac type ASSIGN
 assign 2 to tegisteruserreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0
userreg9contains0
userreg10contains0
8
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
tac type IFEQ
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
tac type GOTO
Goto string B L4

tac type LABELDF
L3:

tac type ASSIGN
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0
userreg10contains0
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
tac type ASSIGN
 assign 2 to tegisteruserreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0
10
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a00a0
tac type ADD
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a00a0
Store Register in getregisterNoLoad variable
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x89ff40
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ASSIGN
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a00a0
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type GOTO
Goto string B L2

tac type LABELDF
L4:

tac type ASSIGN
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x89ff40
Store Register in getregisterNoLoad variable
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
tac type ASSIGN
 assign 25 to tegisteruserreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a0440
Store Register in getregisterNoLoad variable
10
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a04f0
tac type ADD
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a04f0
Store Register in getregisterNoLoad variable
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a0390
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a0440
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ASSIGN
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a04f0
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type GOTO
Goto string B L5

tac type LABELDF
L1:

tac type LABELDF
L6:

tac type ASSIGN
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a0390
Store Register in getregisterNoLoad variable
userreg0contains0x89ec60
userreg1contains0x8968a0
tac type ASSIGN
 assign 5 to tegisteruserreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a0840
Store Register in getregisterNoLoad variable
10
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a0950
tac type IFLT
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a0950
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a0840
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type GOTO
Goto string B L8

tac type LABELDF
L7:

tac type ASSIGN
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a0950
Store Register in getregisterNoLoad variable
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
tac type ASSIGN
 assign 2 to tegisteruserreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a0c90
Store Register in getregisterNoLoad variable
10
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a0d40
tac type MUL
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a0d40
Store Register in getregisterNoLoad variable
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a0be0
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a0c90
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ASSIGN
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a0d40
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ASSIGN
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a0be0
Store Register in getregisterNoLoad variable
userreg0contains0x89ec60
userreg1contains0x8968a0
tac type ASSIGN
 assign 1 to tegisteruserreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a1020
Store Register in getregisterNoLoad variable
10
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a10d0
tac type ADD
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a10d0
Store Register in getregisterNoLoad variable
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a0f70
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a1020
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ASSIGN
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a10d0
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type GOTO
Goto string B L6

tac type LABELDF
L8:

tac type LABELDF
L5:

tac type ASSIGN
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a0f70
Store Register in getregisterNoLoad variable
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
tac type ASSIGN
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a1590
Store Register in getregisterNoLoad variable
userreg0contains0x89ec60
userreg1contains0x8968a0
userreg2contains0x89ee60
userreg3contains0x8970f0
userreg4contains0x89f570
userreg5contains0x89f680
userreg6contains0x89f910
userreg8contains0x89fcb0
userreg9contains0x89fff0
userreg10contains0x8a14e0
register:-1
terminate called after throwing an instance of 'std::runtime_error'
  what():  no variable in this register
Aborted (core dumped)
