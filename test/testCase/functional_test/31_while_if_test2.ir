--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("ifWhile")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("3")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 101 ("if")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 93 ("==")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("5")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 93 ("==")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("25")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 102 ("else")
--accepting rule at line 114 (" ")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("5")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 86 ("*")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
<int>
<id,ifWhile>
<(>
<)>
<{>
<int>
<id,a>
<;>
<id,a>
<=>
Lval
<into>
ExpNumber:0
<;>
stmt1
<int>
<id,b>
<;>
<id,b>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<if>
<(>
<id,a>
<==>
Lval
<intd>
ExpNumber:0
<)>
<{>
<while>
<(>
<id,b>
<==>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,b>
<=>
Lval
<id,b>
<+>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,b>
<=>
Lval
<id,b>
<+>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<else>
<while>
<(>
<id,a>
<<>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,b>
<=>
Lval
<id,b>
<*>
Lval
<intd>
ExpNumber:0
<;>
s--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("b")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("ifWhile")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
tmt1
<id,a>
<=>
Lval
<id,a>
<+>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<(>
<id,b>
<)>
Lval
<;>
<}>
<int>
<id,main>
<(>
<)>
<{>
<return>
<(>
<id,ifWhile>
<(>
<)>
<)>
<;>
<}>
CompUnits (1)
  FuncDef (1)
    FuncFParam (1)
    Block (2)
      BlockItems (2)
        VarDecl (2)
          IDENTIFIER a
        BlockItems (3)
          Lval_Opassign_Stmt (3)
            LVal (3)
              IDENTIFIER a
              ArrayExps (3)
            IntConst (3)
              CONSTANTOCT: 0
          BlockItems (4)
            VarDecl (4)
              IDENTIFIER b
            BlockItems (5)
              Lval_Opassign_Stmt (5)
                LVal (5)
                  IDENTIFIER b
                  ArrayExps (5)
                IntConst (5)
                  CONSTANTINTD: 3
              BlockItems (6)
                IF_ELSE_Stmt (6)
                  Cond (6)
                    OPEQUAL (6)
                      LVal_EXP (6)
                        LVal (6)
                          IDENTIFIER a
                          ArrayExps (6)
                      IntConst (6)
                        CONSTANTINTD: 5
                  Block_Stmt (7)
                    Block (7)
                      BlockItems (7)
                        While_Stmt (7)
                          Cond (7)
                            OPEQUAL (7)
                              LVal_EXP (7)
                                LVal (7)
                                  IDENTIFIER b
                                  ArrayExps (7)
                              IntConst (7)
                                CONSTANTINTD: 2
                          Block_Stmt (8)
                            Block (8)
                              BlockItems (8)
                                Lval_Opassign_Stmt (8)
                                  LVal (8)
                                    IDENTIFIER b
                                    ArrayExps (8)
                                  PLUSExp (8)
                                    LVal_EXP (8)
                                      LVal (8)
                                        IDENTIFIER b
                                        ArrayExps (8)
                                    IntConst (8)
                                      CONSTANTINTD: 2
                        BlockItems (10)
                          Lval_Opassign_Stmt (10)
                            LVal (10)
                              IDENTIFIER b
                              ArrayExps (10)
                            PLUSExp (10)
                              LVal_EXP (10)
                                LVal (10)
                                  IDENTIFIER b
                                  ArrayExps (10)
                              IntConst (10)
                                CONSTANTINTD: 25
                  While_Stmt (13)
                    Cond (13)
                      OPLIGHT (13)
                        LVal_EXP (13)
                          LVal (13)
                            IDENTIFIER a
                            ArrayExps (13)
                        IntConst (13)
                          CONSTANTINTD: 5
                    Block_Stmt (14)
                      Block (14)
                        BlockItems (14)
                          Lval_Opassign_Stmt (14)
                            LVal (14)
                              IDENTIFIER b
                              ArrayExps (14)
                            MulExp (14)
                              LVal_EXP (14)
                                LVal (14)
                                  IDENTIFIER b
                                  ArrayExps (14)
                              IntConst (14)
                                CONSTANTINTD: 2
                          BlockItems (15)
                            Lval_Opassign_Stmt (15)
                              LVal (15)
                                IDENTIFIER a
                                ArrayExps (15)
                              PLUSExp (15)
                                LVal_EXP (15)
                                  LVal (15)
                                    IDENTIFIER a
                                    ArrayExps (15)
                                IntConst (15)
                                  CONSTANTINTD: 1
                BlockItems (17)
                  Return_Stmt (17)
                    (Exp) (17)
                      LVal_EXP (17)
                        LVal (17)
                          IDENTIFIER b
                          ArrayExps (17)
  CompUnits (21)
    FuncDef (21)
      FuncFParam (21)
      Block (22)
        BlockItems (22)
          Return_Stmt (22)
            (Exp) (22)
              funcall (22)
                IDENTIFIER ifWhile


===========================================================
Global
ID             category       type           depictor
               
ifWhile        Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:ifWhile
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:ifWhile
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
               Block          BLOCKStmt      NULL           
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NULL           
Segmentation fault (core dumped)
