arg S
--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("QuickSort")
--accepting rule at line 80 ("(")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("arr")
--accepting rule at line 82 ("[")
--accepting rule at line 83 ("]")
--accepting rule at line 76 (",")
<int>
<id,n>
<;>
<int>
<id,QuickSort>
<(>
<int>
<id,arr>
<[>
<]>
<,>
33333333333
1111111111111111
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("low")
--accepting rule at line 76 (",")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("high")
--accepting rule at line 81 (")")
--accepting rule at line 115 ("
")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 101 ("if")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("low")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
<int>
<id,low>
<,>
<int>
<id,high>
<)>
<{>
<if>
<(>
<id,low>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("high")
--accepting rule at line 81 (")")
Lval
<id,high>
<)>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<{>
<int>
<id,i>
<;>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("low")
--accepting rule at line 75 (";")
Lval
<id,low>
<;>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<int>
<id,j>
<;>
<id,j>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("high")
--accepting rule at line 75 (";")
Lval
<id,high>
<;>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<int>
<id,k>
<;>
<id,k>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("low")
--accepting rule at line 83 ("]")
Lval
<id,arr>
<[>
<id,low>
<]>
33333333333
--accepting rule at line 75 (";")
Lval
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
stmt1
<while>
<(>
<id,i>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 81 (")")
Lval
<id,j>
<)>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<{>
<while>
<(>
<id,i>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 90 ("&&")
Lval
<id,j>
<&&>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 83 ("]")
Lval
<id,arr>
<[>
<id,j>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 95 (">")
Lval
<>>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,k>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 81 (")")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,j>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,j>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 101 ("if")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<if>
<(>
<id,i>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 81 (")")
Lval
<id,j>
<)>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<{>
<id,arr>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 83 ("]")
Lval
<id,arr>
<[>
<id,j>
<]>
33333333333
--accepting rule at line 75 (";")
Lval
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,i>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<while>
<(>
<id,i>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 90 ("&&")
Lval
<id,j>
<&&>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<id,arr>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<<>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 81 (")")
Lval
<id,k>
<)>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<{>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,i>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 101 ("if")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<if>
<(>
<id,i>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 81 (")")
Lval
<id,j>
<)>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 83 ("]")
Lval
<{>
<id,arr>
<[>
<id,j>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<id,arr>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 75 (";")
Lval
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<id,j>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,j>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<}>
<id,arr>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 75 (";")
Lval
<id,k>
<;>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<int>
<id,tmp>
<;>
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,i>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("QuickSort")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("arr")
--accepting rule at line 76 (",")
Lval
<id,QuickSort>
<(>
<id,arr>
<,>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("low")
--accepting rule at line 76 (",")
Lval
<id,low>
<,>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 81 (")")
Lval
<id,tmp>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<;>
stmt1
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,i>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("QuickSort")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("arr")
--accepting rule at line 76 (",")
Lval
<id,QuickSort>
<(>
<id,arr>
<,>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 76 (",")
Lval
<id,tmp>
<,>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("high")
--accepting rule at line 81 (")")
Lval
<id,high>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<;>
stmt1
<}>
<return>
<into>
ExpNumber:0
<;>
<}>
<int>
<id,main>
<(>
<)>
<{>
<id,n>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("10")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 111 ("0")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<;>
<id,a>
<[>
<into>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("4")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("3")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("2")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("9")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("3")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("4")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("5")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("6")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("6")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("7")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("5")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("8")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("7")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("9")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("8")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,i>
<;>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<int>
<id,tmp>
<;>
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("9")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("QuickSort")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 76 (",")
Lval
<id,QuickSort>
<(>
<id,a>
<,>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 76 (",")
Lval
<id,i>
<,>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 81 (")")
Lval
<id,tmp>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<;>
stmt1
<while>
<(>
<id,i>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 81 (")")
Lval
<id,n>
<)>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<{>
<int>
<id,tmp>
<;>
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<id,a>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 75 (";")
Lval
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putint")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("tmp")
--accepting rule at line 81 (")")
Lval
stmt1
<id,putint>
<(>
<id,tmp>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<;>
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putch")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("tmp")
--accepting rule at line 81 (")")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,putch>
<(>
<id,tmp>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<;>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,i>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<into>
ExpNumber:0
<;>
<}>
CompUnits (1)
  VarDecl (1)
    IDENTIFIER n
  CompUnits (2)
    FuncDef (2)
      FuncFParams (2)
        FuncFParam (2)
          ArrayExps (2)
        FuncFParams (2)
          FuncFParam (2)
          FuncFParam (2)
      Block (4)
        BlockItems (4)
          IF_Stmt (4)
            Cond (4)
              OPLIGHT (4)
                LVal_EXP (4)
                  LVal (4)
                    IDENTIFIER low
                    ArrayExps (4)
                LVal_EXP (4)
                  LVal (4)
                    IDENTIFIER high
                    ArrayExps (4)
            Block_Stmt (6)
              Block (6)
                BlockItems (6)
                  VarDecl (6)
                    IDENTIFIER i
                  BlockItems (7)
                    Lval_Opassign_Stmt (7)
                      LVal (7)
                        IDENTIFIER i
                        ArrayExps (7)
                      LVal_EXP (7)
                        LVal (7)
                          IDENTIFIER low
                          ArrayExps (7)
                    BlockItems (8)
                      VarDecl (8)
                        IDENTIFIER j
                      BlockItems (9)
                        Lval_Opassign_Stmt (9)
                          LVal (9)
                            IDENTIFIER j
                            ArrayExps (9)
                          LVal_EXP (9)
                            LVal (9)
                              IDENTIFIER high
                              ArrayExps (9)
                        BlockItems (10)
                          VarDecl (10)
                            IDENTIFIER k
                          BlockItems (11)
                            Lval_Opassign_Stmt (11)
                              LVal (11)
                                IDENTIFIER k
                                ArrayExps (11)
                              LVal_EXP (11)
                                LVal (11)
                                  IDENTIFIER arr
                                  ArrayExps (11)
                                    LVal_EXP (11)
                                      LVal (11)
                                        IDENTIFIER low
                                        ArrayExps (11)
                                    ArrayExps (11)
                            BlockItems (12)
                              While_Stmt (12)
                                Cond (12)
                                  OPLIGHT (12)
                                    LVal_EXP (12)
                                      LVal (12)
                                        IDENTIFIER i
                                        ArrayExps (12)
                                    LVal_EXP (12)
                                      LVal (12)
                                        IDENTIFIER j
                                        ArrayExps (12)
                                Block_Stmt (14)
                                  Block (14)
                                    BlockItems (14)
                                      While_Stmt (14)
                                        Cond_And (14)
                                          Cond (14)
                                            OPLIGHT (14)
                                              LVal_EXP (14)
                                                LVal (14)
                                                  IDENTIFIER i
                                                  ArrayExps (14)
                                              LVal_EXP (14)
                                                LVal (14)
                                                  IDENTIFIER j
                                                  ArrayExps (14)
                                          Cond (14)
                                            OPGREAT (14)
                                              LVal_EXP (14)
                                                LVal (14)
                                                  IDENTIFIER arr
                                                  ArrayExps (14)
                                                    LVal_EXP (14)
                                                      LVal (14)
                                                        IDENTIFIER j
                                                        ArrayExps (14)
                                                    ArrayExps (14)
                                              MINUSExp (14)
                                                LVal_EXP (14)
                                                  LVal (14)
                                                    IDENTIFIER k
                                                    ArrayExps (14)
                                                IntConst (14)
                                                  CONSTANTINTD: 1
                                        Block_Stmt (16)
                                          Block (16)
                                            BlockItems (16)
                                              Lval_Opassign_Stmt (16)
                                                LVal (16)
                                                  IDENTIFIER j
                                                  ArrayExps (16)
                                                MINUSExp (16)
                                                  LVal_EXP (16)
                                                    LVal (16)
                                                      IDENTIFIER j
                                                      ArrayExps (16)
                                                  IntConst (16)
                                                    CONSTANTINTD: 1
                                      BlockItems (19)
                                        IF_Stmt (19)
                                          Cond (19)
                                            OPLIGHT (19)
                                              LVal_EXP (19)
                                                LVal (19)
                                                  IDENTIFIER i
                                                  ArrayExps (19)
                                              LVal_EXP (19)
                                                LVal (19)
                                                  IDENTIFIER j
                                                  ArrayExps (19)
                                          Block_Stmt (21)
                                            Block (21)
                                              BlockItems (21)
                                                Lval_Opassign_Stmt (21)
                                                  LVal (21)
                                                    IDENTIFIER arr
                                                    ArrayExps (21)
                                                      LVal_EXP (21)
                                                        LVal (21)
                                                          IDENTIFIER i
                                                          ArrayExps (21)
                                                      ArrayExps (21)
                                                  LVal_EXP (21)
                                                    LVal (21)
                                                      IDENTIFIER arr
                                                      ArrayExps (21)
                                                        LVal_EXP (21)
                                                          LVal (21)
                                                            IDENTIFIER j
                                                            ArrayExps (21)
                                                        ArrayExps (21)
                                                BlockItems (22)
                                                  Lval_Opassign_Stmt (22)
                                                    LVal (22)
                                                      IDENTIFIER i
                                                      ArrayExps (22)
                                                    PLUSExp (22)
                                                      LVal_EXP (22)
                                                        LVal (22)
                                                          IDENTIFIER i
                                                          ArrayExps (22)
                                                      IntConst (22)
                                                        CONSTANTINTD: 1
                                        BlockItems (25)
                                          While_Stmt (25)
                                            Cond_And (25)
                                              Cond (25)
                                                OPLIGHT (25)
                                                  LVal_EXP (25)
                                                    LVal (25)
                                                      IDENTIFIER i
                                                      ArrayExps (25)
                                                  LVal_EXP (25)
                                                    LVal (25)
                                                      IDENTIFIER j
                                                      ArrayExps (25)
                                              Cond (25)
                                                OPLIGHT (25)
                                                  LVal_EXP (25)
                                                    LVal (25)
                                                      IDENTIFIER arr
                                                      ArrayExps (25)
                                                        LVal_EXP (25)
                                                          LVal (25)
                                                            IDENTIFIER i
                                                            ArrayExps (25)
                                                        ArrayExps (25)
                                                  LVal_EXP (25)
                                                    LVal (25)
                                                      IDENTIFIER k
                                                      ArrayExps (25)
                                            Block_Stmt (27)
                                              Block (27)
                                                BlockItems (27)
                                                  Lval_Opassign_Stmt (27)
                                                    LVal (27)
                                                      IDENTIFIER i
                                                      ArrayExps (27)
                                                    PLUSExp (27)
                                                      LVal_EXP (27)
                                                        LVal (27)
                                                          IDENTIFIER i
                                                          ArrayExps (27)
                                                      IntConst (27)
                                                        CONSTANTINTD: 1
                                          BlockItems (30)
                                            IF_Stmt (30)
                                              Cond (30)
                                                OPLIGHT (30)
                                                  LVal_EXP (30)
                                                    LVal (30)
                                                      IDENTIFIER i
                                                      ArrayExps (30)
                                                  LVal_EXP (30)
                                                    LVal (30)
                                                      IDENTIFIER j
                                                      ArrayExps (30)
                                              Block_Stmt (32)
                                                Block (32)
                                                  BlockItems (32)
                                                    Lval_Opassign_Stmt (32)
                                                      LVal (32)
                                                        IDENTIFIER arr
                                                        ArrayExps (32)
                                                          LVal_EXP (32)
                                                            LVal (32)
                                                              IDENTIFIER j
                                                              ArrayExps (32)
                                                          ArrayExps (32)
                                                      LVal_EXP (32)
                                                        LVal (32)
                                                          IDENTIFIER arr
                                                          ArrayExps (32)
                                                            LVal_EXP (32)
                                                              LVal (32)
                                                                IDENTIFIER i
                                                                ArrayExps (32)
                                                            ArrayExps (32)
                                                    BlockItems (33)
                                                      Lval_Opassign_Stmt (33)
                                                        LVal (33)
                                                          IDENTIFIER j
                                                          ArrayExps (33)
                                                        MINUSExp (33)
                                                          LVal_EXP (33)
                                                            LVal (33)
                                                              IDENTIFIER j
                                                              ArrayExps (33)
                                                          IntConst (33)
                                                            CONSTANTINTD: 1
                              BlockItems (37)
                                Lval_Opassign_Stmt (37)
                                  LVal (37)
                                    IDENTIFIER arr
                                    ArrayExps (37)
                                      LVal_EXP (37)
                                        LVal (37)
                                          IDENTIFIER i
                                          ArrayExps (37)
                                      ArrayExps (37)
                                  LVal_EXP (37)
                                    LVal (37)
                                      IDENTIFIER k
                                      ArrayExps (37)
                                BlockItems (38)
                                  VarDecl (38)
                                    IDENTIFIER tmp
                                  BlockItems (39)
                                    Lval_Opassign_Stmt (39)
                                      LVal (39)
                                        IDENTIFIER tmp
                                        ArrayExps (39)
                                      MINUSExp (39)
                                        LVal_EXP (39)
                                          LVal (39)
                                            IDENTIFIER i
                                            ArrayExps (39)
                                        IntConst (39)
                                          CONSTANTINTD: 1
                                    BlockItems (40)
                                      Lval_Opassign_Stmt (40)
                                        LVal (40)
                                          IDENTIFIER tmp
                                          ArrayExps (40)
                                        funcall (40)
                                          IDENTIFIER QuickSort
                                          FuncRParams (40)
                                            LVal_EXP (40)
                                              LVal (40)
                                                IDENTIFIER arr
                                                ArrayExps (40)
                                            Exps (40)
                                              LVal_EXP (40)
                                                LVal (40)
                                                  IDENTIFIER low
                                                  ArrayExps (40)
                                              Exps (40)
                                                LVal_EXP (40)
                                                  LVal (40)
                                                    IDENTIFIER tmp
                                                    ArrayExps (40)
                                      BlockItems (41)
                                        Lval_Opassign_Stmt (41)
                                          LVal (41)
                                            IDENTIFIER tmp
                                            ArrayExps (41)
                                          PLUSExp (41)
                                            LVal_EXP (41)
                                              LVal (41)
                                                IDENTIFIER i
                                                ArrayExps (41)
                                            IntConst (41)
                                              CONSTANTINTD: 1
                                        BlockItems (42)
                                          Lval_Opassign_Stmt (42)
                                            LVal (42)
                                              IDENTIFIER tmp
                                              ArrayExps (42)
                                            funcall (42)
                                              IDENTIFIER QuickSort
                                              FuncRParams (42)
                                                LVal_EXP (42)
                                                  LVal (42)
                                                    IDENTIFIER arr
                                                    ArrayExps (42)
                                                Exps (42)
                                                  LVal_EXP (42)
                                                    LVal (42)
                                                      IDENTIFIER tmp
                                                      ArrayExps (42)
                                                  Exps (42)
                                                    LVal_EXP (42)
                                                      LVal (42)
                                                        IDENTIFIER high
                                                        ArrayExps (42)
          BlockItems (44)
            Return_Stmt (44)
              IntConst (44)
                CONSTANTOCT: 0
    CompUnits (47)
      FuncDef (47)
        NOFParam (47)
        Block (48)
          BlockItems (48)
            Lval_Opassign_Stmt (48)
              LVal (48)
                IDENTIFIER n
                ArrayExps (48)
              IntConst (48)
                CONSTANTINTD: 10
            BlockItems (49)
              VarDecl (49)
                ArrayDec: demmision=0
                  IDENTIFIER a
              BlockItems (50)
                Lval_Opassign_Stmt (50)
                  LVal (50)
                    IDENTIFIER a
                    ArrayExps (50)
                      IntConst (50)
                        CONSTANTOCT: 0
                      ArrayExps (50)
                  IntConst (50)
                    CONSTANTINTD: 4
                BlockItems (50)
                  Lval_Opassign_Stmt (50)
                    LVal (50)
                      IDENTIFIER a
                      ArrayExps (50)
                        IntConst (50)
                          CONSTANTINTD: 1
                        ArrayExps (50)
                    IntConst (50)
                      CONSTANTINTD: 3
                  BlockItems (50)
                    Lval_Opassign_Stmt (50)
                      LVal (50)
                        IDENTIFIER a
                        ArrayExps (50)
                          IntConst (50)
                            CONSTANTINTD: 2
                          ArrayExps (50)
                      IntConst (50)
                        CONSTANTINTD: 9
                    BlockItems (50)
                      Lval_Opassign_Stmt (50)
                        LVal (50)
                          IDENTIFIER a
                          ArrayExps (50)
                            IntConst (50)
                              CONSTANTINTD: 3
                            ArrayExps (50)
                        IntConst (50)
                          CONSTANTINTD: 2
                      BlockItems (50)
                        Lval_Opassign_Stmt (50)
                          LVal (50)
                            IDENTIFIER a
                            ArrayExps (50)
                              IntConst (50)
                                CONSTANTINTD: 4
                              ArrayExps (50)
                          IntConst (50)
                            CONSTANTOCT: 0
                        BlockItems (51)
                          Lval_Opassign_Stmt (51)
                            LVal (51)
                              IDENTIFIER a
                              ArrayExps (51)
                                IntConst (51)
                                  CONSTANTINTD: 5
                                ArrayExps (51)
                            IntConst (51)
                              CONSTANTINTD: 1
                          BlockItems (51)
                            Lval_Opassign_Stmt (51)
                              LVal (51)
                                IDENTIFIER a
                                ArrayExps (51)
                                  IntConst (51)
                                    CONSTANTINTD: 6
                                  ArrayExps (51)
                              IntConst (51)
                                CONSTANTINTD: 6
                            BlockItems (51)
                              Lval_Opassign_Stmt (51)
                                LVal (51)
                                  IDENTIFIER a
                                  ArrayExps (51)
                                    IntConst (51)
                                      CONSTANTINTD: 7
                                    ArrayExps (51)
                                IntConst (51)
                                  CONSTANTINTD: 5
                              BlockItems (51)
                                Lval_Opassign_Stmt (51)
                                  LVal (51)
                                    IDENTIFIER a
                                    ArrayExps (51)
                                      IntConst (51)
                                        CONSTANTINTD: 8
                                      ArrayExps (51)
                                  IntConst (51)
                                    CONSTANTINTD: 7
                                BlockItems (51)
                                  Lval_Opassign_Stmt (51)
                                    LVal (51)
                                      IDENTIFIER a
                                      ArrayExps (51)
                                        IntConst (51)
                                          CONSTANTINTD: 9
                                        ArrayExps (51)
                                    IntConst (51)
                                      CONSTANTINTD: 8
                                  BlockItems (52)
                                    VarDecl (52)
                                      IDENTIFIER i
                                    BlockItems (53)
                                      Lval_Opassign_Stmt (53)
                                        LVal (53)
                                          IDENTIFIER i
                                          ArrayExps (53)
                                        IntConst (53)
                                          CONSTANTOCT: 0
                                      BlockItems (54)
                                        VarDecl (54)
                                          IDENTIFIER tmp
                                        BlockItems (55)
                                          Lval_Opassign_Stmt (55)
                                            LVal (55)
                                              IDENTIFIER tmp
                                              ArrayExps (55)
                                            IntConst (55)
                                              CONSTANTINTD: 9
                                          BlockItems (56)
                                            Lval_Opassign_Stmt (56)
                                              LVal (56)
                                                IDENTIFIER i
                                                ArrayExps (56)
                                              funcall (56)
                                                IDENTIFIER QuickSort
                                                FuncRParams (56)
                                                  LVal_EXP (56)
                                                    LVal (56)
                                                      IDENTIFIER a
                                                      ArrayExps (56)
                                                  Exps (56)
                                                    LVal_EXP (56)
                                                      LVal (56)
                                                        IDENTIFIER i
                                                        ArrayExps (56)
                                                    Exps (56)
                                                      LVal_EXP (56)
                                                        LVal (56)
                                                          IDENTIFIER tmp
                                                          ArrayExps (56)
                                            BlockItems (57)
                                              While_Stmt (57)
                                                Cond (57)
                                                  OPLIGHT (57)
                                                    LVal_EXP (57)
                                                      LVal (57)
                                                        IDENTIFIER i
                                                        ArrayExps (57)
                                                    LVal_EXP (57)
                                                      LVal (57)
                                                        IDENTIFIER n
                                                        ArrayExps (57)
                                                Block_Stmt (58)
                                                  Block (58)
                                                    BlockItems (58)
                                                      VarDecl (58)
                                                        IDENTIFIER tmp
                                                      BlockItems (59)
                                                        Lval_Opassign_Stmt (59)
                                                          LVal (59)
                                                            IDENTIFIER tmp
                                                            ArrayExps (59)
                                                          LVal_EXP (59)
                                                            LVal (59)
                                                              IDENTIFIER a
                                                              ArrayExps (59)
                                                                LVal_EXP (59)
                                                                  LVal (59)
                                                                    IDENTIFIER i
                                                                    ArrayExps (59)
                                                                ArrayExps (59)
                                                        BlockItems (60)
                                                          Exp_Stmt (60)
                                                            funcall (60)
                                                              IDENTIFIER putint
                                                              FuncRParams (60)
                                                                LVal_EXP (60)
                                                                  LVal (60)
                                                                    IDENTIFIER tmp
                                                                    ArrayExps (60)
                                                          BlockItems (61)
                                                            Lval_Opassign_Stmt (61)
                                                              LVal (61)
                                                                IDENTIFIER tmp
                                                                ArrayExps (61)
                                                              IntConst (61)
                                                                CONSTANTINTD: 10
                                                            BlockItems (62)
                                                              Exp_Stmt (62)
                                                                funcall (62)
                                                                  IDENTIFIER putch
                                                                  FuncRParams (62)
                                                                    LVal_EXP (62)
                                                                      LVal (62)
                                                                        IDENTIFIER tmp
                                                                        ArrayExps (62)
                                                              BlockItems (63)
                                                                Lval_Opassign_Stmt (63)
                                                                  LVal (63)
                                                                    IDENTIFIER i
                                                                    ArrayExps (63)
                                                                  PLUSExp (63)
                                                                    LVal_EXP (63)
                                                                      LVal (63)
                                                                        IDENTIFIER i
                                                                        ArrayExps (63)
                                                                    IntConst (63)
                                                                      CONSTANTINTD: 1
                                              BlockItems (65)
                                                Return_Stmt (65)
                                                  IntConst (65)
                                                    CONSTANTOCT: 0


===========================================================
Global
ID             category       type           depictor
               
n              Variable       TYPEINTEGER    NULL           
QuickSort      Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:QuickSort
ID             category       type           depictor
              
arr            Array          TYPEINTEGER    ----------> dim=1
low            Variable       TYPEINTEGER    NOT NULL       
high           Variable       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Local:QuickSort
ID             category       type           depictor
              
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
i              Variable       TYPEINTEGER    NULL           
j              Variable       TYPEINTEGER    NULL           
k              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
tmp            Variable       TYPEINTEGER    NULL           
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
a              Array          TYPEINTEGER    ----------> dim=1
i              Variable       TYPEINTEGER    NULL           
tmp            Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
tmp            Variable       TYPEINTEGER    NULL           
===========================================================
789
456
789
456
789
789
789
456
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
456
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
456
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
TraverseScopeStack no result
789
789
789
789
456
789
789
789
789
789
456
789
789
789
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
TraverseScopeStack no result
789
789
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   2)	FUNCTION QuickSort :
  2  (at line   2)	PARAM arr
  3  (at line   2)	PARAM low
  4  (at line   2)	PARAM high
  5  (at line   4)	_t0 := low
  6  (at line   4)	_t3 := high
  7  (at line   4)	IF _t0 < _t3 GOTO label0
  8  (at line   4)	GOTO label1
  9  (at line   4)	LABEL label0 :
 10  (at line   7)	_t4 := low
 11  (at line   7)	i := _t4
 12  (at line   9)	_t5 := high
 13  (at line   9)	j := _t5
 14  (at line  11)	_t9 := low
 15  (at line  11)	_t6 := arr[_t9]
 16  (at line  11)	k := _t6
 17  (at line  12)	LABEL label2 :
 18  (at line  12)	_t11 := i
 19  (at line  12)	_t14 := j
 20  (at line  12)	IF _t11 < _t14 GOTO label3
 21  (at line  12)	GOTO label4
 22  (at line  12)	LABEL label3 :
 23  (at line  14)	LABEL label5 :
 24  (at line  14)	_t15 := i
 25  (at line  14)	_t18 := j
 26  (at line  14)	IF _t15 < _t18 GOTO label8
 27  (at line  14)	GOTO label7
 28  (at line  14)	LABEL label8 :
 29  (at line  14)	_t24 := j
 30  (at line  14)	_t19 := arr[_t24]
 31  (at line  14)	_t27 := k
 32  (at line  14)	_t28 := #1
 33  (at line  14)	_t26 := _t27 - _t28
 34  (at line  14)	IF _t19 > _t26 GOTO label6
 35  (at line  14)	GOTO label7
 36  (at line  14)	LABEL label6 :
 37  (at line  16)	_t30 := j
 38  (at line  16)	_t31 := #1
 39  (at line  16)	_t29 := _t30 - _t31
 40  (at line  16)	j := _t29
 41  (at line  14)	GOTO label5
 42  (at line  14)	LABEL label7 :
 43  (at line  19)	_t32 := i
 44  (at line  19)	_t35 := j
 45  (at line  19)	IF _t32 < _t35 GOTO label9
 46  (at line  19)	GOTO label10
 47  (at line  19)	LABEL label9 :
 48  (at line  21)	_t39 := j
 49  (at line  21)	_t36 := arr[_t39]
 50  (at line  21)	_t43 := i
 51  (at line  21)	arr[_t43] := _t36
 52  (at line  22)	_t46 := i
 53  (at line  22)	_t47 := #1
 54  (at line  22)	_t45 := _t46 + _t47
 55  (at line  22)	i := _t45
 56  (at line  19)	LABEL label10 :
 57  (at line  25)	LABEL label11 :
 58  (at line  25)	_t48 := i
 59  (at line  25)	_t51 := j
 60  (at line  25)	IF _t48 < _t51 GOTO label14
 61  (at line  25)	GOTO label13
 62  (at line  25)	LABEL label14 :
 63  (at line  25)	_t57 := i
 64  (at line  25)	_t52 := arr[_t57]
 65  (at line  25)	_t59 := k
 66  (at line  25)	IF _t52 < _t59 GOTO label12
 67  (at line  25)	GOTO label13
 68  (at line  25)	LABEL label12 :
 69  (at line  27)	_t61 := i
 70  (at line  27)	_t62 := #1
 71  (at line  27)	_t60 := _t61 + _t62
 72  (at line  27)	i := _t60
 73  (at line  25)	GOTO label11
 74  (at line  25)	LABEL label13 :
 75  (at line  30)	_t63 := i
 76  (at line  30)	_t66 := j
 77  (at line  30)	IF _t63 < _t66 GOTO label15
 78  (at line  30)	GOTO label16
 79  (at line  30)	LABEL label15 :
 80  (at line  32)	_t70 := i
 81  (at line  32)	_t67 := arr[_t70]
 82  (at line  32)	_t74 := j
 83  (at line  32)	arr[_t74] := _t67
 84  (at line  33)	_t77 := j
 85  (at line  33)	_t78 := #1
 86  (at line  33)	_t76 := _t77 - _t78
 87  (at line  33)	j := _t76
 88  (at line  30)	LABEL label16 :
 89  (at line  12)	GOTO label2
 90  (at line  12)	LABEL label4 :
 91  (at line  37)	_t79 := k
 92  (at line  37)	_t82 := i
 93  (at line  37)	arr[_t82] := _t79
 94  (at line  39)	_t85 := i
 95  (at line  39)	_t86 := #1
 96  (at line  39)	_t84 := _t85 - _t86
 97  (at line  39)	tmp := _t84
 98  (at line  40)	_t90 := low
 99  (at line  40)	_t91 := tmp
100  (at line  40)	ARG _t91
101  (at line  40)	ARG _t90
102  (at line  40)	ARG arr[]
103  (at line  40)	_t87 := CALL QuickSort
104  (at line  40)	tmp := _t87
105  (at line  41)	_t93 := i
106  (at line  41)	_t94 := #1
107  (at line  41)	_t92 := _t93 + _t94
108  (at line  41)	tmp := _t92
109  (at line  42)	_t98 := tmp
110  (at line  42)	_t99 := high
111  (at line  42)	ARG _t99
112  (at line  42)	ARG _t98
113  (at line  42)	ARG arr[]
114  (at line  42)	_t95 := CALL QuickSort
115  (at line  42)	tmp := _t95
116  (at line   4)	LABEL label1 :
117  (at line  44)	_t100 := #0
118  (at line  44)	RETURN _t100

119  (at line  47)	FUNCTION main :
120  (at line  48)	_t101 := #10
121  (at line  48)	n := _t101
122  (at line  50)	_t102 := #4
123  (at line  50)	_t105 := #0
124  (at line  50)	a[_t105] := _t102
125  (at line  50)	_t107 := #3
126  (at line  50)	_t110 := #1
127  (at line  50)	a[_t110] := _t107
128  (at line  50)	_t112 := #9
129  (at line  50)	_t115 := #2
130  (at line  50)	a[_t115] := _t112
131  (at line  50)	_t117 := #2
132  (at line  50)	_t120 := #3
133  (at line  50)	a[_t120] := _t117
134  (at line  50)	_t122 := #0
135  (at line  50)	_t125 := #4
136  (at line  50)	a[_t125] := _t122
137  (at line  51)	_t127 := #1
138  (at line  51)	_t130 := #5
139  (at line  51)	a[_t130] := _t127
140  (at line  51)	_t132 := #6
141  (at line  51)	_t135 := #6
142  (at line  51)	a[_t135] := _t132
143  (at line  51)	_t137 := #5
144  (at line  51)	_t140 := #7
145  (at line  51)	a[_t140] := _t137
146  (at line  51)	_t142 := #7
147  (at line  51)	_t145 := #8
148  (at line  51)	a[_t145] := _t142
149  (at line  51)	_t147 := #8
150  (at line  51)	_t150 := #9
151  (at line  51)	a[_t150] := _t147
152  (at line  53)	_t152 := #0
153  (at line  53)	i := _t152
154  (at line  55)	_t153 := #9
155  (at line  55)	tmp := _t153
156  (at line  49)	_t156 := #10
157  (at line  56)	_t157 := i
158  (at line  56)	_t158 := tmp
159  (at line  56)	ARG _t158
160  (at line  56)	ARG _t157
161  (at line  56)	ARG a[_t156]
162  (at line  56)	_t154 := CALL QuickSort
163  (at line  56)	i := _t154
164  (at line  57)	LABEL label17 :
165  (at line  57)	_t159 := i
166  (at line  57)	_t162 := n
167  (at line  57)	IF _t159 < _t162 GOTO label18
168  (at line  57)	GOTO label19
169  (at line  57)	LABEL label18 :
170  (at line  59)	_t166 := i
171  (at line  59)	_t163 := a[_t166]
172  (at line  59)	tmp := _t163
173  (at line  60)	_t168 := tmp
174  (at line  60)	ARG _t168
175  (at line  60)	CALL 
176  (at line  61)	_t169 := #10
177  (at line  61)	tmp := _t169
178  (at line  62)	_t170 := tmp
179  (at line  62)	ARG _t170
180  (at line  62)	CALL 
181  (at line  63)	_t172 := i
182  (at line  63)	_t173 := #1
183  (at line  63)	_t171 := _t172 + _t173
184  (at line  63)	i := _t171
185  (at line  57)	GOTO label17
186  (at line  57)	LABEL label19 :
187  (at line  65)	_t174 := #0
188  (at line  65)	RETURN _t174


===========================================================
Global
ID             category       type           depictor
               
n              Variable       TYPEINTEGER    NULL           
QuickSort      Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:QuickSort
ID             category       type           depictor
              
arr            Array          TYPEINTEGER    ----------> dim=1
low            Variable       TYPEINTEGER    NOT NULL       
high           Variable       TYPEINTEGER    NOT NULL       
scope type is wrong
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
scope type is wrong
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t0
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t3
Variable offset count+4 :_t100
tec type ASSIGN
findregister: insldr rd=0,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=1,r1=11,r2 offset=0,op2type=1, insefft=0
tac type IFLT
tac type GOTO
Goto string  ControlInstruction tostring
INS B tostring
B L1

tac type LABELDF
L0:

tec type ASSIGN
findregister: insldr rd=2,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=3,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=4,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=5,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=6,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=8,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=9,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type LABELDF
L2:

tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type IFLT
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type GOTO
Goto string  ControlInstruction tostring
INS B tostring
B L4

tac type LABELDF
L3:

tac type LABELDF
L5:

tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type IFLT
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type GOTO
Goto string  ControlInstruction tostring
INS B tostring
B L7

tac type LABELDF
L8:

tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type SUB
compiler: ./ObjectCode/Arm.cpp:85: ARM::ARM(TACCode *, ScopeItem &): Assertion `code.dest.Type = VARIABLE' failed.
Aborted (core dumped)
