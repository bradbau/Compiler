--(end of buffer or a NUL)
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("a")
--accepting rule at line 97 ("=")
--accepting rule at line 125 ("5")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("s")
--accepting rule at line 90 ("[")
--accepting rule at line 125 ("10")
--accepting rule at line 91 ("]")
--accepting rule at line 97 ("=")
--accepting rule at line 86 ("{")
--accepting rule at line 127 ("0")
--accepting rule at line 84 (",")
--accepting rule at line 125 ("1")
--accepting rule at line 84 (",")
--accepting rule at line 125 ("2")
--accepting rule at line 84 (",")
--accepting rule at line 125 ("3")
--accepting rule at line 84 (",")
--accepting rule at line 125 ("4")
--accepting rule at line 84 (",")
--accepting rule at line 125 ("5")
--accepting rule at line 84 (",")
--accepting rule at line 125 ("6")
--accepting rule at line 84 (",")
--accepting rule at line 125 ("7")
--accepting rule at line 84 (",")
--accepting rule at line 125 ("8")
--accepting rule at line 84 (",")
--accepting rule at line 125 ("9")
--accepting rule at line 87 ("}")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 131 ("
")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("main")
--accepting rule at line 88 ("(")
--accepting rule at line 89 (")")
--accepting rule at line 86 ("{")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("i")
--accepting rule at line 97 ("=")
--accepting rule at line 127 ("0")
--accepting rule at line 83 (";")
<int>
<id,a>
<=>
VarDec<intd>
<;>
InitValVarDefVarDefsDeclCompUnit<int>
<id,s>
<[>
VarDec<intd>
<]>
VarDec<=>
<{>
<into>
<,>
InitVal<intd>
<,>
InitVal<intd>
<,>
InitVal<intd>
<,>
InitVal<intd>
<,>
InitVal<intd>
<,>
InitVal<intd>
<,>
InitVal<intd>
<,>
InitVal<intd>
<,>
InitVal<intd>
<}>
InitValInitValListInitValListInitValListInitValListInitValListInitValListInitValListInitValListInitValListInitValListInitValVarDef<;>
VarDefsDeclCompUnit<int>
<id,main>
<(>
<)>
FuncFParams<{>
<int>
<id,i>
VarDec<=>
<into>
<;>--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 111 ("while")
--accepting rule at line 88 ("(")
--accepting rule at line 128 ("s")
--accepting rule at line 90 ("[")
--accepting rule at line 128 ("i")
--accepting rule at line 91 ("]")
--accepting rule at line 106 ("<=")
--accepting rule at line 128 ("a")
--accepting rule at line 89 (")")
--accepting rule at line 86 ("{")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("i")
--accepting rule at line 97 ("=")
--accepting rule at line 128 ("i")
--accepting rule at line 92 ("+")
--accepting rule at line 125 ("1")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 87 ("}")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 124 ("return")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("i")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 87 ("}")
--(end of buffer or a NUL)
--EOF (start condition 0)

InitValVarDefVarDefsDeclBlockItem<while>
<(>
<id,s>
<[>
<id,i>
<]>
ArrayExpsLval
<<=>
ArrayExpsArrayExpsLval
<id,a>
<)>
ArrayExpsLval
Cond<{>
<id,i>
<=>
ArrayExpsLval
<id,i>
<+>
ArrayExpsLval
<intd>
<;>
stmt1
BlockItem<}>
BlockItemsBlockItemsBlockStmtStmtBlockItem<return>
<id,i>
<;>
ArrayExpsLval
StmtBlockItem<}>
BlockItemsBlockItemsBlockItemsBlockItemsBlockCompUnitCompUnitsCompUnitsCompUnitsCompUnitsCompilerCompUnits (1)
  VarDecl (1)
    VarOPassign (1)
      IDENTIFIER a      ConstInitVal (1)
        IntConst (1)
          CONSTANTINTD: 5
  CompUnits (2)
    VarDecl (2)
      VarOPassign (2)
        ArrayDec (2)
          IDENTIFIER s        ConstInitVal (2)
          ConstInitVal (2)
            IntConst (2)
              CONSTANTOCT: 0
          ConstInitValList (2)
            ConstInitVal (2)
              IntConst (2)
                CONSTANTINTD: 1
            ConstInitValList (2)
              ConstInitVal (2)
                IntConst (2)
                  CONSTANTINTD: 2
              ConstInitValList (2)
                ConstInitVal (2)
                  IntConst (2)
                    CONSTANTINTD: 3
                ConstInitValList (2)
                  ConstInitVal (2)
                    IntConst (2)
                      CONSTANTINTD: 4
                  ConstInitValList (2)
                    ConstInitVal (2)
                      IntConst (2)
                        CONSTANTINTD: 5
                    ConstInitValList (2)
                      ConstInitVal (2)
                        IntConst (2)
                          CONSTANTINTD: 6
                      ConstInitValList (2)
                        ConstInitVal (2)
                          IntConst (2)
                            CONSTANTINTD: 7
                        ConstInitValList (2)
                          ConstInitVal (2)
                            IntConst (2)
                              CONSTANTINTD: 8
                          ConstInitValList (2)
                            ConstInitVal (2)
                              IntConst (2)
                                CONSTANTINTD: 9
    CompUnits (4)
      FuncDef (4)
        FuncFParam (4)
        Block (5)
          BlockItems (5)
            VarDecl (5)
              VarOPassign (5)
                IDENTIFIER i                ConstInitVal (5)
                  IntConst (5)
                    CONSTANTOCT: 0
            BlockItems (6)
              While_Stmt (6)
                Cond (6)
                  OPLIGHTEQ (6)
                    LVal_EXP (6)
                      LVal (6)
                        IDENTIFIER s                        ArrayExps (6)
                          LVal_EXP (6)
                            LVal (6)
                              IDENTIFIER i                    LVal_EXP (6)
                      LVal (6)
                        IDENTIFIER a                Block_Stmt (7)
                  Block (7)
                    BlockItems (7)
                      Lval_Opassign_Stmt (7)
                        LVal (7)
                          IDENTIFIER i                        PLUSExp (7)
                          LVal_EXP (7)
                            LVal (7)
                              IDENTIFIER i                          IntConst (7)
                            CONSTANTINTD: 1
              BlockItems (9)
                Return_Stmt (9)
                  LVal_EXP (9)
                    LVal (9)
                      IDENTIFIER i

===========================================================
Global
ID             category       type           depictor
               
a              Variable       TYPEINTEGER    NULL           
s              Array          TYPEINTEGER    NULL           
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:main
ID             category       type           depictor
              
i              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
Segmentation fault (core dumped)
