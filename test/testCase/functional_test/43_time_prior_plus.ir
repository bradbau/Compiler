--(end of buffer or a NUL)
--accepting rule at line 74 ("// Check the priority between time and plus
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("20")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("5")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("6")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 109 ("4")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 86 ("*")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 88 ("%")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 87 ("/")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putint")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
<int>
<id,main>
<(>
<)>
<{>
<int>
<id,a>
<;>
<id,a>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,b>
<;>
<id,b>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,c>
<;>
<id,c>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,d>
<;>
<id,d>
<=>
Lval
<->
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<=>
Lval
<id,a>
<+>
Lval
<id,c>
<*>
Lval
<id,d>
<->
Lval
<id,b>
<%>
Lval
<(>
<id,a>
<+>
Lval
<id,d>
<)>
Lval
</>
<id,a>
<;>
Lval
stmt1
<id,putint>
<(>
<id,a>
<)>
Lval
<;>
<return>
<into>
ExpNumber:0
<;>
<}>
CompUnits (2)
  FuncDef (2)
    NOFParam (2)
    Block (3)
      BlockItems (3)
        VarDecl (3)
          IDENTIFIER a
        BlockItems (4)
          Lval_Opassign_Stmt (4)
            LVal (4)
              IDENTIFIER a
              ArrayExps (4)
            IntConst (4)
              CONSTANTINTD: 20
          BlockItems (5)
            VarDecl (5)
              IDENTIFIER b
            BlockItems (6)
              Lval_Opassign_Stmt (6)
                LVal (6)
                  IDENTIFIER b
                  ArrayExps (6)
                IntConst (6)
                  CONSTANTINTD: 5
              BlockItems (7)
                VarDecl (7)
                  IDENTIFIER c
                BlockItems (8)
                  Lval_Opassign_Stmt (8)
                    LVal (8)
                      IDENTIFIER c
                      ArrayExps (8)
                    IntConst (8)
                      CONSTANTINTD: 6
                  BlockItems (9)
                    VarDecl (9)
                      IDENTIFIER d
                    BlockItems (10)
                      Lval_Opassign_Stmt (10)
                        LVal (10)
                          IDENTIFIER d
                          ArrayExps (10)
                        OPMINUS_Exp (10)
                          IntConst (10)
                            CONSTANTINTD: 4
                      BlockItems (11)
                        Lval_Opassign_Stmt (11)
                          LVal (11)
                            IDENTIFIER a
                            ArrayExps (11)
                          MINUSExp (11)
                            PLUSExp (11)
                              LVal_EXP (11)
                                LVal (11)
                                  IDENTIFIER a
                                  ArrayExps (11)
                              MulExp (11)
                                LVal_EXP (11)
                                  LVal (11)
                                    IDENTIFIER c
                                    ArrayExps (11)
                                LVal_EXP (11)
                                  LVal (11)
                                    IDENTIFIER d
                                    ArrayExps (11)
                            DIVIDEExp (11)
                              MODExp (11)
                                LVal_EXP (11)
                                  LVal (11)
                                    IDENTIFIER b
                                    ArrayExps (11)
                                (Exp) (11)
                                  PLUSExp (11)
                                    LVal_EXP (11)
                                      LVal (11)
                                        IDENTIFIER a
                                        ArrayExps (11)
                                    LVal_EXP (11)
                                      LVal (11)
                                        IDENTIFIER d
                                        ArrayExps (11)
                              LVal_EXP (11)
                                LVal (11)
                                  IDENTIFIER a
                                  ArrayExps (11)
                        BlockItems (12)
                          Exp_Stmt (12)
                            funcall (12)
                              IDENTIFIER putint
                              FuncRParams (12)
                                LVal_EXP (12)
                                  LVal (12)
                                    IDENTIFIER a
                                    ArrayExps (12)
                          BlockItems (13)
                            Return_Stmt (13)
                              IntConst (13)
                                CONSTANTOCT: 0


===========================================================
Global
ID             category       type           depictor
               
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:main
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
c              Variable       TYPEINTEGER    NULL           
d              Variable       TYPEINTEGER    NULL           
TraverseScopeStack no result

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   2)	FUNCTION main :
  2  (at line   4)	_t20 := #20
  3  (at line   4)	 := _t20
  4  (at line   6)	_t19 := #5
  5  (at line   6)	 := _t19
  6  (at line   8)	_t18 := #6
  7  (at line   8)	 := _t18
  8  (at line  10)	_t17 := #4
  9  (at line  10)	_t16 := #0 - _t17
 10  (at line  10)	 := _t16
 11  (at line  11)	_t5 := 
 12  (at line  11)	_t7 := 
 13  (at line  11)	_t8 := 
 14  (at line  11)	_t6 := _t7 * _t8
 15  (at line  11)	_t3 := _t5 + _t6
 16  (at line  11)	_t11 := 
 17  (at line  11)	_t14 := 
 18  (at line  11)	_t15 := 
 19  (at line  11)	_t13 := _t14 + _t15
 20  (at line  11)	_t12 := _t13
 21  (at line  11)	_t9 := _t11 % _t12
 22  (at line  11)	_t10 := 
 23  (at line  11)	_t4 := _t9 / _t10
 24  (at line  11)	_t2 := _t3 - _t4
 25  (at line  11)	 := _t2
 26  (at line  12)	_t1 := 
 27  (at line  12)	ARG _t1
 28  (at line  12)	CALL 
 29  (at line  13)	_t0 := #0
 30  (at line  13)	RETURN _t0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
tec type ASSIGN
tec type ASSIGN
tec type ASSIGN
tec type ASSIGN
tec type ASSIGN
tec type ASSIGN
tec type ASSIGN
tac type SUB
compiler: ./ObjectCode/Arm.cpp:75: ARM::ARM(TACCode*, ScopeItem&): Assertion `code.dest.Type = VARIABLE' failed.
Aborted (core dumped)
