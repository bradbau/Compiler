--(end of buffer or a NUL)
--accepting rule at line 74 ("// array as parameter of a function
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("field")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("2")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("func")
--accepting rule at line 80 ("(")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("array")
--accepting rule at line 82 ("[")
--accepting rule at line 83 ("]")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("array")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("3")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("field")
--accepting rule at line 82 ("[")
--accepting rule at line 111 ("0")
--accepting rule at line 83 ("]")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("3")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("field")
--accepting rule at line 82 ("[")
--accepting rule at line 111 ("0")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("field")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("j")
--accepting rule at line 82 ("[")
--accepting rule at line 111 ("0")
<int>
<id,field>
<[>
<intd>
ExpNumber:0
<]>
<;>
<int>
<id,func>
<(>
<int>
<id,array>
<[>
<]>
<)>
<{>
<return>
<id,array>
<[>
<intd>
ExpNumber:0
<->
<id,field>
<[>
<into>
ExpNumber:0
<]>
<]>
Lval
<;>
Lval
<}>
<int>
<id,main>
<(>
<)>
<{>
<int>
<id,i>
<[>
<intd>
ExpNumber:0
<]>
<;>
<int>
<id,j>
<[>
<intd>
ExpNumber:0
<]>
<;>
<int>
<id,k>
<;>
<id,field>
<[>
<into>
ExpNumber:0
<]>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,field>
<[>
<intd>
ExpNumber:0
<]>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,j>
<[>
<into>
E--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("j")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 82 ("[")
--accepting rule at line 111 ("0")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("j")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("2")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("16")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("func")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("j")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--(end of buffer or a NUL)
--EOF (start condition 0)
xpNumber:0
<+>
<into>
ExpNumber:0
<]>
<=>
Lval
<->
<intd>
ExpNumber:0
<;>
stmt1
<id,j>
<[>
<intd>
ExpNumber:0
<]>
<=>
Lval
<id,j>
<[>
<into>
ExpNumber:0
<]>
<->
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,k>
<=>
Lval
<id,j>
<[>
<intd>
ExpNumber:0
<]>
<;>
Lval
stmt1
<id,j>
<[>
<intd>
ExpNumber:0
<]>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<return>
<id,func>
<(>
<id,j>
<)>
Lval
<+>
<intd>
ExpNumber:0
<+>
<id,k>
<;>
Lval
<}>
CompUnits (2)
  VarDecl (2)
    ArrayDec: demmision=0
      IDENTIFIER field
  CompUnits (4)
    FuncDef (4)
      FuncFParam (4)
        ArrayExps (4)
      Block (5)
        BlockItems (5)
          Return_Stmt (5)
            LVal_EXP (5)
              LVal (5)
                IDENTIFIER array
                ArrayExps (5)
                  MINUSExp (5)
                    IntConst (5)
                      CONSTANTINTD: 3
                    LVal_EXP (5)
                      LVal (5)
                        IDENTIFIER field
                        ArrayExps (5)
                          IntConst (5)
                            CONSTANTOCT: 0
                          ArrayExps (5)
                  ArrayExps (5)
    CompUnits (8)
      FuncDef (8)
        FuncFParam (8)
        Block (9)
          BlockItems (9)
            VarDecl (9)
              ArrayDec: demmision=0
                IDENTIFIER i
            BlockItems (10)
              VarDecl (10)
                ArrayDec: demmision=0
                  IDENTIFIER j
              BlockItems (11)
                VarDecl (11)
                  IDENTIFIER k
                BlockItems (13)
                  Lval_Opassign_Stmt (13)
                    LVal (13)
                      IDENTIFIER field
                      ArrayExps (13)
                        IntConst (13)
                          CONSTANTOCT: 0
                        ArrayExps (13)
                    IntConst (13)
                      CONSTANTINTD: 1
                  BlockItems (14)
                    Lval_Opassign_Stmt (14)
                      LVal (14)
                        IDENTIFIER field
                        ArrayExps (14)
                          IntConst (14)
                            CONSTANTINTD: 1
                          ArrayExps (14)
                      IntConst (14)
                        CONSTANTINTD: 2
                    BlockItems (17)
                      Lval_Opassign_Stmt (17)
                        LVal (17)
                          IDENTIFIER j
                          ArrayExps (17)
                            PLUSExp (17)
                              IntConst (17)
                                CONSTANTOCT: 0
                              IntConst (17)
                                CONSTANTOCT: 0
                            ArrayExps (17)
                        OPMINUS_Exp (17)
                          IntConst (17)
                            CONSTANTINTD: 1
                      BlockItems (18)
                        Lval_Opassign_Stmt (18)
                          LVal (18)
                            IDENTIFIER j
                            ArrayExps (18)
                              IntConst (18)
                                CONSTANTINTD: 1
                              ArrayExps (18)
                          MINUSExp (18)
                            LVal_EXP (18)
                              LVal (18)
                                IDENTIFIER j
                                ArrayExps (18)
                                  IntConst (18)
                                    CONSTANTOCT: 0
                                  ArrayExps (18)
                            IntConst (18)
                              CONSTANTINTD: 2
                        BlockItems (19)
                          Lval_Opassign_Stmt (19)
                            LVal (19)
                              IDENTIFIER k
                              ArrayExps (19)
                            LVal_EXP (19)
                              LVal (19)
                                IDENTIFIER j
                                ArrayExps (19)
                                  IntConst (19)
                                    CONSTANTINTD: 1
                                  ArrayExps (19)
                          BlockItems (20)
                            Lval_Opassign_Stmt (20)
                              LVal (20)
                                IDENTIFIER j
                                ArrayExps (20)
                                  IntConst (20)
                                    CONSTANTINTD: 2
                                  ArrayExps (20)
                              IntConst (20)
                                CONSTANTINTD: 16
                            BlockItems (22)
                              Return_Stmt (22)
                                PLUSExp (22)
                                  PLUSExp (22)
                                    funcall (22)
                                      IDENTIFIER func
                                      FuncRParams (22)
                                        LVal_EXP (22)
                                          LVal (22)
                                            IDENTIFIER j
                                            ArrayExps (22)
                                    IntConst (22)
                                      CONSTANTINTD: 2
                                  LVal_EXP (22)
                                    LVal (22)
                                      IDENTIFIER k
                                      ArrayExps (22)


===========================================================
Global
ID             category       type           depictor
               
field          Array          TYPEINTEGER    NULL           
func           Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:func
ID             category       type           depictor
              
array          Array          TYPEINTEGER    NULL           
===========================================================
Local:func
ID             category       type           depictor
              
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:main
ID             category       type           depictor
              
i              Array          TYPEINTEGER    NULL           
j              Array          TYPEINTEGER    NULL           
k              Variable       TYPEINTEGER    NULL           
Segmentation fault (core dumped)
