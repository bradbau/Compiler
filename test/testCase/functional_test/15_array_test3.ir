--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("5")
--accepting rule at line 83 ("]")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("5")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
--accepting rule at line 78 ("{")
--accepting rule at line 109 ("1")
--accepting rule at line 76 (",")
--accepting rule at line 109 ("2")
--accepting rule at line 76 (",")
--accepting rule at line 109 ("3")
--accepting rule at line 76 (",")
--accepting rule at line 109 ("4")
--accepting rule at line 76 (",")
--accepting rule at line 109 ("5")
--accepting rule at line 79 ("}")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("func")
--accepting rule at line 80 ("(")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 83 ("]")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("5")
--accepting rule at line 83 ("]")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 89 ("=")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 89 ("=")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("sum")
--accepting rule at line 89 ("=")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("i")
--accepting rule at line 96 ("<")
--accepting rule at line 109 ("5")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("j")
--accepting rule at line 96 ("<")
--accepting rule at line 109 ("5")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("sum")
--accepting rule at line 89 ("=")
<int>
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<[>
<intd>
ExpNumber:0
<]>
<=>
<{>
<intd>
ExpNumber:0
<,>
<intd>
ExpNumber:0
<,>
<intd>
ExpNumber:0
<,>
<intd>
ExpNumber:0
<,>
<intd>
ExpNumber:0
<}>
<;>
<int>
<id,func>
<(>
<int>
<id,a>
<[>
<]>
<[>
<intd>
ExpNumber:0
<]>
<)>
<{>
<int>
<id,i>
<=>
<into>
ExpNumber:0
<;>
<int>
<id,j>
<=>
<into>
ExpNumber:0
<;>
<int>
<id,sum>
<=>
<into>
ExpNumber:0
<;>
<while>
<(>
<id,i>
<<>
Lval
<intd>
ExpNumber:0
<)>
<{>
<while>
<(>
<id,j>
<<>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,sum>
<--accepting rule at line 112 ("sum")
--accepting rule at line 84 ("+")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 89 ("=")
--accepting rule at line 112 ("j")
--accepting rule at line 84 ("+")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 89 ("=")
--accepting rule at line 112 ("i")
--accepting rule at line 84 ("+")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("sum")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putint")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("func")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 81 (")")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--(end of buffer or a NUL)
--EOF (start condition 0)
=>
Lval
<id,sum>
<+>
Lval
<id,a>
<[>
<id,i>
<]>
Lval
<[>
<id,j>
<]>
Lval
<;>
Lval
stmt1
<id,j>
<=>
Lval
<id,j>
<+>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,i>
<=>
Lval
<id,i>
<+>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<id,sum>
<;>
Lval
<}>
<int>
<id,main>
<(>
<)>
<{>
<id,putint>
<(>
<id,func>
<(>
<id,a>
<)>
Lval
<)>
<;>
<return>
<into>
ExpNumber:0
<;>
<}>
CompUnits (1)
  VarDecl (1)
    VarOPassign (1)
      ArrayDec: demmision=0
        ArrayDec: demmision=0
          IDENTIFIER a
      ConstInitVal (1)
        ConstInitVal (1)
          IntConst (1)
            CONSTANTINTD: 1
        ConstInitValList (1)
          ConstInitVal (1)
            IntConst (1)
              CONSTANTINTD: 2
          ConstInitValList (1)
            ConstInitVal (1)
              IntConst (1)
                CONSTANTINTD: 3
            ConstInitValList (1)
              ConstInitVal (1)
                IntConst (1)
                  CONSTANTINTD: 4
              ConstInitValList (1)
                ConstInitVal (1)
                  IntConst (1)
                    CONSTANTINTD: 5
  CompUnits (3)
    FuncDef (3)
      FuncFParam (3)
        ArrayExps (3)
          IntConst (3)
            CONSTANTINTD: 5
          ArrayExps (3)
      Block (4)
        BlockItems (4)
          VarDecl (4)
            VarOPassign (4)
              IDENTIFIER i
              ConstInitVal (4)
                IntConst (4)
                  CONSTANTOCT: 0
          BlockItems (5)
            VarDecl (5)
              VarOPassign (5)
                IDENTIFIER j
                ConstInitVal (5)
                  IntConst (5)
                    CONSTANTOCT: 0
            BlockItems (6)
              VarDecl (6)
                VarOPassign (6)
                  IDENTIFIER sum
                  ConstInitVal (6)
                    IntConst (6)
                      CONSTANTOCT: 0
              BlockItems (7)
                While_Stmt (7)
                  Cond (7)
                    OPLIGHT (7)
                      LVal_EXP (7)
                        LVal (7)
                          IDENTIFIER i
                          ArrayExps (7)
                      IntConst (7)
                        CONSTANTINTD: 5
                  Block_Stmt (8)
                    Block (8)
                      BlockItems (8)
                        While_Stmt (8)
                          Cond (8)
                            OPLIGHT (8)
                              LVal_EXP (8)
                                LVal (8)
                                  IDENTIFIER j
                                  ArrayExps (8)
                              IntConst (8)
                                CONSTANTINTD: 5
                          Block_Stmt (9)
                            Block (9)
                              BlockItems (9)
                                Lval_Opassign_Stmt (9)
                                  LVal (9)
                                    IDENTIFIER sum
                                    ArrayExps (9)
                                  PLUSExp (9)
                                    LVal_EXP (9)
                                      LVal (9)
                                        IDENTIFIER sum
                                        ArrayExps (9)
                                    LVal_EXP (9)
                                      LVal (9)
                                        IDENTIFIER a
                                        ArrayExps (9)
                                          LVal_EXP (9)
                                            LVal (9)
                                              IDENTIFIER i
                                              ArrayExps (9)
                                          ArrayExps (9)
                                            LVal_EXP (9)
                                              LVal (9)
                                                IDENTIFIER j
                                                ArrayExps (9)
                                            ArrayExps (9)
                                BlockItems (10)
                                  Lval_Opassign_Stmt (10)
                                    LVal (10)
                                      IDENTIFIER j
                                      ArrayExps (10)
                                    PLUSExp (10)
                                      LVal_EXP (10)
                                        LVal (10)
                                          IDENTIFIER j
                                          ArrayExps (10)
                                      IntConst (10)
                                        CONSTANTINTD: 1
                        BlockItems (12)
                          Lval_Opassign_Stmt (12)
                            LVal (12)
                              IDENTIFIER i
                              ArrayExps (12)
                            PLUSExp (12)
                              LVal_EXP (12)
                                LVal (12)
                                  IDENTIFIER i
                                  ArrayExps (12)
                              IntConst (12)
                                CONSTANTINTD: 1
                BlockItems (14)
                  Return_Stmt (14)
                    LVal_EXP (14)
                      LVal (14)
                        IDENTIFIER sum
                        ArrayExps (14)
    CompUnits (17)
      FuncDef (17)
        FuncFParam (17)
        Block (18)
          BlockItems (18)
            Exp_Stmt (18)
              funcall (18)
                IDENTIFIER putint
                FuncRParams (18)
                  funcall (18)
                    IDENTIFIER func
                    FuncRParams (18)
                      LVal_EXP (18)
                        LVal (18)
                          IDENTIFIER a
                          ArrayExps (18)
            BlockItems (19)
              Return_Stmt (19)
                IntConst (19)
                  CONSTANTOCT: 0


===========================================================
Global
ID             category       type           depictor
               
a              Array          TYPEINTEGER    NULL           
func           Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:func
ID             category       type           depictor
              
a              Array          TYPEINTEGER    NOT NULL       
===========================================================
Local:func
ID             category       type           depictor
              
i              Variable       TYPEINTEGER    NULL           
j              Variable       TYPEINTEGER    NULL           
sum            Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NULL           
Segmentation fault (core dumped)
