<int>
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<[>
<intd>
ExpNumber:0
<]>
<=>
<{>
<intd>
ExpNumber:0
<,>
<intd>
ExpNumber:0
<,>
<intd>
ExpNumber:0
<,>
<intd>
ExpNumber:0
<,>
<intd>
ExpNumber:0
<}>
<;>
<int>
<id,func>
<(>
<int>
<id,a>
<[>
<]>
<[>
<intd>
ExpNumber:0
<]>
<)>
<{>
<int>
<id,i>
<=>
<into>
ExpNumber:0
<;>
<int>
<id,j>
<=>
<into>
ExpNumber:0
<;>
<int>
<id,sum>
<=>
<into>
ExpNumber:0
<;>
<while>
<(>
<id,i>
<<>
Lval
<intd>
ExpNumber:0
<)>
<{>
<while>
<(>
<id,j>
<<>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,sum>
<=>
Lval
<id,sum>
<+>
Lval
<id,a>
<[>
<id,i>
<]>
Lval
<[>
<id,j>
<]>
Lval
<;>
Lval
stmt1
<id,j>
<=>
Lval
<id,j>
<+>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,i>
<=>
Lval
<id,i>
<+>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<id,sum>
<;>
Lval
<}>
<int>
<id,main>
<(>
<)>
<{>
<id,putint>
<(>
<id,func>
<(>
<id,a>
<)>
Lval
<)>
<;>
<return>
<into>
ExpNumber:0
<;>
<}>
CompUnits (1)
  VarDecl (1)
    VarOPassign (1)
      ArrayDec: demmision=0
        ArrayDec: demmision=0
          IDENTIFIER a
      ConstInitVal (1)
        ExpInitval (1)
          IntConst (1)
            CONSTANTINTD: 1
        ConstInitValList (1)
          ExpInitval (1)
            IntConst (1)
              CONSTANTINTD: 2
          ConstInitValList (1)
            ExpInitval (1)
              IntConst (1)
                CONSTANTINTD: 3
            ConstInitValList (1)
              ExpInitval (1)
                IntConst (1)
                  CONSTANTINTD: 4
              ConstInitValList (1)
                ExpInitval (1)
                  IntConst (1)
                    CONSTANTINTD: 5
  CompUnits (3)
    FuncDef (3)
      ArrayFuncFParam (3)
        ArrayExps (3)
          IntConst (3)
            CONSTANTINTD: 5
          ArrayExps (3)
      Block (4)
        BlockItems (4)
          VarDecl (4)
            VarOPassign (4)
              IDENTIFIER i
              ExpInitval (4)
                IntConst (4)
                  CONSTANTOCT: 0
          BlockItems (5)
            VarDecl (5)
              VarOPassign (5)
                IDENTIFIER j
                ExpInitval (5)
                  IntConst (5)
                    CONSTANTOCT: 0
            BlockItems (6)
              VarDecl (6)
                VarOPassign (6)
                  IDENTIFIER sum
                  ExpInitval (6)
                    IntConst (6)
                      CONSTANTOCT: 0
              BlockItems (7)
                While_Stmt (7)
                  Cond (7)
                    OPLIGHT (7)
                      LVal_EXP (7)
                        LVal (7)
                          IDENTIFIER i
                          ArrayExps (7)
                      IntConst (7)
                        CONSTANTINTD: 5
                  Block_Stmt (8)
                    Block (8)
                      BlockItems (8)
                        While_Stmt (8)
                          Cond (8)
                            OPLIGHT (8)
                              LVal_EXP (8)
                                LVal (8)
                                  IDENTIFIER j
                                  ArrayExps (8)
                              IntConst (8)
                                CONSTANTINTD: 5
                          Block_Stmt (9)
                            Block (9)
                              BlockItems (9)
                                Lval_Opassign_Stmt (9)
                                  LVal (9)
                                    IDENTIFIER sum
                                    ArrayExps (9)
                                  PLUSExp (9)
                                    LVal_EXP (9)
                                      LVal (9)
                                        IDENTIFIER sum
                                        ArrayExps (9)
                                    LVal_EXP (9)
                                      LVal (9)
                                        IDENTIFIER a
                                        ArrayExps (9)
                                          LVal_EXP (9)
                                            LVal (9)
                                              IDENTIFIER i
                                              ArrayExps (9)
                                          ArrayExps (9)
                                            LVal_EXP (9)
                                              LVal (9)
                                                IDENTIFIER j
                                                ArrayExps (9)
                                            ArrayExps (9)
                                BlockItems (10)
                                  Lval_Opassign_Stmt (10)
                                    LVal (10)
                                      IDENTIFIER j
                                      ArrayExps (10)
                                    PLUSExp (10)
                                      LVal_EXP (10)
                                        LVal (10)
                                          IDENTIFIER j
                                          ArrayExps (10)
                                      IntConst (10)
                                        CONSTANTINTD: 1
                        BlockItems (12)
                          Lval_Opassign_Stmt (12)
                            LVal (12)
                              IDENTIFIER i
                              ArrayExps (12)
                            PLUSExp (12)
                              LVal_EXP (12)
                                LVal (12)
                                  IDENTIFIER i
                                  ArrayExps (12)
                              IntConst (12)
                                CONSTANTINTD: 1
                BlockItems (14)
                  Return_Stmt (14)
                    LVal_EXP (14)
                      LVal (14)
                        IDENTIFIER sum
                        ArrayExps (14)
    CompUnits (17)
      FuncDef (17)
        NOFParam (17)
        Block (18)
          BlockItems (18)
            Exp_Stmt (18)
              funcall (18)
                IDENTIFIER putint
                FuncRParams (18)
                  funcall (18)
                    IDENTIFIER func
                    FuncRParams (18)
                      LVal_EXP (18)
                        LVal (18)
                          IDENTIFIER a
                          ArrayExps (18)
            BlockItems (19)
              Return_Stmt (19)
                IntConst (19)
                  CONSTANTOCT: 0


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
a              Array          TYPEINTEGER    ----------> dim=2
func           Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:func
ID             category       type           depictor
              
a              Array          TYPEINTEGER    ----------> dim=2
===========================================================
===========================================================
Local:func
ID             category       type           depictor
              
i              Variable       TYPEINTEGER    NULL           
j              Variable       TYPEINTEGER    NULL           
sum            Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
===========================================================
layer是
0
123
456
789
456
456
456
789
789
789
456
789
789
789
456
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
456
789
789
789
789
456

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main
  1  (at line   1)	_t0 := #0
  2  (at line   1)	_t1 := #5
  3  (at line   1)	_t2 := #5
  4  (at line   1)	_t1 := _t1 * _t2
  5  (at line   1)	_t3 := _t0
  6  (at line   1)	_t4 := #1
  7  (at line   1)	a[_t0] := _t4
  8  (at line   1)	_t0 := _t0 + #1
  9  (at line   1)	_t5 := #2
 10  (at line   1)	a[_t0] := _t5
 11  (at line   1)	_t0 := _t0 + #1
 12  (at line   1)	_t6 := #3
 13  (at line   1)	a[_t0] := _t6
 14  (at line   1)	_t0 := _t0 + #1
 15  (at line   1)	_t7 := #4
 16  (at line   1)	a[_t0] := _t7
 17  (at line   1)	_t0 := _t0 + #1
 18  (at line   1)	_t8 := #5
 19  (at line   1)	a[_t0] := _t8
 20  (at line   1)	_t0 := _t0 + #1
 21  (at line   1)	LABEL label0 :
 22  (at line   1)	_t9 := _t0 - _t3
 23  (at line   1)	IF _t9 = _t1 GOTO label1
 24  (at line   1)	a[_t0] := #0
 25  (at line   1)	_t0 := _t0 + #1
 26  (at line   1)	GOTO label0
 27  (at line   1)	LABEL label1 :

 28  (at line   3)	FUNCTION func :
 29  (at line   3)	_t10 := #5
 30  (at line   3)	PARAM a[][_t10]
 31  (at line   4)	i := #0
 32  (at line   5)	j := #0
 33  (at line   6)	sum := #0
 34  (at line   7)	LABEL label2 :
 35  (at line   7)	_t11 := i
 36  (at line   7)	_t14 := #5
 37  (at line   7)	IF _t11 < _t14 GOTO label3
 38  (at line   7)	GOTO label4
 39  (at line   7)	LABEL label3 :
 40  (at line   8)	LABEL label5 :
 41  (at line   8)	_t15 := j
 42  (at line   8)	_t18 := #5
 43  (at line   8)	IF _t15 < _t18 GOTO label6
 44  (at line   8)	GOTO label7
 45  (at line   8)	LABEL label6 :
 46  (at line   9)	_t20 := sum
 47  (at line   9)	_t26 := j
 48  (at line   9)	_t27 := #5
 49  (at line   9)	_t28 := i
 50  (at line   9)	_t22 := _t28 * _t27
 51  (at line   9)	_t22 := _t22 + _t26
 52  (at line   9)	_t21 := a[_t22]
 53  (at line   9)	_t19 := _t20 + _t21
 54  (at line   9)	sum := _t19
 55  (at line  10)	_t31 := j
 56  (at line  10)	_t32 := #1
 57  (at line  10)	_t30 := _t31 + _t32
 58  (at line  10)	j := _t30
 59  (at line   8)	GOTO label5
 60  (at line   8)	LABEL label7 :
 61  (at line  12)	_t34 := i
 62  (at line  12)	_t35 := #1
 63  (at line  12)	_t33 := _t34 + _t35
 64  (at line  12)	i := _t33
 65  (at line   7)	GOTO label2
 66  (at line   7)	LABEL label4 :
 67  (at line  14)	_t36 := sum
 68  (at line  14)	RETURN _t36

 69  (at line  17)	FUNCTION main :
 70  (at line   1)	_t39 := #5
 71  (at line   1)	_t40 := #5
 72  (at line  18)	_t39 := _t39 * _t40
 73  (at line  18)	ARG a[_t39]
 74  (at line  18)	_t37 := CALL func
 75  (at line  18)	ARG _t37
 76  (at line  18)	CALL putint
 77  (at line  19)	_t41 := #0
 78  (at line  19)	RETURN _t41


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
a              Array          TYPEINTEGER    ----------> dim=2
func           Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:func
ID             category       type           depictor
              
a              Array          TYPEINTEGER    ----------> dim=2
scope type is wrong
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
===========================================================
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type ASSIGN
 assign 0 to tegisteruserreg0contains0
userreg1contains0
userreg2contains0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
0
userreg0contains0x68cf50
tac type ASSIGN
 assign 5 to tegisteruserreg0contains0x68cf50
userreg1contains0
userreg2contains0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
1
userreg0contains0x68cf50
userreg1contains0x68d0b0
tac type ASSIGN
 assign 5 to tegisteruserreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
2
userreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
tac type MUL
userreg0contains0x68cf50
userreg1contains0x68d0b0
userreg0contains0x68cf50
userreg1contains0x68d0b0
userreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
tac type ASSIGN
userreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x68cf50
tac type ASSIGN
 assign 1 to tegisteruserreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
4
userreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
tac type ASSIGN
  assign dest type array
GetRegisterNoLoad array_addr
FindRegister ARRAY_ADDR
cannot findregister GetRegisterNoLoad ARRAY_ADDR
userreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
tac type ADD
userreg0contains0x68cf50
userreg0contains0x68cf50
tac type ASSIGN
 assign 2 to tegisteruserreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
6
userreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
userreg5contains0
userreg6contains0x68d930
tac type ASSIGN
  assign dest type array
GetRegisterNoLoad array_addr
FindRegister ARRAY_ADDR
reload == for array
return FindRegister ARRAY_ADDR
userreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
userreg5contains0
userreg6contains0x68d930
tac type ADD
userreg0contains0x68cf50
userreg0contains0x68cf50
tac type ASSIGN
 assign 3 to tegisteruserreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
userreg5contains0
userreg6contains0x68d930
userreg8contains0
userreg9contains0
userreg10contains0
8
userreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
userreg5contains0
userreg6contains0x68d930
userreg8contains0x68db20
tac type ASSIGN
  assign dest type array
GetRegisterNoLoad array_addr
FindRegister ARRAY_ADDR
reload == for array
return FindRegister ARRAY_ADDR
userreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
userreg5contains0
userreg6contains0x68d930
userreg8contains0x68db20
tac type ADD
userreg0contains0x68cf50
userreg0contains0x68cf50
tac type ASSIGN
 assign 4 to tegisteruserreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
userreg5contains0
userreg6contains0x68d930
userreg8contains0x68db20
userreg9contains0
userreg10contains0
9
userreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
userreg5contains0
userreg6contains0x68d930
userreg8contains0x68db20
userreg9contains0x68dd10
tac type ASSIGN
  assign dest type array
GetRegisterNoLoad array_addr
FindRegister ARRAY_ADDR
reload == for array
return FindRegister ARRAY_ADDR
userreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
userreg5contains0
userreg6contains0x68d930
userreg8contains0x68db20
userreg9contains0x68dd10
tac type ADD
userreg0contains0x68cf50
userreg0contains0x68cf50
tac type ASSIGN
 assign 5 to tegisteruserreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
userreg5contains0
userreg6contains0x68d930
userreg8contains0x68db20
userreg9contains0x68dd10
userreg10contains0
10
userreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
userreg5contains0
userreg6contains0x68d930
userreg8contains0x68db20
userreg9contains0x68dd10
userreg10contains0x68df00
tac type ASSIGN
  assign dest type array
GetRegisterNoLoad array_addr
FindRegister ARRAY_ADDR
reload == for array
return FindRegister ARRAY_ADDR
userreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
userreg5contains0
userreg6contains0x68d930
userreg8contains0x68db20
userreg9contains0x68dd10
userreg10contains0x68df00
tac type ADD
userreg0contains0x68cf50
userreg0contains0x68cf50
tac type LABELDF
L0:

tac type SUB
userreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
userreg5contains0
userreg6contains0x68d930
userreg8contains0x68db20
userreg9contains0x68dd10
userreg10contains0x68df00
Store Register in getregisterNoLoad variable
userreg0contains0x68cf50
userreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
tac type IFEQ
userreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
userreg5contains0
userreg6contains0x68d930
userreg8contains0x68db20
userreg9contains0x68dd10
userreg10contains0x68e090
userreg0contains0x68cf50
userreg1contains0x68d0b0
tac type ASSIGN
  assign dest type array
GetRegisterNoLoad array_addr
FindRegister ARRAY_ADDR
reload == for array
return FindRegister ARRAY_ADDR
tac type ADD
userreg0contains0x68cf50
userreg0contains0x68cf50
tac type GOTO
Goto string B L0

tac type LABELDF
L1:

tac type FUNCTIONDF
Variable offset count+4 :i
Variable offset count+4 :j
Variable offset count+4 :sum
Variable offset count+4 :i
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t11
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t14
Variable offset count+4 :_t36
tac type ASSIGN
 assign 5 to tegisteruserreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
userreg5contains0
userreg6contains0x68d930
userreg8contains0x68db20
userreg9contains0x68dd10
userreg10contains0x68e090
Store Register in getregisterNoLoad variable
10
userreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
userreg5contains0
userreg6contains0x68d930
userreg8contains0x68db20
userreg9contains0x68dd10
userreg10contains0x68cd50
tac type PARAM
tac type ASSIGN
 assign 0 to tegisteruserreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
userreg5contains0
userreg6contains0x68d930
userreg8contains0x68db20
userreg9contains0x68dd10
userreg10contains0x68cd50
Store Register in getregisterNoLoad variable
10
userreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
userreg5contains0
userreg6contains0x68d930
userreg8contains0x68db20
userreg9contains0x68dd10
userreg10contains0x6849c0
tac type ASSIGN
 assign 0 to tegisteruserreg0contains0x68cf50
userreg1contains0x68d0b0
userreg2contains0x68d1c0
userreg3contains0x68d630
userreg4contains0x68d740
userreg5contains0
userreg6contains0x68d930
userreg8contains0x68db20
userreg9contains0x68dd10
userreg10contains0x6849c0
Store Register in getregisterNoLoad variable
register:-1
terminate called after throwing an instance of 'std::runtime_error'
  what():  no variable in this register
Aborted (core dumped)
