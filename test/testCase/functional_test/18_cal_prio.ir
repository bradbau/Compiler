--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("getint")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("getint")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("getint")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 84 ("+")
--accepting rule at line 112 ("b")
--accepting rule at line 86 ("*")
--accepting rule at line 112 ("c")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
<int>
<id,a>
<;>
<int>
<id,b>
<;>
<int>
<id,c>
<;>
<int>
<id,main>
<(>
<)>
<{>
<id,a>
<=>
Lval
<id,getint>
<(>
<)>
<;>
stmt1
<id,b>
<=>
Lval
<id,getint>
<(>
<)>
<;>
stmt1
<id,c>
<=>
Lval
<id,getint>
<(>
<)>
<;>
stmt1
<int>
<id,d>
<;>
<id,d>
<=>
Lval
<id,a>
<+>
Lval
<id,b>
<*>
Lval
<id,c>
<;>
Lval
stmt1
<return>
<id,d>
<;>
Lval
<}>
CompUnits (1)
  VarDecl (1)
    IDENTIFIER a
  CompUnits (2)
    VarDecl (2)
      IDENTIFIER b
    CompUnits (3)
      VarDecl (3)
        IDENTIFIER c
      CompUnits (4)
        FuncDef (4)
          NOFParam (4)
          Block (5)
            BlockItems (5)
              Lval_Opassign_Stmt (5)
                LVal (5)
                  IDENTIFIER a
                  ArrayExps (5)
                funcall (5)
                  IDENTIFIER getint
              BlockItems (6)
                Lval_Opassign_Stmt (6)
                  LVal (6)
                    IDENTIFIER b
                    ArrayExps (6)
                  funcall (6)
                    IDENTIFIER getint
                BlockItems (7)
                  Lval_Opassign_Stmt (7)
                    LVal (7)
                      IDENTIFIER c
                      ArrayExps (7)
                    funcall (7)
                      IDENTIFIER getint
                  BlockItems (8)
                    VarDecl (8)
                      IDENTIFIER d
                    BlockItems (9)
                      Lval_Opassign_Stmt (9)
                        LVal (9)
                          IDENTIFIER d
                          ArrayExps (9)
                        PLUSExp (9)
                          LVal_EXP (9)
                            LVal (9)
                              IDENTIFIER a
                              ArrayExps (9)
                          MulExp (9)
                            LVal_EXP (9)
                              LVal (9)
                                IDENTIFIER b
                                ArrayExps (9)
                            LVal_EXP (9)
                              LVal (9)
                                IDENTIFIER c
                                ArrayExps (9)
                      BlockItems (10)
                        Return_Stmt (10)
                          LVal_EXP (10)
                            LVal (10)
                              IDENTIFIER d
                              ArrayExps (10)


===========================================================
Global
ID             category       type           depictor
               
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
c              Variable       TYPEINTEGER    NULL           
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:main
ID             category       type           depictor
              
d              Variable       TYPEINTEGER    NULL           
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   4)	FUNCTION main :
  2  (at line   5)	_t8 := CALL 
  3  (at line   5)	 := _t8
  4  (at line   6)	_t7 := CALL 
  5  (at line   6)	 := _t7
  6  (at line   7)	_t6 := CALL 
  7  (at line   7)	 := _t6
  8  (at line   9)	_t2 := 
  9  (at line   9)	_t4 := 
 10  (at line   9)	_t5 := 
 11  (at line   9)	_t3 := _t4 * _t5
 12  (at line   9)	_t1 := _t2 + _t3
 13  (at line   9)	 := _t1
 14  (at line  10)	_t0 := 
 15  (at line  10)	RETURN _t0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
tac type CALLASSIGN
findregister: insldr rd=0,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=1,r1=11,r2 offset=0,op2type=1, insefft=0
tac type CALLASSIGN
findregister: insldr rd=2,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tac type CALLASSIGN
findregister: insldr rd=3,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tec type ASSIGN
findregister: insldr rd=4,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=5,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=6,r1=11,r2 offset=0,op2type=1, insefft=0
tac type MUL
compiler: ./ObjectCode/Arm.cpp:89: ARM::ARM(TACCode*, ScopeItem&): Assertion `code.dest.Type = VARIABLE' failed.
Aborted (core dumped)
