--(end of buffer or a NUL)
--accepting rule at line 82 ("// test if-else else-if
")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("ifElseElseIf")
--accepting rule at line 88 ("(")
--accepting rule at line 89 (")")
--accepting rule at line 130 (" ")
--accepting rule at line 86 ("{")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("a")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("a")
--accepting rule at line 130 (" ")
--accepting rule at line 97 ("=")
--accepting rule at line 130 (" ")
--accepting rule at line 125 ("66")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("b")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("b")
--accepting rule at line 130 (" ")
--accepting rule at line 97 ("=")
--accepting rule at line 130 (" ")
--accepting rule at line 125 ("8923")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 109 ("if")
--accepting rule at line 130 (" ")
--accepting rule at line 88 ("(")
--accepting rule at line 128 ("a")
--accepting rule at line 130 (" ")
--accepting rule at line 101 ("==")
--accepting rule at line 130 (" ")
--accepting rule at line 125 ("5")
--accepting rule at line 89 (")")
--accepting rule at line 130 (" ")
--accepting rule at line 86 ("{")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("b")
--accepting rule at line 130 (" ")
--accepting rule at line 97 ("=")
--accepting rule at line 130 (" ")
--accepting rule at line 125 ("25")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 87 ("}")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 110 ("else")
--accepting rule at line 130 (" ")
--accepting rule at line 109 ("if")
--accepting rule at line 130 (" ")
--accepting rule at line 88 ("(")
--accepting rule at line 128 ("a")
--accepting rule at line 130 (" ")
--accepting rule at line 101 ("==")
--accepting rule at line 130 (" ")
--accepting rule at line 125 ("10")
--accepting rule at line 89 (")")
--accepting rule at line 130 (" ")
--accepting rule at line 86 ("{")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("b")
--accepting rule at line 130 (" ")
--accepting rule at line 97 ("=")
--accepting rule at line 130 (" ")
--accepting rule at line 125 ("42")
--accepting rule at line 83 (";")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 87 ("}")
<int>
<id,ifElseElseIf>
<(>
<)>
FuncFParams<{>
<int>
<id,a>
VarDec<;>
VarDefVarDefsDeclBlockItem<id,a>
<=>
ArrayExpsLval
<intd>
<;>
stmt1
BlockItem<int>
<id,b>
VarDec<;>
VarDefVarDefsDeclBlockItem<id,b>
<=>
ArrayExpsLval
<intd>
<;>
stmt1
BlockItem<if>
<(>
<id,a>
<==>
ArrayExpsLval
<intd>
<)>
Cond<{>
<id,b>
<=>
ArrayExpsLval
<intd>
<;>
stmt1
BlockItem<}>
BlockItemsBlockItemsBlockStmt<else>
<if>
<(>
<id,a>
<==>
ArrayExpsLval
<intd>
<)>
Cond<{>
<id,b>
<=>
ArrayExpsLval
<intd>
<;>
stmt1
BlockItem<}>
BlockItemsB--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 110 ("else")
--accepting rule at line 130 (" ")
--accepting rule at line 86 ("{")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("b")
--accepting rule at line 130 (" ")
--accepting rule at line 97 ("=")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("a")
--accepting rule at line 130 (" ")
--accepting rule at line 94 ("*")
--accepting rule at line 130 (" ")
--accepting rule at line 125 ("2")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 87 ("}")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 124 ("return")
--accepting rule at line 130 (" ")
--accepting rule at line 88 ("(")
--accepting rule at line 128 ("b")
--accepting rule at line 89 (")")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 87 ("}")
--accepting rule at line 131 ("
")
--accepting rule at line 131 ("
")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("main")
--accepting rule at line 88 ("(")
--accepting rule at line 89 (")")
--accepting rule at line 130 (" ")
--accepting rule at line 86 ("{")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 124 ("return")
--accepting rule at line 130 (" ")
--accepting rule at line 88 ("(")
--accepting rule at line 128 ("ifElseElseIf")
--accepting rule at line 88 ("(")
--accepting rule at line 89 (")")
--accepting rule at line 89 (")")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 87 ("}")
--accepting rule at line 131 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
lockItemsBlockStmt<else>
<{>
<id,b>
<=>
ArrayExpsLval
<id,a>
<*>
ArrayExpsLval
<intd>
<;>
stmt1
BlockItem<}>
BlockItemsBlockItemsBlockStmtStmtStmtBlockItem<return>
<(>
<id,b>
<)>
ArrayExpsLval
<;>
StmtBlockItem<}>
BlockItemsBlockItemsBlockItemsBlockItemsBlockItemsBlockItemsBlockItemsBlockCompUnit<int>
<id,main>
<(>
<)>
FuncFParams<{>
<return>
<(>
<id,ifElseElseIf>
<(>
<)>
<)>
<;>
StmtBlockItem<}>
BlockItemsBlockItemsBlockCompUnitCompUnitsCompUnitsCompUnitsCompilerCompUnits (2)
  FuncDef (2)
    FuncFParam (2)
    Block (3)
      BlockItems (3)
        VarDecl (3)
          IDENTIFIER a        BlockItems (4)
          Lval_Opassign_Stmt (4)
            LVal (4)
              IDENTIFIER a            IntConst (4)
              CONSTANTINTD: 66
          BlockItems (5)
            VarDecl (5)
              IDENTIFIER b            BlockItems (6)
              Lval_Opassign_Stmt (6)
                LVal (6)
                  IDENTIFIER b                IntConst (6)
                  CONSTANTINTD: 8923
              BlockItems (7)
                IF_ELSE_Stmt (7)
                  Cond (7)
                    OPEQUAL (7)
                      LVal_EXP (7)
                        LVal (7)
                          IDENTIFIER a                      IntConst (7)
                        CONSTANTINTD: 5
                  Block_Stmt (8)
                    Block (8)
                      BlockItems (8)
                        Lval_Opassign_Stmt (8)
                          LVal (8)
                            IDENTIFIER b                          IntConst (8)
                            CONSTANTINTD: 25
                  IF_ELSE_Stmt (10)
                    Cond (10)
                      OPEQUAL (10)
                        LVal_EXP (10)
                          LVal (10)
                            IDENTIFIER a                        IntConst (10)
                          CONSTANTINTD: 10
                    Block_Stmt (11)
                      Block (11)
                        BlockItems (11)
                          Lval_Opassign_Stmt (11)
                            LVal (11)
                              IDENTIFIER b                            IntConst (11)
                              CONSTANTINTD: 42
                    Block_Stmt (14)
                      Block (14)
                        BlockItems (14)
                          Lval_Opassign_Stmt (14)
                            LVal (14)
                              IDENTIFIER b                            MulExp (14)
                              LVal_EXP (14)
                                LVal (14)
                                  IDENTIFIER a                              IntConst (14)
                                CONSTANTINTD: 2
                BlockItems (16)
                  Return_Stmt (16)
                    (Exp) (16)
                      LVal_EXP (16)
                        LVal (16)
                          IDENTIFIER b  CompUnits (19)
    FuncDef (19)
      FuncFParam (19)
      Block (20)
        BlockItems (20)
          Return_Stmt (20)
            (Exp) (20)
              funcall (20)
                IDENTIFIER ifElseElseIf

===========================================================
Global
ID             category       type           depictor
               
ifElseElseIf   Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:ifElseElseIf
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:ifElseElseIf
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
Local:main
ID             category       type           depictor
              
