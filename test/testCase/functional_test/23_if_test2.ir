<int>
<id,ifElseElseIf>
<(>
<)>
<{>
<int>
<id,a>
<;>
<id,a>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,b>
<;>
<id,b>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<if>
<(>
<id,a>
<==>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,b>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<else>
<if>
<(>
<id,a>
<==>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,b>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<else>
<{>
<id,b>
<=>
Lval
<id,a>
<*>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<(>
<id,b>
<)>
Lval
<;>
<}>
<int>
<id,main>
<(>
<)>
<{>
<return>
<(>
<id,ifElseElseIf>
<(>
<)>
<)>
<;>
<}>
CompUnits (2)
  FuncDef (2)
    NOFParam (2)
    Block (3)
      BlockItems (3)
        VarDecl (3)
          IDENTIFIER a
        BlockItems (4)
          Lval_Opassign_Stmt (4)
            LVal (4)
              IDENTIFIER a
              ArrayExps (4)
            IntConst (4)
              CONSTANTINTD: 66
          BlockItems (5)
            VarDecl (5)
              IDENTIFIER b
            BlockItems (6)
              Lval_Opassign_Stmt (6)
                LVal (6)
                  IDENTIFIER b
                  ArrayExps (6)
                IntConst (6)
                  CONSTANTINTD: 8923
              BlockItems (7)
                IF_ELSE_Stmt (7)
                  Cond (7)
                    OPEQUAL (7)
                      LVal_EXP (7)
                        LVal (7)
                          IDENTIFIER a
                          ArrayExps (7)
                      IntConst (7)
                        CONSTANTINTD: 5
                  Block_Stmt (8)
                    Block (8)
                      BlockItems (8)
                        Lval_Opassign_Stmt (8)
                          LVal (8)
                            IDENTIFIER b
                            ArrayExps (8)
                          IntConst (8)
                            CONSTANTINTD: 25
                  IF_ELSE_Stmt (10)
                    Cond (10)
                      OPEQUAL (10)
                        LVal_EXP (10)
                          LVal (10)
                            IDENTIFIER a
                            ArrayExps (10)
                        IntConst (10)
                          CONSTANTINTD: 10
                    Block_Stmt (11)
                      Block (11)
                        BlockItems (11)
                          Lval_Opassign_Stmt (11)
                            LVal (11)
                              IDENTIFIER b
                              ArrayExps (11)
                            IntConst (11)
                              CONSTANTINTD: 42
                    Block_Stmt (14)
                      Block (14)
                        BlockItems (14)
                          Lval_Opassign_Stmt (14)
                            LVal (14)
                              IDENTIFIER b
                              ArrayExps (14)
                            MulExp (14)
                              LVal_EXP (14)
                                LVal (14)
                                  IDENTIFIER a
                                  ArrayExps (14)
                              IntConst (14)
                                CONSTANTINTD: 2
                BlockItems (16)
                  Return_Stmt (16)
                    (Exp) (16)
                      LVal_EXP (16)
                        LVal (16)
                          IDENTIFIER b
                          ArrayExps (16)
  CompUnits (19)
    FuncDef (19)
      NOFParam (19)
      Block (20)
        BlockItems (20)
          Return_Stmt (20)
            (Exp) (20)
              funcall (20)
                IDENTIFIER ifElseElseIf


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
ifElseElseIf   Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:ifElseElseIf
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:ifElseElseIf
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
===========================================================
456
789
789
456
789
789
456
789
789
456
789
789
789
789
789
456
789
789
789
789
789
456
789
789
789
789
789
456
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
456

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   2)	FUNCTION ifElseElseIf :
  2  (at line   4)	_t0 := #66
  3  (at line   4)	a := _t0
  4  (at line   6)	_t1 := #8923
  5  (at line   6)	b := _t1
  6  (at line   7)	_t2 := a
  7  (at line   7)	_t5 := #5
  8  (at line   7)	IF _t2 = _t5 GOTO label0
  9  (at line   7)	GOTO label1
 10  (at line   7)	LABEL label0 :
 11  (at line   8)	_t6 := #25
 12  (at line   8)	b := _t6
 13  (at line   7)	GOTO label2
 14  (at line   7)	LABEL label1 :
 15  (at line  10)	_t7 := a
 16  (at line  10)	_t10 := #10
 17  (at line  10)	IF _t7 = _t10 GOTO label3
 18  (at line  10)	GOTO label4
 19  (at line  10)	LABEL label3 :
 20  (at line  11)	_t11 := #42
 21  (at line  11)	b := _t11
 22  (at line  10)	GOTO label5
 23  (at line  10)	LABEL label4 :
 24  (at line  14)	_t13 := a
 25  (at line  14)	_t14 := #2
 26  (at line  14)	_t12 := _t13 * _t14
 27  (at line  14)	b := _t12
 28  (at line  10)	LABEL label5 :
 29  (at line   7)	LABEL label2 :
 30  (at line  16)	_t16 := b
 31  (at line  16)	_t15 := _t16
 32  (at line  16)	RETURN _t15

 33  (at line  19)	FUNCTION main :
 34  (at line  20)	_t18 := CALL ifElseElseIf
 35  (at line  20)	_t17 := _t18
 36  (at line  20)	RETURN _t17


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
ifElseElseIf   Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:ifElseElseIf
ID             category       type           depictor
              
               NOParam                       NOT NULL       
scope type is wrong
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
===========================================================
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
Variable offset count+4 :a
Variable offset count+4 :b
Variable offset count+4 :a
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t0
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t1
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t2
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t5
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t6
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t7
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t10
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t11
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t12
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t13
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t14
Variable offset count+4 :_t15
scope type not local in functiondf
scopeprev:1
Variable offset count+4 :_t16
tac type ASSIGN
 assign 66 to tegisteruserreg0contains0
userreg1contains0
userreg2contains0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
0
userreg0contains0x1da3e20
tac type ASSIGN
userreg0contains0x1da3e20
userreg1contains0
userreg2contains0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x1da3e20
tac type ASSIGN
 assign 8923 to tegisteruserreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
2
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
tac type ASSIGN
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
tac type ASSIGN
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
tac type ASSIGN
 assign 5 to tegisteruserreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
5
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
tac type IFEQ
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
tac type GOTO
Goto string B L1

tac type LABELDF
L0:

tac type ASSIGN
 assign 25 to tegisteruserreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
6
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0x1da4a70
tac type ASSIGN
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0x1da4a70
tac type GOTO
Goto string B L2

tac type LABELDF
L1:

tac type ASSIGN
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0x1da4a70
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
tac type ASSIGN
 assign 10 to tegisteruserreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0x1da4a70
userreg8contains0x1da4ca0
userreg9contains0
userreg10contains0
9
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0x1da4a70
userreg8contains0x1da4ca0
userreg9contains0x1da4db0
tac type IFEQ
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0x1da4a70
userreg8contains0x1da4ca0
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0x1da4a70
userreg8contains0x1da4ca0
userreg9contains0x1da4db0
tac type GOTO
Goto string B L4

tac type LABELDF
L3:

tac type ASSIGN
 assign 42 to tegisteruserreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0x1da4a70
userreg8contains0x1da4ca0
userreg9contains0x1da4db0
userreg10contains0
10
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0x1da4a70
userreg8contains0x1da4ca0
userreg9contains0x1da4db0
userreg10contains0x1da4fe0
tac type ASSIGN
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0x1da4a70
userreg8contains0x1da4ca0
userreg9contains0x1da4db0
userreg10contains0x1da4fe0
tac type GOTO
Goto string B L5

tac type LABELDF
L4:

tac type ASSIGN
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0x1da4a70
userreg8contains0x1da4ca0
userreg9contains0x1da4db0
userreg10contains0x1da4fe0
Store Register in getregisterNoLoad variable
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
tac type ASSIGN
 assign 2 to tegisteruserreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0x1da4a70
userreg8contains0x1da4ca0
userreg9contains0x1da4db0
userreg10contains0x1da5320
Store Register in getregisterNoLoad variable
10
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0x1da4a70
userreg8contains0x1da4ca0
userreg9contains0x1da4db0
userreg10contains0x1da53d0
tac type MUL
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0x1da4a70
userreg8contains0x1da4ca0
userreg9contains0x1da4db0
userreg10contains0x1da53d0
Store Register in getregisterNoLoad variable
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0x1da4a70
userreg8contains0x1da4ca0
userreg9contains0x1da4db0
userreg10contains0x1da5270
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0x1da4a70
userreg8contains0x1da4ca0
userreg9contains0x1da4db0
userreg10contains0x1da5320
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ASSIGN
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0x1da4a70
userreg8contains0x1da4ca0
userreg9contains0x1da4db0
userreg10contains0x1da53d0
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type LABELDF
L5:

tac type LABELDF
L2:

tac type ASSIGN
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0x1da4a70
userreg8contains0x1da4ca0
userreg9contains0x1da4db0
userreg10contains0x1da5270
Store Register in getregisterNoLoad variable
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
tac type ASSIGN
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0x1da4a70
userreg8contains0x1da4ca0
userreg9contains0x1da4db0
userreg10contains0x1da5890
Store Register in getregisterNoLoad variable
userreg0contains0x1da3e20
userreg1contains0x1d9d8a0
userreg2contains0x1da4020
userreg3contains0x1d9e0f0
userreg4contains0x1da4730
userreg5contains0x1da4840
userreg6contains0x1da4a70
userreg8contains0x1da4ca0
userreg9contains0x1da4db0
userreg10contains0x1da57e0
register:-1
terminate called after throwing an instance of 'std::runtime_error'
  what():  no variable in this register
Aborted (core dumped)
