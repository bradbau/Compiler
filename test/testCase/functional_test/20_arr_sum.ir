--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("5")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 111 ("0")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("getint")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("getint")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("2")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("getint")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("3")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("getint")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("4")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("getint")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("cnt")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("cnt")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("4")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("sum")
<int>
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<;>
<int>
<id,main>
<(>
<)>
<{>
<id,a>
<[>
<into>
ExpNumber:0
<]>
<=>
Lval
<id,getint>
<(>
<)>
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
Lval
<id,getint>
<(>
<)>
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
Lval
<id,getint>
<(>
<)>
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
Lval
<id,getint>
<(>
<)>
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
Lval
<id,getint>
<(>
<)>
<;>
stmt1
<int>
<id,cnt>
<;>
<id,cnt>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("sum")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("cnt")
--accepting rule at line 114 (" ")
--accepting rule at line 95 (">")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 114 (" ")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("sum")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("sum")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("cnt")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("cnt")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("cnt")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("sum")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
,sum>
<;>
<id,sum>
<=>
Lval
<into>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,cnt>
<>>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,sum>
<=>
Lval
<id,sum>
<+>
Lval
<id,a>
<[>
<id,cnt>
<]>
Lval
<;>
Lval
stmt1
<id,cnt>
<=>
Lval
<id,cnt>
<->
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<id,sum>
<;>
Lval
<}>
CompUnits (1)
  VarDecl (1)
    ArrayDec: demmision=0
      IDENTIFIER a
  CompUnits (2)
    FuncDef (2)
      NOFParam (2)
      Block (3)
        BlockItems (3)
          Lval_Opassign_Stmt (3)
            LVal (3)
              IDENTIFIER a
              ArrayExps (3)
                IntConst (3)
                  CONSTANTOCT: 0
                ArrayExps (3)
            funcall (3)
              IDENTIFIER getint
          BlockItems (4)
            Lval_Opassign_Stmt (4)
              LVal (4)
                IDENTIFIER a
                ArrayExps (4)
                  IntConst (4)
                    CONSTANTINTD: 1
                  ArrayExps (4)
              funcall (4)
                IDENTIFIER getint
            BlockItems (5)
              Lval_Opassign_Stmt (5)
                LVal (5)
                  IDENTIFIER a
                  ArrayExps (5)
                    IntConst (5)
                      CONSTANTINTD: 2
                    ArrayExps (5)
                funcall (5)
                  IDENTIFIER getint
              BlockItems (6)
                Lval_Opassign_Stmt (6)
                  LVal (6)
                    IDENTIFIER a
                    ArrayExps (6)
                      IntConst (6)
                        CONSTANTINTD: 3
                      ArrayExps (6)
                  funcall (6)
                    IDENTIFIER getint
                BlockItems (7)
                  Lval_Opassign_Stmt (7)
                    LVal (7)
                      IDENTIFIER a
                      ArrayExps (7)
                        IntConst (7)
                          CONSTANTINTD: 4
                        ArrayExps (7)
                    funcall (7)
                      IDENTIFIER getint
                  BlockItems (8)
                    VarDecl (8)
                      IDENTIFIER cnt
                    BlockItems (9)
                      Lval_Opassign_Stmt (9)
                        LVal (9)
                          IDENTIFIER cnt
                          ArrayExps (9)
                        IntConst (9)
                          CONSTANTINTD: 4
                      BlockItems (10)
                        VarDecl (10)
                          IDENTIFIER sum
                        BlockItems (11)
                          Lval_Opassign_Stmt (11)
                            LVal (11)
                              IDENTIFIER sum
                              ArrayExps (11)
                            IntConst (11)
                              CONSTANTOCT: 0
                          BlockItems (12)
                            While_Stmt (12)
                              Cond (12)
                                OPGREAT (12)
                                  LVal_EXP (12)
                                    LVal (12)
                                      IDENTIFIER cnt
                                      ArrayExps (12)
                                  IntConst (12)
                                    CONSTANTINTD: 1
                              Block_Stmt (13)
                                Block (13)
                                  BlockItems (13)
                                    Lval_Opassign_Stmt (13)
                                      LVal (13)
                                        IDENTIFIER sum
                                        ArrayExps (13)
                                      PLUSExp (13)
                                        LVal_EXP (13)
                                          LVal (13)
                                            IDENTIFIER sum
                                            ArrayExps (13)
                                        LVal_EXP (13)
                                          LVal (13)
                                            IDENTIFIER a
                                            ArrayExps (13)
                                              LVal_EXP (13)
                                                LVal (13)
                                                  IDENTIFIER cnt
                                                  ArrayExps (13)
                                              ArrayExps (13)
                                    BlockItems (14)
                                      Lval_Opassign_Stmt (14)
                                        LVal (14)
                                          IDENTIFIER cnt
                                          ArrayExps (14)
                                        MINUSExp (14)
                                          LVal_EXP (14)
                                            LVal (14)
                                              IDENTIFIER cnt
                                              ArrayExps (14)
                                          IntConst (14)
                                            CONSTANTINTD: 1
                            BlockItems (16)
                              Return_Stmt (16)
                                LVal_EXP (16)
                                  LVal (16)
                                    IDENTIFIER sum
                                    ArrayExps (16)


===========================================================
Global
ID             category       type           depictor
               
a              Array          TYPEINTEGER    NULL           
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:main
ID             category       type           depictor
              
cnt            Variable       TYPEINTEGER    NULL           
sum            Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
Segmentation fault (core dumped)
