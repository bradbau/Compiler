arg S
--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("insertsort")
--accepting rule at line 80 ("(")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 83 ("]")
--accepting rule at line 81 (")")
<int>
<id,n>
<;>
<int>
<id,insertsort>
<(>
<int>
<id,a>
<[>
<]>
<)>
33333333333
1111111111111111
--accepting rule at line 115 ("
")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
<{>
<int>
<id,i>
<;>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("i")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,i>
<<>
33333333333
--accepting rule at line 112 ("n")
--accepting rule at line 81 (")")
Lval
<id,n>
<)>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("temp")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("temp")
--accepting rule at line 89 ("=")
Lval
<{>
<int>
<id,temp>
<;>
<id,temp>
<=>
33333333333
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<id,a>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 75 (";")
Lval
<;>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 89 ("=")
Lval
stmt1
<int>
<id,j>
<;>
<id,j>
<=>
33333333333
--accepting rule at line 112 ("i")
--accepting rule at line 85 ("-")
Lval
<id,i>
<->
33333333333
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("j")
--accepting rule at line 95 (">")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,j>
<>>
33333333333
--accepting rule at line 85 ("-")
--accepting rule at line 109 ("1")
--accepting rule at line 90 ("&&")
--accepting rule at line 112 ("temp")
--accepting rule at line 96 ("<")
Lval
<->
<intd>
ExpNumber:0
<&&>
<id,temp>
<<>
33333333333
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 83 ("]")
Lval
<id,a>
<[>
<id,j>
<]>
33333333333
--accepting rule at line 81 (")")
Lval
<)>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 84 ("+")
Lval
<{>
<id,a>
<[>
<id,j>
<+>
33333333333
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 83 ("]")
Lval
<id,a>
<[>
<id,j>
<]>
33333333333
--accepting rule at line 75 (";")
Lval
<;>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<id,j>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,j>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 84 ("+")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,a>
<[>
<id,j>
<+>
33333333333
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 112 ("temp")
--accepting rule at line 75 (";")
Lval
<id,temp>
<;>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,i>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<into>
ExpNumber:0
<;>
<}>
<int>
<id,main>
<(>
<)>
<{>
<id,n>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("10")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 111 ("0")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<;>
<id,a>
<[>
<into>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("4")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("3")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("2")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("9")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("3")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("4")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("5")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("6")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("6")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("7")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("5")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("8")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("7")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("9")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("8")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,i>
<;>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("insertsort")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 81 (")")
Lval
<id,insertsort>
<(>
<id,a>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<;>
stmt1
<while>
<(>
<id,i>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 81 (")")
Lval
<id,n>
<)>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<{>
<int>
<id,tmp>
<;>
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<id,a>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 75 (";")
Lval
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putint")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("tmp")
--accepting rule at line 81 (")")
Lval
stmt1
<id,putint>
<(>
<id,tmp>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<;>
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putch")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("tmp")
--accepting rule at line 81 (")")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,putch>
<(>
<id,tmp>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<;>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,i>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<into>
ExpNumber:0
<;>
<}>
CompUnits (1)
  VarDecl (1)
    IDENTIFIER n
  CompUnits (2)
    FuncDef (2)
      FuncFParam (2)
        ArrayExps (2)
      Block (4)
        BlockItems (4)
          VarDecl (4)
            IDENTIFIER i
          BlockItems (5)
            Lval_Opassign_Stmt (5)
              LVal (5)
                IDENTIFIER i
                ArrayExps (5)
              IntConst (5)
                CONSTANTINTD: 1
            BlockItems (6)
              While_Stmt (6)
                Cond (6)
                  OPLIGHT (6)
                    LVal_EXP (6)
                      LVal (6)
                        IDENTIFIER i
                        ArrayExps (6)
                    LVal_EXP (6)
                      LVal (6)
                        IDENTIFIER n
                        ArrayExps (6)
                Block_Stmt (8)
                  Block (8)
                    BlockItems (8)
                      VarDecl (8)
                        IDENTIFIER temp
                      BlockItems (9)
                        Lval_Opassign_Stmt (9)
                          LVal (9)
                            IDENTIFIER temp
                            ArrayExps (9)
                          LVal_EXP (9)
                            LVal (9)
                              IDENTIFIER a
                              ArrayExps (9)
                                LVal_EXP (9)
                                  LVal (9)
                                    IDENTIFIER i
                                    ArrayExps (9)
                                ArrayExps (9)
                        BlockItems (10)
                          VarDecl (10)
                            IDENTIFIER j
                          BlockItems (11)
                            Lval_Opassign_Stmt (11)
                              LVal (11)
                                IDENTIFIER j
                                ArrayExps (11)
                              MINUSExp (11)
                                LVal_EXP (11)
                                  LVal (11)
                                    IDENTIFIER i
                                    ArrayExps (11)
                                IntConst (11)
                                  CONSTANTINTD: 1
                            BlockItems (12)
                              While_Stmt (12)
                                Cond_And (12)
                                  Cond (12)
                                    OPGREAT (12)
                                      LVal_EXP (12)
                                        LVal (12)
                                          IDENTIFIER j
                                          ArrayExps (12)
                                      OPMINUS_Exp (12)
                                        IntConst (12)
                                          CONSTANTINTD: 1
                                  Cond (12)
                                    OPLIGHT (12)
                                      LVal_EXP (12)
                                        LVal (12)
                                          IDENTIFIER temp
                                          ArrayExps (12)
                                      LVal_EXP (12)
                                        LVal (12)
                                          IDENTIFIER a
                                          ArrayExps (12)
                                            LVal_EXP (12)
                                              LVal (12)
                                                IDENTIFIER j
                                                ArrayExps (12)
                                            ArrayExps (12)
                                Block_Stmt (14)
                                  Block (14)
                                    BlockItems (14)
                                      Lval_Opassign_Stmt (14)
                                        LVal (14)
                                          IDENTIFIER a
                                          ArrayExps (14)
                                            PLUSExp (14)
                                              LVal_EXP (14)
                                                LVal (14)
                                                  IDENTIFIER j
                                                  ArrayExps (14)
                                              IntConst (14)
                                                CONSTANTINTD: 1
                                            ArrayExps (14)
                                        LVal_EXP (14)
                                          LVal (14)
                                            IDENTIFIER a
                                            ArrayExps (14)
                                              LVal_EXP (14)
                                                LVal (14)
                                                  IDENTIFIER j
                                                  ArrayExps (14)
                                              ArrayExps (14)
                                      BlockItems (15)
                                        Lval_Opassign_Stmt (15)
                                          LVal (15)
                                            IDENTIFIER j
                                            ArrayExps (15)
                                          MINUSExp (15)
                                            LVal_EXP (15)
                                              LVal (15)
                                                IDENTIFIER j
                                                ArrayExps (15)
                                            IntConst (15)
                                              CONSTANTINTD: 1
                              BlockItems (17)
                                Lval_Opassign_Stmt (17)
                                  LVal (17)
                                    IDENTIFIER a
                                    ArrayExps (17)
                                      PLUSExp (17)
                                        LVal_EXP (17)
                                          LVal (17)
                                            IDENTIFIER j
                                            ArrayExps (17)
                                        IntConst (17)
                                          CONSTANTINTD: 1
                                      ArrayExps (17)
                                  LVal_EXP (17)
                                    LVal (17)
                                      IDENTIFIER temp
                                      ArrayExps (17)
                                BlockItems (18)
                                  Lval_Opassign_Stmt (18)
                                    LVal (18)
                                      IDENTIFIER i
                                      ArrayExps (18)
                                    PLUSExp (18)
                                      LVal_EXP (18)
                                        LVal (18)
                                          IDENTIFIER i
                                          ArrayExps (18)
                                      IntConst (18)
                                        CONSTANTINTD: 1
              BlockItems (20)
                Return_Stmt (20)
                  IntConst (20)
                    CONSTANTOCT: 0
    CompUnits (23)
      FuncDef (23)
        NOFParam (23)
        Block (24)
          BlockItems (24)
            Lval_Opassign_Stmt (24)
              LVal (24)
                IDENTIFIER n
                ArrayExps (24)
              IntConst (24)
                CONSTANTINTD: 10
            BlockItems (25)
              VarDecl (25)
                ArrayDec: demmision=0
                  IDENTIFIER a
              BlockItems (26)
                Lval_Opassign_Stmt (26)
                  LVal (26)
                    IDENTIFIER a
                    ArrayExps (26)
                      IntConst (26)
                        CONSTANTOCT: 0
                      ArrayExps (26)
                  IntConst (26)
                    CONSTANTINTD: 4
                BlockItems (26)
                  Lval_Opassign_Stmt (26)
                    LVal (26)
                      IDENTIFIER a
                      ArrayExps (26)
                        IntConst (26)
                          CONSTANTINTD: 1
                        ArrayExps (26)
                    IntConst (26)
                      CONSTANTINTD: 3
                  BlockItems (26)
                    Lval_Opassign_Stmt (26)
                      LVal (26)
                        IDENTIFIER a
                        ArrayExps (26)
                          IntConst (26)
                            CONSTANTINTD: 2
                          ArrayExps (26)
                      IntConst (26)
                        CONSTANTINTD: 9
                    BlockItems (26)
                      Lval_Opassign_Stmt (26)
                        LVal (26)
                          IDENTIFIER a
                          ArrayExps (26)
                            IntConst (26)
                              CONSTANTINTD: 3
                            ArrayExps (26)
                        IntConst (26)
                          CONSTANTINTD: 2
                      BlockItems (26)
                        Lval_Opassign_Stmt (26)
                          LVal (26)
                            IDENTIFIER a
                            ArrayExps (26)
                              IntConst (26)
                                CONSTANTINTD: 4
                              ArrayExps (26)
                          IntConst (26)
                            CONSTANTOCT: 0
                        BlockItems (27)
                          Lval_Opassign_Stmt (27)
                            LVal (27)
                              IDENTIFIER a
                              ArrayExps (27)
                                IntConst (27)
                                  CONSTANTINTD: 5
                                ArrayExps (27)
                            IntConst (27)
                              CONSTANTINTD: 1
                          BlockItems (27)
                            Lval_Opassign_Stmt (27)
                              LVal (27)
                                IDENTIFIER a
                                ArrayExps (27)
                                  IntConst (27)
                                    CONSTANTINTD: 6
                                  ArrayExps (27)
                              IntConst (27)
                                CONSTANTINTD: 6
                            BlockItems (27)
                              Lval_Opassign_Stmt (27)
                                LVal (27)
                                  IDENTIFIER a
                                  ArrayExps (27)
                                    IntConst (27)
                                      CONSTANTINTD: 7
                                    ArrayExps (27)
                                IntConst (27)
                                  CONSTANTINTD: 5
                              BlockItems (27)
                                Lval_Opassign_Stmt (27)
                                  LVal (27)
                                    IDENTIFIER a
                                    ArrayExps (27)
                                      IntConst (27)
                                        CONSTANTINTD: 8
                                      ArrayExps (27)
                                  IntConst (27)
                                    CONSTANTINTD: 7
                                BlockItems (27)
                                  Lval_Opassign_Stmt (27)
                                    LVal (27)
                                      IDENTIFIER a
                                      ArrayExps (27)
                                        IntConst (27)
                                          CONSTANTINTD: 9
                                        ArrayExps (27)
                                    IntConst (27)
                                      CONSTANTINTD: 8
                                  BlockItems (28)
                                    VarDecl (28)
                                      IDENTIFIER i
                                    BlockItems (29)
                                      Lval_Opassign_Stmt (29)
                                        LVal (29)
                                          IDENTIFIER i
                                          ArrayExps (29)
                                        funcall (29)
                                          IDENTIFIER insertsort
                                          FuncRParams (29)
                                            LVal_EXP (29)
                                              LVal (29)
                                                IDENTIFIER a
                                                ArrayExps (29)
                                      BlockItems (30)
                                        While_Stmt (30)
                                          Cond (30)
                                            OPLIGHT (30)
                                              LVal_EXP (30)
                                                LVal (30)
                                                  IDENTIFIER i
                                                  ArrayExps (30)
                                              LVal_EXP (30)
                                                LVal (30)
                                                  IDENTIFIER n
                                                  ArrayExps (30)
                                          Block_Stmt (31)
                                            Block (31)
                                              BlockItems (31)
                                                VarDecl (31)
                                                  IDENTIFIER tmp
                                                BlockItems (32)
                                                  Lval_Opassign_Stmt (32)
                                                    LVal (32)
                                                      IDENTIFIER tmp
                                                      ArrayExps (32)
                                                    LVal_EXP (32)
                                                      LVal (32)
                                                        IDENTIFIER a
                                                        ArrayExps (32)
                                                          LVal_EXP (32)
                                                            LVal (32)
                                                              IDENTIFIER i
                                                              ArrayExps (32)
                                                          ArrayExps (32)
                                                  BlockItems (33)
                                                    Exp_Stmt (33)
                                                      funcall (33)
                                                        IDENTIFIER putint
                                                        FuncRParams (33)
                                                          LVal_EXP (33)
                                                            LVal (33)
                                                              IDENTIFIER tmp
                                                              ArrayExps (33)
                                                    BlockItems (34)
                                                      Lval_Opassign_Stmt (34)
                                                        LVal (34)
                                                          IDENTIFIER tmp
                                                          ArrayExps (34)
                                                        IntConst (34)
                                                          CONSTANTINTD: 10
                                                      BlockItems (35)
                                                        Exp_Stmt (35)
                                                          funcall (35)
                                                            IDENTIFIER putch
                                                            FuncRParams (35)
                                                              LVal_EXP (35)
                                                                LVal (35)
                                                                  IDENTIFIER tmp
                                                                  ArrayExps (35)
                                                        BlockItems (36)
                                                          Lval_Opassign_Stmt (36)
                                                            LVal (36)
                                                              IDENTIFIER i
                                                              ArrayExps (36)
                                                            PLUSExp (36)
                                                              LVal_EXP (36)
                                                                LVal (36)
                                                                  IDENTIFIER i
                                                                  ArrayExps (36)
                                                              IntConst (36)
                                                                CONSTANTINTD: 1
                                        BlockItems (38)
                                          Return_Stmt (38)
                                            IntConst (38)
                                              CONSTANTOCT: 0


===========================================================
Global
ID             category       type           depictor
               
n              Variable       TYPEINTEGER    NULL           
insertsort     Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:insertsort
ID             category       type           depictor
              
a              Array          TYPEINTEGER    ----------> dim=1
===========================================================
===========================================================
Local:insertsort
ID             category       type           depictor
              
i              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
temp           Variable       TYPEINTEGER    NULL           
j              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
a              Array          TYPEINTEGER    ----------> dim=1
i              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
tmp            Variable       TYPEINTEGER    NULL           
===========================================================
456
789
456
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
456
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
TraverseScopeStack no result
789
789
789
789
456
789
789
789
789
789
456
789
789
789
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
TraverseScopeStack no result
789
789
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   2)	FUNCTION insertsort :
  2  (at line   2)	PARAM a
  3  (at line   5)	_t0 := #1
  4  (at line   5)	i := _t0
  5  (at line   6)	LABEL label0 :
  6  (at line   6)	_t1 := i
  7  (at line   6)	_t4 := n
  8  (at line   6)	IF _t1 < _t4 GOTO label1
  9  (at line   6)	GOTO label2
 10  (at line   6)	LABEL label1 :
 11  (at line   9)	_t8 := i
 12  (at line   9)	_t5 := a[_t8]
 13  (at line   9)	temp := _t5
 14  (at line  11)	_t11 := i
 15  (at line  11)	_t12 := #1
 16  (at line  11)	_t10 := _t11 - _t12
 17  (at line  11)	j := _t10
 18  (at line  12)	LABEL label3 :
 19  (at line  12)	_t13 := j
 20  (at line  12)	_t17 := #1
 21  (at line  12)	_t16 := #0 - _t17
 22  (at line  12)	IF _t13 > _t16 GOTO label6
 23  (at line  12)	GOTO label5
 24  (at line  12)	LABEL label6 :
 25  (at line  12)	_t18 := temp
 26  (at line  12)	_t24 := j
 27  (at line  12)	_t21 := a[_t24]
 28  (at line  12)	IF _t18 < _t21 GOTO label4
 29  (at line  12)	GOTO label5
 30  (at line  12)	LABEL label4 :
 31  (at line  14)	_t29 := j
 32  (at line  14)	_t26 := a[_t29]
 33  (at line  14)	_t34 := j
 34  (at line  14)	_t35 := #1
 35  (at line  14)	_t33 := _t34 + _t35
 36  (at line  14)	a[_t33] := _t26
 37  (at line  15)	_t38 := j
 38  (at line  15)	_t39 := #1
 39  (at line  15)	_t37 := _t38 - _t39
 40  (at line  15)	j := _t37
 41  (at line  12)	GOTO label3
 42  (at line  12)	LABEL label5 :
 43  (at line  17)	_t40 := temp
 44  (at line  17)	_t44 := j
 45  (at line  17)	_t45 := #1
 46  (at line  17)	_t43 := _t44 + _t45
 47  (at line  17)	a[_t43] := _t40
 48  (at line  18)	_t48 := i
 49  (at line  18)	_t49 := #1
 50  (at line  18)	_t47 := _t48 + _t49
 51  (at line  18)	i := _t47
 52  (at line   6)	GOTO label0
 53  (at line   6)	LABEL label2 :
 54  (at line  20)	_t50 := #0
 55  (at line  20)	RETURN _t50

 56  (at line  23)	FUNCTION main :
 57  (at line  24)	_t51 := #10
 58  (at line  24)	n := _t51
 59  (at line  26)	_t52 := #4
 60  (at line  26)	_t55 := #0
 61  (at line  26)	a[_t55] := _t52
 62  (at line  26)	_t57 := #3
 63  (at line  26)	_t60 := #1
 64  (at line  26)	a[_t60] := _t57
 65  (at line  26)	_t62 := #9
 66  (at line  26)	_t65 := #2
 67  (at line  26)	a[_t65] := _t62
 68  (at line  26)	_t67 := #2
 69  (at line  26)	_t70 := #3
 70  (at line  26)	a[_t70] := _t67
 71  (at line  26)	_t72 := #0
 72  (at line  26)	_t75 := #4
 73  (at line  26)	a[_t75] := _t72
 74  (at line  27)	_t77 := #1
 75  (at line  27)	_t80 := #5
 76  (at line  27)	a[_t80] := _t77
 77  (at line  27)	_t82 := #6
 78  (at line  27)	_t85 := #6
 79  (at line  27)	a[_t85] := _t82
 80  (at line  27)	_t87 := #5
 81  (at line  27)	_t90 := #7
 82  (at line  27)	a[_t90] := _t87
 83  (at line  27)	_t92 := #7
 84  (at line  27)	_t95 := #8
 85  (at line  27)	a[_t95] := _t92
 86  (at line  27)	_t97 := #8
 87  (at line  27)	_t100 := #9
 88  (at line  27)	a[_t100] := _t97
 89  (at line  25)	_t104 := #10
 90  (at line  29)	ARG a[_t104]
 91  (at line  29)	_t102 := CALL insertsort
 92  (at line  29)	i := _t102
 93  (at line  30)	LABEL label7 :
 94  (at line  30)	_t105 := i
 95  (at line  30)	_t108 := n
 96  (at line  30)	IF _t105 < _t108 GOTO label8
 97  (at line  30)	GOTO label9
 98  (at line  30)	LABEL label8 :
 99  (at line  32)	_t112 := i
100  (at line  32)	_t109 := a[_t112]
101  (at line  32)	tmp := _t109
102  (at line  33)	_t114 := tmp
103  (at line  33)	ARG _t114
104  (at line  33)	CALL 
105  (at line  34)	_t115 := #10
106  (at line  34)	tmp := _t115
107  (at line  35)	_t116 := tmp
108  (at line  35)	ARG _t116
109  (at line  35)	CALL 
110  (at line  36)	_t118 := i
111  (at line  36)	_t119 := #1
112  (at line  36)	_t117 := _t118 + _t119
113  (at line  36)	i := _t117
114  (at line  30)	GOTO label7
115  (at line  30)	LABEL label9 :
116  (at line  38)	_t120 := #0
117  (at line  38)	RETURN _t120


===========================================================
Global
ID             category       type           depictor
               
n              Variable       TYPEINTEGER    NULL           
insertsort     Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:insertsort
ID             category       type           depictor
              
a              Array          TYPEINTEGER    ----------> dim=1
scope type is wrong
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
scope type is wrong
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
Variable offset count+4 :i
Variable offset count+4 :i
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t0
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t1
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t4
Variable offset count+4 :_t50
tec type ASSIGN
findregister: insldr rd=0,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=1,r1=11,r2 offset=0,op2type=1, insefft=0
tac type LABELDF
L0:

tec type ASSIGN
findregister: insldr rd=2,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=3,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=4,r1=11,r2 offset=0,op2type=1, insefft=0
tac type IFLT
tac type GOTO
Goto string  ControlInstruction tostring
INS B tostring
B L2

tac type LABELDF
L1:

tec type ASSIGN
findregister: insldr rd=5,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tec type ASSIGN
findregister: insldr rd=6,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=8,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=9,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type SUB
compiler: ./ObjectCode/Arm.cpp:85: ARM::ARM(TACCode *, ScopeItem &): Assertion `code.dest.Type = VARIABLE' failed.
Aborted (core dumped)
