<int>
<id,main>
<(>
<)>
<{>
<int>
<id,a>
<;>
<int>
<id,b>
<;>
<int>
<id,c>
<;>
<id,a>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,b>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,c>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,t>
<;>
<if>
<(>
<id,c>
<+>
Lval
<id,a>
<!=>
Lval
<id,b>
<)>
Lval
<{>
<id,t>
<=>
Lval
<id,c>
<%>
Lval
<->
<id,b>
<;>
Lval
stmt1
<id,putint>
<(>
<id,t>
<)>
Lval
<;>
<}>
<if>
<(>
<id,b>
<->
Lval
<id,c>
<==>
Lval
<id,a>
<)>
Lval
<{>
<id,t>
<=>
Lval
<id,c>
<%>
Lval
<id,b>
<+>
Lval
<id,b>
<;>
Lval
stmt1
<id,putint>
<(>
<id,t>
<)>
Lval
<;>
<}>
<return>
<into>
ExpNumber:0
<;>
<}>
CompUnits (2)
  FuncDef (2)
    NOFParam (2)
    Block (3)
      BlockItems (3)
        VarDecl (3)
          IDENTIFIER a
        BlockItems (4)
          VarDecl (4)
            IDENTIFIER b
          BlockItems (5)
            VarDecl (5)
              IDENTIFIER c
            BlockItems (6)
              Lval_Opassign_Stmt (6)
                LVal (6)
                  IDENTIFIER a
                  ArrayExps (6)
                IntConst (6)
                  CONSTANTINTD: 1
              BlockItems (7)
                Lval_Opassign_Stmt (7)
                  LVal (7)
                    IDENTIFIER b
                    ArrayExps (7)
                  IntConst (7)
                    CONSTANTINTD: 4
                BlockItems (8)
                  Lval_Opassign_Stmt (8)
                    LVal (8)
                      IDENTIFIER c
                      ArrayExps (8)
                    IntConst (8)
                      CONSTANTINTD: 28
                  BlockItems (9)
                    VarDecl (9)
                      IDENTIFIER t
                    BlockItems (10)
                      IF_Stmt (10)
                        Cond (10)
                          OPNOTEQUAL (10)
                            PLUSExp (10)
                              LVal_EXP (10)
                                LVal (10)
                                  IDENTIFIER c
                                  ArrayExps (10)
                              LVal_EXP (10)
                                LVal (10)
                                  IDENTIFIER a
                                  ArrayExps (10)
                            LVal_EXP (10)
                              LVal (10)
                                IDENTIFIER b
                                ArrayExps (10)
                        Block_Stmt (11)
                          Block (11)
                            BlockItems (11)
                              Lval_Opassign_Stmt (11)
                                LVal (11)
                                  IDENTIFIER t
                                  ArrayExps (11)
                                MODExp (11)
                                  LVal_EXP (11)
                                    LVal (11)
                                      IDENTIFIER c
                                      ArrayExps (11)
                                  OPMINUS_Exp (11)
                                    LVal_EXP (11)
                                      LVal (11)
                                        IDENTIFIER b
                                        ArrayExps (11)
                              BlockItems (12)
                                Exp_Stmt (12)
                                  funcall (12)
                                    IDENTIFIER putint
                                    FuncRParams (12)
                                      LVal_EXP (12)
                                        LVal (12)
                                          IDENTIFIER t
                                          ArrayExps (12)
                      BlockItems (14)
                        IF_Stmt (14)
                          Cond (14)
                            OPEQUAL (14)
                              MINUSExp (14)
                                LVal_EXP (14)
                                  LVal (14)
                                    IDENTIFIER b
                                    ArrayExps (14)
                                LVal_EXP (14)
                                  LVal (14)
                                    IDENTIFIER c
                                    ArrayExps (14)
                              LVal_EXP (14)
                                LVal (14)
                                  IDENTIFIER a
                                  ArrayExps (14)
                          Block_Stmt (15)
                            Block (15)
                              BlockItems (15)
                                Lval_Opassign_Stmt (15)
                                  LVal (15)
                                    IDENTIFIER t
                                    ArrayExps (15)
                                  PLUSExp (15)
                                    MODExp (15)
                                      LVal_EXP (15)
                                        LVal (15)
                                          IDENTIFIER c
                                          ArrayExps (15)
                                      LVal_EXP (15)
                                        LVal (15)
                                          IDENTIFIER b
                                          ArrayExps (15)
                                    LVal_EXP (15)
                                      LVal (15)
                                        IDENTIFIER b
                                        ArrayExps (15)
                                BlockItems (16)
                                  Exp_Stmt (16)
                                    funcall (16)
                                      IDENTIFIER putint
                                      FuncRParams (16)
                                        LVal_EXP (16)
                                          LVal (16)
                                            IDENTIFIER t
                                            ArrayExps (16)
                        BlockItems (18)
                          Return_Stmt (18)
                            IntConst (18)
                              CONSTANTOCT: 0


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
c              Variable       TYPEINTEGER    NULL           
t              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
===========================================================
456
789
789
456
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
456
789
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   2)	FUNCTION main :
  2  (at line   6)	_t0 := #1
  3  (at line   6)	a := _t0
  4  (at line   7)	_t1 := #4
  5  (at line   7)	b := _t1
  6  (at line   8)	_t2 := #28
  7  (at line   8)	c := _t2
  8  (at line  10)	_t6 := c
  9  (at line  10)	_t7 := a
 10  (at line  10)	_t3 := _t6 + _t7
 11  (at line  10)	_t8 := b
 12  (at line  10)	IF _t3 != _t8 GOTO label0
 13  (at line  10)	GOTO label1
 14  (at line  10)	LABEL label0 :
 15  (at line  11)	_t10 := c
 16  (at line  11)	_t12 := b
 17  (at line  11)	_t11 := #0 - _t12
 18  (at line  11)	_t9 := _t10 % _t11
 19  (at line  11)	t := _t9
 20  (at line  12)	_t13 := t
 21  (at line  12)	ARG _t13
 22  (at line  12)	CALL putint
 23  (at line  10)	LABEL label1 :
 24  (at line  14)	_t17 := b
 25  (at line  14)	_t18 := c
 26  (at line  14)	_t14 := _t17 - _t18
 27  (at line  14)	_t19 := a
 28  (at line  14)	IF _t14 = _t19 GOTO label2
 29  (at line  14)	GOTO label3
 30  (at line  14)	LABEL label2 :
 31  (at line  15)	_t23 := c
 32  (at line  15)	_t24 := b
 33  (at line  15)	_t21 := _t23 % _t24
 34  (at line  15)	_t22 := b
 35  (at line  15)	_t20 := _t21 + _t22
 36  (at line  15)	t := _t20
 37  (at line  16)	_t25 := t
 38  (at line  16)	ARG _t25
 39  (at line  16)	CALL putint
 40  (at line  14)	LABEL label3 :
 41  (at line  18)	_t26 := #0
 42  (at line  18)	RETURN _t26


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
scope type is wrong
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
Variable offset count+4 :a
Variable offset count+4 :b
Variable offset count+4 :c
Variable offset count+4 :t
Variable offset count+4 :a
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t0
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t1
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t2
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t3
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t6
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t7
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t8
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t9
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t10
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t11
Variable offset count+4 :_t12
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t13
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t14
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t17
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t18
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t19
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t20
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t21
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t22
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t23
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t24
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t25
Variable offset count+4 :_t26
tac type ASSIGN
 assign 1 to tegisteruserreg0contains0
userreg1contains0
userreg2contains0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
0
userreg0contains0x7ec4b0
tac type ASSIGN
userreg0contains0x7ec4b0
userreg1contains0
userreg2contains0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x7ec4b0
tac type ASSIGN
 assign 4 to tegisteruserreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
2
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
tac type ASSIGN
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
tac type ASSIGN
 assign 28 to tegisteruserreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
userreg3contains0x7e3b10
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
4
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
userreg3contains0x7e3b10
userreg4contains0x7ecdc0
tac type ASSIGN
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
userreg3contains0x7e3b10
userreg4contains0x7ecdc0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
userreg3contains0x7e3b10
userreg4contains0x7ecdc0
tac type ASSIGN
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
userreg3contains0x7e3b10
userreg4contains0x7ecdc0
userreg5contains0x7e3d80
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
userreg3contains0x7e3b10
userreg4contains0x7ecdc0
userreg5contains0x7e3d80
tac type ASSIGN
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
userreg3contains0x7e3b10
userreg4contains0x7ecdc0
userreg5contains0x7e3d80
userreg6contains0x7ecfe0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
tac type ADD
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
userreg3contains0x7e3b10
userreg4contains0x7ecdc0
userreg5contains0x7e3d80
userreg6contains0x7ecfe0
userreg8contains0x7ed090
userreg9contains0
userreg10contains0
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
userreg3contains0x7e3b10
userreg4contains0x7ecdc0
userreg5contains0x7e3d80
userreg6contains0x7ecfe0
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
userreg3contains0x7e3b10
userreg4contains0x7ecdc0
userreg5contains0x7e3d80
userreg6contains0x7ecfe0
userreg8contains0x7ed090
tac type ASSIGN
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
userreg3contains0x7e3b10
userreg4contains0x7ecdc0
userreg5contains0x7e3d80
userreg6contains0x7ecfe0
userreg8contains0x7ed090
userreg9contains0x7ecf30
userreg10contains0
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
userreg3contains0x7e3b10
tac type IFNEQ
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
userreg3contains0x7e3b10
userreg4contains0x7ecdc0
userreg5contains0x7e3d80
userreg6contains0x7ecfe0
userreg8contains0x7ed090
userreg9contains0x7ecf30
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
userreg3contains0x7e3b10
userreg4contains0x7ecdc0
userreg5contains0x7e3d80
userreg6contains0x7ecfe0
userreg8contains0x7ed090
userreg9contains0x7ecf30
userreg10contains0x7ed260
tac type GOTO
Goto string B L1

tac type LABELDF
L0:

tac type ASSIGN
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
userreg3contains0x7e3b10
userreg4contains0x7ecdc0
userreg5contains0x7e3d80
userreg6contains0x7ecfe0
userreg8contains0x7ed090
userreg9contains0x7ecf30
userreg10contains0x7ed260
Store Register in getregisterNoLoad variable
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
userreg3contains0x7e3b10
userreg4contains0x7ecdc0
userreg5contains0x7e3d80
tac type ASSIGN
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
userreg3contains0x7e3b10
userreg4contains0x7ecdc0
userreg5contains0x7e3d80
userreg6contains0x7ecfe0
userreg8contains0x7ed090
userreg9contains0x7ecf30
userreg10contains0x7ed540
Store Register in getregisterNoLoad variable
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
userreg3contains0x7e3b10
tac type SUB
userreg0contains0x7ec4b0
userreg1contains0x7e38a0
userreg2contains0x7ec6b0
userreg3contains0x7e3b10
userreg4contains0x7ecdc0
userreg5contains0x7e3d80
userreg6contains0x7ecfe0
userreg8contains0x7ed090
userreg9contains0x7ecf30
userreg10contains0x7ed700
Store Register in getregisterNoLoad variable
register:-1
terminate called after throwing an instance of 'std::runtime_error'
  what():  no variable in this register
Aborted (core dumped)
