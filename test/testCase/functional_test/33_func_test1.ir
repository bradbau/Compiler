<int>
<id,a>
<;>
<int>
<id,myFunc>
<(>
<int>
<id,a>
<,>
<int>
<id,b>
<,>
<int>
<id,c>
<)>
<{>
<id,a>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<{>
<int>
<id,c>
<;>
<id,c>
<=>
Lval
<into>
ExpNumber:0
<;>
stmt1
<if>
<(>
<id,c>
<!=>
Lval
<into>
ExpNumber:0
<)>
<{>
<return>
<into>
ExpNumber:0
<;>
<}>
<}>
<while>
<(>
<id,b>
<>>
Lval
<into>
ExpNumber:0
<)>
<{>
<id,b>
<=>
Lval
<id,b>
<->
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<(>
<id,a>
<)>
Lval
<+>
<(>
<id,b>
<)>
Lval
<;>
<}>
<int>
<id,main>
<(>
<)>
<{>
<id,a>
<=>
Lval
<(>
<intd>
ExpNumber:0
<)>
<;>
stmt1
<int>
<id,b>
<;>
<id,b>
<=>
Lval
<id,myFunc>
<(>
<intd>
ExpNumber:0
<,>
<intd>
ExpNumber:0
<,>
<intd>
ExpNumber:0
<)>
<;>
stmt1
<return>
<(>
<(>
<id,a>
<+>
Lval
<id,b>
<)>
Lval
<)>
<;>
<}>
CompUnits (1)
  VarDecl (1)
    IDENTIFIER a
  CompUnits (3)
    FuncDef (3)
      FuncFParams (3)
        FuncFParam (3)
        FuncFParams (3)
          FuncFParam (3)
          FuncFParam (3)
      Block (4)
        BlockItems (4)
          Lval_Opassign_Stmt (4)
            LVal (4)
              IDENTIFIER a
              ArrayExps (4)
            IntConst (4)
              CONSTANTINTD: 2
          BlockItems (6)
            Block_Stmt (6)
              Block (6)
                BlockItems (6)
                  VarDecl (6)
                    IDENTIFIER c
                  BlockItems (7)
                    Lval_Opassign_Stmt (7)
                      LVal (7)
                        IDENTIFIER c
                        ArrayExps (7)
                      IntConst (7)
                        CONSTANTOCT: 0
                    BlockItems (8)
                      IF_Stmt (8)
                        Cond (8)
                          OPNOTEQUAL (8)
                            LVal_EXP (8)
                              LVal (8)
                                IDENTIFIER c
                                ArrayExps (8)
                            IntConst (8)
                              CONSTANTOCT: 0
                        Block_Stmt (9)
                          Block (9)
                            BlockItems (9)
                              Return_Stmt (9)
                                IntConst (9)
                                  CONSTANTOCT: 0
            BlockItems (12)
              While_Stmt (12)
                Cond (12)
                  OPGREAT (12)
                    LVal_EXP (12)
                      LVal (12)
                        IDENTIFIER b
                        ArrayExps (12)
                    IntConst (12)
                      CONSTANTOCT: 0
                Block_Stmt (13)
                  Block (13)
                    BlockItems (13)
                      Lval_Opassign_Stmt (13)
                        LVal (13)
                          IDENTIFIER b
                          ArrayExps (13)
                        MINUSExp (13)
                          LVal_EXP (13)
                            LVal (13)
                              IDENTIFIER b
                              ArrayExps (13)
                          IntConst (13)
                            CONSTANTINTD: 1
              BlockItems (15)
                Return_Stmt (15)
                  PLUSExp (15)
                    (Exp) (15)
                      LVal_EXP (15)
                        LVal (15)
                          IDENTIFIER a
                          ArrayExps (15)
                    (Exp) (15)
                      LVal_EXP (15)
                        LVal (15)
                          IDENTIFIER b
                          ArrayExps (15)
    CompUnits (18)
      FuncDef (18)
        NOFParam (18)
        Block (19)
          BlockItems (19)
            Lval_Opassign_Stmt (19)
              LVal (19)
                IDENTIFIER a
                ArrayExps (19)
              (Exp) (19)
                IntConst (19)
                  CONSTANTINTD: 3
            BlockItems (20)
              VarDecl (20)
                IDENTIFIER b
              BlockItems (21)
                Lval_Opassign_Stmt (21)
                  LVal (21)
                    IDENTIFIER b
                    ArrayExps (21)
                  funcall (21)
                    IDENTIFIER myFunc
                    FuncRParams (21)
                      IntConst (21)
                        CONSTANTINTD: 1
                      Exps (21)
                        IntConst (21)
                          CONSTANTINTD: 2
                        Exps (21)
                          IntConst (21)
                            CONSTANTINTD: 1
                BlockItems (22)
                  Return_Stmt (22)
                    (Exp) (22)
                      (Exp) (22)
                        PLUSExp (22)
                          LVal_EXP (22)
                            LVal (22)
                              IDENTIFIER a
                              ArrayExps (22)
                          LVal_EXP (22)
                            LVal (22)
                              IDENTIFIER b
                              ArrayExps (22)


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
a              Variable       TYPEINTEGER    NULL           
myFunc         Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:myFunc
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NOT NULL       
b              Variable       TYPEINTEGER    NOT NULL       
c              Variable       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Local:myFunc
ID             category       type           depictor
              
               Block          BLOCKStmt      NOT NULL       
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
c              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
b              Variable       TYPEINTEGER    NULL           
===========================================================
789
789
123
456
789
456
789
456
789
789
789
456
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
456

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   3)	FUNCTION myFunc :
  2  (at line   3)	PARAM a
  3  (at line   3)	PARAM b
  4  (at line   3)	PARAM c
  5  (at line   4)	_t0 := #2
  6  (at line   4)	a := _t0
  7  (at line   7)	_t1 := #0
  8  (at line   7)	c := _t1
  9  (at line   8)	_t2 := c
 10  (at line   8)	_t5 := #0
 11  (at line   8)	IF _t2 != _t5 GOTO label0
 12  (at line   8)	GOTO label1
 13  (at line   8)	LABEL label0 :
 14  (at line   9)	_t6 := #0
 15  (at line   9)	RETURN _t6
 16  (at line   8)	LABEL label1 :
 17  (at line  12)	LABEL label2 :
 18  (at line  12)	_t7 := b
 19  (at line  12)	_t10 := #0
 20  (at line  12)	IF _t7 > _t10 GOTO label3
 21  (at line  12)	GOTO label4
 22  (at line  12)	LABEL label3 :
 23  (at line  13)	_t12 := b
 24  (at line  13)	_t13 := #1
 25  (at line  13)	_t11 := _t12 - _t13
 26  (at line  13)	b := _t11
 27  (at line  12)	GOTO label2
 28  (at line  12)	LABEL label4 :
 29  (at line  15)	_t17 := a
 30  (at line  15)	_t15 := _t17
 31  (at line  15)	_t18 := b
 32  (at line  15)	_t16 := _t18
 33  (at line  15)	_t14 := _t15 + _t16
 34  (at line  15)	RETURN _t14

 35  (at line  18)	FUNCTION main :
 36  (at line  19)	_t20 := #3
 37  (at line  19)	_t19 := _t20
 38  (at line  19)	a := _t19
 39  (at line  21)	_t22 := #1
 40  (at line  21)	_t23 := #2
 41  (at line  21)	_t24 := #1
 42  (at line  21)	ARG _t24
 43  (at line  21)	ARG _t23
 44  (at line  21)	ARG _t22
 45  (at line  21)	_t21 := CALL myFunc
 46  (at line  21)	b := _t21
 47  (at line  22)	_t28 := a
 48  (at line  22)	_t29 := b
 49  (at line  22)	_t27 := _t28 + _t29
 50  (at line  22)	_t26 := _t27
 51  (at line  22)	_t25 := _t26
 52  (at line  22)	RETURN _t25


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
a              Variable       TYPEINTEGER    NULL           
myFunc         Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:myFunc
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NOT NULL       
b              Variable       TYPEINTEGER    NOT NULL       
c              Variable       TYPEINTEGER    NOT NULL       
scope type is wrong
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
scope type is wrong
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t0
Variable offset count+4 :_t7
Variable offset count+4 :_t10
Variable offset count+4 :_t11
Variable offset count+4 :_t12
Variable offset count+4 :_t13
Variable offset count+4 :_t14
Variable offset count+4 :_t15
Variable offset count+4 :_t16
Variable offset count+4 :_t17
Variable offset count+4 :_t18
tac type ASSIGN
 assign 2 to tegisteruserreg0contains0x9e7a60
userreg1contains0x9e7cd0
userreg2contains0x9e7f40
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
0
userreg0contains0x9f03a0
tac type ASSIGN
userreg0contains0x9f03a0
userreg1contains0x9e7cd0
userreg2contains0x9e7f40
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x9f03a0
tac type ASSIGN
 assign 0 to tegisteruserreg0contains0x9f03a0
userreg1contains0x9e7a60
userreg2contains0x9e7f40
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
2
userreg0contains0x9f03a0
userreg1contains0x9e7a60
userreg2contains0x9f05a0
tac type ASSIGN
userreg0contains0x9f03a0
userreg1contains0x9e7a60
userreg2contains0x9f05a0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x9f03a0
userreg1contains0x9e7a60
userreg2contains0x9f05a0
tac type ASSIGN
userreg0contains0x9f03a0
userreg1contains0x9e7a60
userreg2contains0x9f05a0
userreg3contains0x9e8860
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x9f03a0
userreg1contains0x9e7a60
userreg2contains0x9f05a0
userreg3contains0x9e8860
tac type ASSIGN
 assign 0 to tegisteruserreg0contains0x9f03a0
userreg1contains0x9e7a60
userreg2contains0x9f05a0
userreg3contains0x9e8860
userreg4contains0x9f10c0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
5
userreg0contains0x9f03a0
userreg1contains0x9e7a60
userreg2contains0x9f05a0
userreg3contains0x9e8860
userreg4contains0x9f10c0
userreg5contains0x9f11d0
tac type IFNEQ
userreg0contains0x9f03a0
userreg1contains0x9e7a60
userreg2contains0x9f05a0
userreg3contains0x9e8860
userreg4contains0x9f10c0
userreg0contains0x9f03a0
userreg1contains0x9e7a60
userreg2contains0x9f05a0
userreg3contains0x9e8860
userreg4contains0x9f10c0
userreg5contains0x9f11d0
tac type GOTO
Goto string B L1

tac type LABELDF
L0:

tac type ASSIGN
 assign 0 to tegisteruserreg0contains0x9f03a0
userreg1contains0x9e7a60
userreg2contains0x9f05a0
userreg3contains0x9e8860
userreg4contains0x9f10c0
userreg5contains0x9f11d0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
6
userreg0contains0x9f03a0
userreg1contains0x9e7a60
userreg2contains0x9f05a0
userreg3contains0x9e8860
userreg4contains0x9f10c0
userreg5contains0x9f11d0
userreg6contains0x9f1460
tac type RETURN
userreg0contains0x9f03a0
userreg1contains0x9e7a60
userreg2contains0x9f05a0
userreg3contains0x9e8860
userreg4contains0x9f10c0
userreg5contains0x9f11d0
userreg6contains0x9f1460
tac type ARG
tac type LABELDF
L1:

tac type LABELDF
L2:

tac type ASSIGN
userreg0contains0x9f03a0
userreg1contains0x9e7a60
userreg2contains0x9f05a0
userreg3contains0x9e8860
userreg4contains0x9f10c0
userreg5contains0x9f11d0
userreg6contains0x9f1460
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x9f03a0
userreg1contains0x9e7a60
userreg2contains0x9f05a0
userreg3contains0x9e8860
userreg4contains0x9f10c0
userreg5contains0x9f11d0
userreg6contains0x9f1460
userreg8contains0x9f1690
userreg9contains0
userreg10contains0
findregister: insldr rd=9,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ASSIGN
 assign 0 to tegisteruserreg0contains0x9f03a0
userreg1contains0x9e7a60
userreg2contains0x9f05a0
userreg3contains0x9e8860
userreg4contains0x9f10c0
userreg5contains0x9f11d0
userreg6contains0x9f1460
userreg8contains0x9f1690
userreg9contains0x9e7cd0
userreg10contains0
10
userreg0contains0x9f03a0
userreg1contains0x9e7a60
userreg2contains0x9f05a0
userreg3contains0x9e8860
userreg4contains0x9f10c0
userreg5contains0x9f11d0
userreg6contains0x9f1460
userreg8contains0x9f1690
userreg9contains0x9e7cd0
userreg10contains0x9f17a0
tac type IFGT
userreg0contains0x9f03a0
userreg1contains0x9e7a60
userreg2contains0x9f05a0
userreg3contains0x9e8860
userreg4contains0x9f10c0
userreg5contains0x9f11d0
userreg6contains0x9f1460
userreg8contains0x9f1690
userreg0contains0x9f03a0
userreg1contains0x9e7a60
userreg2contains0x9f05a0
userreg3contains0x9e8860
userreg4contains0x9f10c0
userreg5contains0x9f11d0
userreg6contains0x9f1460
userreg8contains0x9f1690
userreg9contains0x9e7cd0
userreg10contains0x9f17a0
ControlInstruction String:BGT L3

tac type GOTO
Goto string B L4

tac type LABELDF
L3:

tac type ASSIGN
userreg0contains0x9f03a0
userreg1contains0x9e7a60
userreg2contains0x9f05a0
userreg3contains0x9e8860
userreg4contains0x9f10c0
userreg5contains0x9f11d0
userreg6contains0x9f1460
userreg8contains0x9f1690
userreg9contains0x9e7cd0
userreg10contains0x9f17a0
Store Register in getregisterNoLoad variable
register:-1
terminate called after throwing an instance of 'std::runtime_error'
  what():  no variable in this register
Aborted (core dumped)
