--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("myFunc")
--accepting rule at line 80 ("(")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 76 (",")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 76 (",")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 101 ("if")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 94 ("!=")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 103 ("while")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 95 (">")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 81 (")")
--accepting rule at line 84 ("+")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("b")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
<int>
<id,a>
<;>
<int>
<id,myFunc>
<(>
<int>
<id,a>
<,>
<int>
<id,b>
<,>
<int>
<id,c>
<)>
<{>
<id,a>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<{>
<int>
<id,c>
<;>
<id,c>
<=>
Lval
<into>
ExpNumber:0
<;>
stmt1
<if>
<(>
<id,c>
<!=>
Lval
<into>
ExpNumber:0
<)>
<{>
<return>
<into>
ExpNumber:0
<;>
<}>
<}>
<while>
<(>
<id,b>
<>>
Lval
<into>
ExpNumber:0
<)>
<{>
<id,b>
<=>
Lval
<id,b>
<->
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<(>
<id,a>
<)>
Lval
<+>
<(>
<id,b>
<)>
Lval
<;>
<}>
<int>
<id,main>
<(>
<)>
<{>
<id,a--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 109 ("3")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("myFunc")
--accepting rule at line 80 ("(")
--accepting rule at line 109 ("1")
--accepting rule at line 76 (",")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 76 (",")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 84 ("+")
--accepting rule at line 112 ("b")
--accepting rule at line 81 (")")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--(end of buffer or a NUL)
--EOF (start condition 0)
>
<=>
Lval
<(>
<intd>
ExpNumber:0
<)>
<;>
stmt1
<int>
<id,b>
<;>
<id,b>
<=>
Lval
<id,myFunc>
<(>
<intd>
ExpNumber:0
<,>
<intd>
ExpNumber:0
<,>
<intd>
ExpNumber:0
<)>
<;>
stmt1
<return>
<(>
<(>
<id,a>
<+>
Lval
<id,b>
<)>
Lval
<)>
<;>
<}>
CompUnits (1)
  VarDecl (1)
    IDENTIFIER a
  CompUnits (3)
    FuncDef (3)
      FuncFParams (3)
        FuncFParam (3)
        FuncFParams (3)
          FuncFParam (3)
          FuncFParam (3)
      Block (4)
        BlockItems (4)
          Lval_Opassign_Stmt (4)
            LVal (4)
              IDENTIFIER a
              ArrayExps (4)
            IntConst (4)
              CONSTANTINTD: 2
          BlockItems (6)
            Block_Stmt (6)
              Block (6)
                BlockItems (6)
                  VarDecl (6)
                    IDENTIFIER c
                  BlockItems (7)
                    Lval_Opassign_Stmt (7)
                      LVal (7)
                        IDENTIFIER c
                        ArrayExps (7)
                      IntConst (7)
                        CONSTANTOCT: 0
                    BlockItems (8)
                      IF_Stmt (8)
                        Cond (8)
                          OPNOTEQUAL (8)
                            LVal_EXP (8)
                              LVal (8)
                                IDENTIFIER c
                                ArrayExps (8)
                            IntConst (8)
                              CONSTANTOCT: 0
                        Block_Stmt (9)
                          Block (9)
                            BlockItems (9)
                              Return_Stmt (9)
                                IntConst (9)
                                  CONSTANTOCT: 0
            BlockItems (12)
              While_Stmt (12)
                Cond (12)
                  OPGREAT (12)
                    LVal_EXP (12)
                      LVal (12)
                        IDENTIFIER b
                        ArrayExps (12)
                    IntConst (12)
                      CONSTANTOCT: 0
                Block_Stmt (13)
                  Block (13)
                    BlockItems (13)
                      Lval_Opassign_Stmt (13)
                        LVal (13)
                          IDENTIFIER b
                          ArrayExps (13)
                        MINUSExp (13)
                          LVal_EXP (13)
                            LVal (13)
                              IDENTIFIER b
                              ArrayExps (13)
                          IntConst (13)
                            CONSTANTINTD: 1
              BlockItems (15)
                Return_Stmt (15)
                  PLUSExp (15)
                    (Exp) (15)
                      LVal_EXP (15)
                        LVal (15)
                          IDENTIFIER a
                          ArrayExps (15)
                    (Exp) (15)
                      LVal_EXP (15)
                        LVal (15)
                          IDENTIFIER b
                          ArrayExps (15)
    CompUnits (18)
      FuncDef (18)
        NOFParam (18)
        Block (19)
          BlockItems (19)
            Lval_Opassign_Stmt (19)
              LVal (19)
                IDENTIFIER a
                ArrayExps (19)
              (Exp) (19)
                IntConst (19)
                  CONSTANTINTD: 3
            BlockItems (20)
              VarDecl (20)
                IDENTIFIER b
              BlockItems (21)
                Lval_Opassign_Stmt (21)
                  LVal (21)
                    IDENTIFIER b
                    ArrayExps (21)
                  funcall (21)
                    IDENTIFIER myFunc
                    FuncRParams (21)
                      IntConst (21)
                        CONSTANTINTD: 1
                      Exps (21)
                        IntConst (21)
                          CONSTANTINTD: 2
                        Exps (21)
                          IntConst (21)
                            CONSTANTINTD: 1
                BlockItems (22)
                  Return_Stmt (22)
                    (Exp) (22)
                      (Exp) (22)
                        PLUSExp (22)
                          LVal_EXP (22)
                            LVal (22)
                              IDENTIFIER a
                              ArrayExps (22)
                          LVal_EXP (22)
                            LVal (22)
                              IDENTIFIER b
                              ArrayExps (22)


===========================================================
Global
ID             category       type           depictor
               
a              Variable       TYPEINTEGER    NULL           
myFunc         Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:myFunc
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NOT NULL       
b              Variable       TYPEINTEGER    NOT NULL       
c              Variable       TYPEINTEGER    NOT NULL       
===========================================================
Local:myFunc
ID             category       type           depictor
              
               Block          BLOCKStmt      NOT NULL       
               Block          BLOCKStmt      NULL           
===========================================================
Local:block
ID             category       type           depictor
              
c              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:main
ID             category       type           depictor
              
b              Variable       TYPEINTEGER    NULL           
Segmentation fault (core dumped)
