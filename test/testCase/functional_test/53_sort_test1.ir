arg S
--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("bubblesort")
--accepting rule at line 80 ("(")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("arr")
--accepting rule at line 82 ("[")
--accepting rule at line 83 ("]")
--accepting rule at line 81 (")")
<int>
<id,n>
<;>
<int>
<id,bubblesort>
<(>
<int>
<id,arr>
<[>
<]>
<)>
33333333333
1111111111111111
--accepting rule at line 115 ("
")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
<{>
<int>
<id,i>
<;>
<int>
<id,j>
<;>
<id,i>
<=>
33333333333
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 114 (" ")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<into>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,i>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 85 ("-")
Lval
<id,n>
<->
33333333333
--accepting rule at line 109 ("1")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 74 ("// Last i elements are already in place
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,j>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<into>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,j>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 85 ("-")
Lval
<id,n>
<->
33333333333
--accepting rule at line 112 ("i")
--accepting rule at line 85 ("-")
Lval
<id,i>
<->
33333333333
--accepting rule at line 109 ("1")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 101 ("if")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 83 ("]")
Lval
<intd>
ExpNumber:0
<)>
<{>
<if>
<(>
<id,arr>
<[>
<id,j>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 95 (">")
Lval
<>>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 84 ("+")
Lval
<id,arr>
<[>
<id,j>
<+>
33333333333
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 81 (")")
Lval
<intd>
ExpNumber:0
<]>
<)>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 74 ("// swap(&arr[j], &arr[j+1]); 
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<{>
<int>
<id,tmp>
<;>
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 84 ("+")
Lval
<id,arr>
<[>
<id,j>
<+>
33333333333
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
Lval
<intd>
ExpNumber:0
<]>
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 84 ("+")
Lval
stmt1
<id,arr>
<[>
<id,j>
<+>
33333333333
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 83 ("]")
Lval
<id,arr>
<[>
<id,j>
<]>
33333333333
--accepting rule at line 75 (";")
Lval
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 83 ("]")
Lval
stmt1
<id,arr>
<[>
<id,j>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 75 (";")
Lval
<id,tmp>
<;>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<}>
<id,j>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,j>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,i>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<into>
ExpNumber:0
<;>
<}>
<int>
<id,main>
<(>
<)>
<{>
<id,n>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("10")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 111 ("0")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<;>
<id,a>
<[>
<into>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("4")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("3")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("2")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("9")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("3")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("4")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("5")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("6")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("6")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("7")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("5")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("8")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("7")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("9")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("8")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,i>
<;>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("bubblesort")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 81 (")")
Lval
<id,bubblesort>
<(>
<id,a>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<;>
stmt1
<while>
<(>
<id,i>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 81 (")")
Lval
<id,n>
<)>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<{>
<int>
<id,tmp>
<;>
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<id,a>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 75 (";")
Lval
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putint")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("tmp")
--accepting rule at line 81 (")")
Lval
stmt1
<id,putint>
<(>
<id,tmp>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<;>
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putch")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("tmp")
--accepting rule at line 81 (")")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,putch>
<(>
<id,tmp>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<;>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,i>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<into>
ExpNumber:0
<;>
<}>
CompUnits (1)
  VarDecl (1)
    IDENTIFIER n
  CompUnits (2)
    FuncDef (2)
      FuncFParam (2)
        ArrayExps (2)
      Block (4)
        BlockItems (4)
          VarDecl (4)
            IDENTIFIER i
          BlockItems (5)
            VarDecl (5)
              IDENTIFIER j
            BlockItems (6)
              Lval_Opassign_Stmt (6)
                LVal (6)
                  IDENTIFIER i
                  ArrayExps (6)
                IntConst (6)
                  CONSTANTOCT: 0
              BlockItems (7)
                While_Stmt (7)
                  Cond (7)
                    OPLIGHT (7)
                      LVal_EXP (7)
                        LVal (7)
                          IDENTIFIER i
                          ArrayExps (7)
                      MINUSExp (7)
                        LVal_EXP (7)
                          LVal (7)
                            IDENTIFIER n
                            ArrayExps (7)
                        IntConst (7)
                          CONSTANTINTD: 1
                  Block_Stmt (9)
                    Block (9)
                      BlockItems (9)
                        Lval_Opassign_Stmt (9)
                          LVal (9)
                            IDENTIFIER j
                            ArrayExps (9)
                          IntConst (9)
                            CONSTANTOCT: 0
                        BlockItems (10)
                          While_Stmt (10)
                            Cond (10)
                              OPLIGHT (10)
                                LVal_EXP (10)
                                  LVal (10)
                                    IDENTIFIER j
                                    ArrayExps (10)
                                MINUSExp (10)
                                  MINUSExp (10)
                                    LVal_EXP (10)
                                      LVal (10)
                                        IDENTIFIER n
                                        ArrayExps (10)
                                    LVal_EXP (10)
                                      LVal (10)
                                        IDENTIFIER i
                                        ArrayExps (10)
                                  IntConst (10)
                                    CONSTANTINTD: 1
                            Block_Stmt (11)
                              Block (11)
                                BlockItems (11)
                                  IF_Stmt (11)
                                    Cond (11)
                                      OPGREAT (11)
                                        LVal_EXP (11)
                                          LVal (11)
                                            IDENTIFIER arr
                                            ArrayExps (11)
                                              LVal_EXP (11)
                                                LVal (11)
                                                  IDENTIFIER j
                                                  ArrayExps (11)
                                              ArrayExps (11)
                                        LVal_EXP (11)
                                          LVal (11)
                                            IDENTIFIER arr
                                            ArrayExps (11)
                                              PLUSExp (11)
                                                LVal_EXP (11)
                                                  LVal (11)
                                                    IDENTIFIER j
                                                    ArrayExps (11)
                                                IntConst (11)
                                                  CONSTANTINTD: 1
                                              ArrayExps (11)
                                    Block_Stmt (13)
                                      Block (13)
                                        BlockItems (13)
                                          VarDecl (13)
                                            IDENTIFIER tmp
                                          BlockItems (14)
                                            Lval_Opassign_Stmt (14)
                                              LVal (14)
                                                IDENTIFIER tmp
                                                ArrayExps (14)
                                              LVal_EXP (14)
                                                LVal (14)
                                                  IDENTIFIER arr
                                                  ArrayExps (14)
                                                    PLUSExp (14)
                                                      LVal_EXP (14)
                                                        LVal (14)
                                                          IDENTIFIER j
                                                          ArrayExps (14)
                                                      IntConst (14)
                                                        CONSTANTINTD: 1
                                                    ArrayExps (14)
                                            BlockItems (15)
                                              Lval_Opassign_Stmt (15)
                                                LVal (15)
                                                  IDENTIFIER arr
                                                  ArrayExps (15)
                                                    PLUSExp (15)
                                                      LVal_EXP (15)
                                                        LVal (15)
                                                          IDENTIFIER j
                                                          ArrayExps (15)
                                                      IntConst (15)
                                                        CONSTANTINTD: 1
                                                    ArrayExps (15)
                                                LVal_EXP (15)
                                                  LVal (15)
                                                    IDENTIFIER arr
                                                    ArrayExps (15)
                                                      LVal_EXP (15)
                                                        LVal (15)
                                                          IDENTIFIER j
                                                          ArrayExps (15)
                                                      ArrayExps (15)
                                              BlockItems (16)
                                                Lval_Opassign_Stmt (16)
                                                  LVal (16)
                                                    IDENTIFIER arr
                                                    ArrayExps (16)
                                                      LVal_EXP (16)
                                                        LVal (16)
                                                          IDENTIFIER j
                                                          ArrayExps (16)
                                                      ArrayExps (16)
                                                  LVal_EXP (16)
                                                    LVal (16)
                                                      IDENTIFIER tmp
                                                      ArrayExps (16)
                                  BlockItems (18)
                                    Lval_Opassign_Stmt (18)
                                      LVal (18)
                                        IDENTIFIER j
                                        ArrayExps (18)
                                      PLUSExp (18)
                                        LVal_EXP (18)
                                          LVal (18)
                                            IDENTIFIER j
                                            ArrayExps (18)
                                        IntConst (18)
                                          CONSTANTINTD: 1
                          BlockItems (20)
                            Lval_Opassign_Stmt (20)
                              LVal (20)
                                IDENTIFIER i
                                ArrayExps (20)
                              PLUSExp (20)
                                LVal_EXP (20)
                                  LVal (20)
                                    IDENTIFIER i
                                    ArrayExps (20)
                                IntConst (20)
                                  CONSTANTINTD: 1
                BlockItems (22)
                  Return_Stmt (22)
                    IntConst (22)
                      CONSTANTOCT: 0
    CompUnits (25)
      FuncDef (25)
        NOFParam (25)
        Block (26)
          BlockItems (26)
            Lval_Opassign_Stmt (26)
              LVal (26)
                IDENTIFIER n
                ArrayExps (26)
              IntConst (26)
                CONSTANTINTD: 10
            BlockItems (27)
              VarDecl (27)
                ArrayDec: demmision=0
                  IDENTIFIER a
              BlockItems (28)
                Lval_Opassign_Stmt (28)
                  LVal (28)
                    IDENTIFIER a
                    ArrayExps (28)
                      IntConst (28)
                        CONSTANTOCT: 0
                      ArrayExps (28)
                  IntConst (28)
                    CONSTANTINTD: 4
                BlockItems (28)
                  Lval_Opassign_Stmt (28)
                    LVal (28)
                      IDENTIFIER a
                      ArrayExps (28)
                        IntConst (28)
                          CONSTANTINTD: 1
                        ArrayExps (28)
                    IntConst (28)
                      CONSTANTINTD: 3
                  BlockItems (28)
                    Lval_Opassign_Stmt (28)
                      LVal (28)
                        IDENTIFIER a
                        ArrayExps (28)
                          IntConst (28)
                            CONSTANTINTD: 2
                          ArrayExps (28)
                      IntConst (28)
                        CONSTANTINTD: 9
                    BlockItems (28)
                      Lval_Opassign_Stmt (28)
                        LVal (28)
                          IDENTIFIER a
                          ArrayExps (28)
                            IntConst (28)
                              CONSTANTINTD: 3
                            ArrayExps (28)
                        IntConst (28)
                          CONSTANTINTD: 2
                      BlockItems (28)
                        Lval_Opassign_Stmt (28)
                          LVal (28)
                            IDENTIFIER a
                            ArrayExps (28)
                              IntConst (28)
                                CONSTANTINTD: 4
                              ArrayExps (28)
                          IntConst (28)
                            CONSTANTOCT: 0
                        BlockItems (29)
                          Lval_Opassign_Stmt (29)
                            LVal (29)
                              IDENTIFIER a
                              ArrayExps (29)
                                IntConst (29)
                                  CONSTANTINTD: 5
                                ArrayExps (29)
                            IntConst (29)
                              CONSTANTINTD: 1
                          BlockItems (29)
                            Lval_Opassign_Stmt (29)
                              LVal (29)
                                IDENTIFIER a
                                ArrayExps (29)
                                  IntConst (29)
                                    CONSTANTINTD: 6
                                  ArrayExps (29)
                              IntConst (29)
                                CONSTANTINTD: 6
                            BlockItems (29)
                              Lval_Opassign_Stmt (29)
                                LVal (29)
                                  IDENTIFIER a
                                  ArrayExps (29)
                                    IntConst (29)
                                      CONSTANTINTD: 7
                                    ArrayExps (29)
                                IntConst (29)
                                  CONSTANTINTD: 5
                              BlockItems (29)
                                Lval_Opassign_Stmt (29)
                                  LVal (29)
                                    IDENTIFIER a
                                    ArrayExps (29)
                                      IntConst (29)
                                        CONSTANTINTD: 8
                                      ArrayExps (29)
                                  IntConst (29)
                                    CONSTANTINTD: 7
                                BlockItems (29)
                                  Lval_Opassign_Stmt (29)
                                    LVal (29)
                                      IDENTIFIER a
                                      ArrayExps (29)
                                        IntConst (29)
                                          CONSTANTINTD: 9
                                        ArrayExps (29)
                                    IntConst (29)
                                      CONSTANTINTD: 8
                                  BlockItems (30)
                                    VarDecl (30)
                                      IDENTIFIER i
                                    BlockItems (31)
                                      Lval_Opassign_Stmt (31)
                                        LVal (31)
                                          IDENTIFIER i
                                          ArrayExps (31)
                                        funcall (31)
                                          IDENTIFIER bubblesort
                                          FuncRParams (31)
                                            LVal_EXP (31)
                                              LVal (31)
                                                IDENTIFIER a
                                                ArrayExps (31)
                                      BlockItems (32)
                                        While_Stmt (32)
                                          Cond (32)
                                            OPLIGHT (32)
                                              LVal_EXP (32)
                                                LVal (32)
                                                  IDENTIFIER i
                                                  ArrayExps (32)
                                              LVal_EXP (32)
                                                LVal (32)
                                                  IDENTIFIER n
                                                  ArrayExps (32)
                                          Block_Stmt (33)
                                            Block (33)
                                              BlockItems (33)
                                                VarDecl (33)
                                                  IDENTIFIER tmp
                                                BlockItems (34)
                                                  Lval_Opassign_Stmt (34)
                                                    LVal (34)
                                                      IDENTIFIER tmp
                                                      ArrayExps (34)
                                                    LVal_EXP (34)
                                                      LVal (34)
                                                        IDENTIFIER a
                                                        ArrayExps (34)
                                                          LVal_EXP (34)
                                                            LVal (34)
                                                              IDENTIFIER i
                                                              ArrayExps (34)
                                                          ArrayExps (34)
                                                  BlockItems (35)
                                                    Exp_Stmt (35)
                                                      funcall (35)
                                                        IDENTIFIER putint
                                                        FuncRParams (35)
                                                          LVal_EXP (35)
                                                            LVal (35)
                                                              IDENTIFIER tmp
                                                              ArrayExps (35)
                                                    BlockItems (36)
                                                      Lval_Opassign_Stmt (36)
                                                        LVal (36)
                                                          IDENTIFIER tmp
                                                          ArrayExps (36)
                                                        IntConst (36)
                                                          CONSTANTINTD: 10
                                                      BlockItems (37)
                                                        Exp_Stmt (37)
                                                          funcall (37)
                                                            IDENTIFIER putch
                                                            FuncRParams (37)
                                                              LVal_EXP (37)
                                                                LVal (37)
                                                                  IDENTIFIER tmp
                                                                  ArrayExps (37)
                                                        BlockItems (38)
                                                          Lval_Opassign_Stmt (38)
                                                            LVal (38)
                                                              IDENTIFIER i
                                                              ArrayExps (38)
                                                            PLUSExp (38)
                                                              LVal_EXP (38)
                                                                LVal (38)
                                                                  IDENTIFIER i
                                                                  ArrayExps (38)
                                                              IntConst (38)
                                                                CONSTANTINTD: 1
                                        BlockItems (40)
                                          Return_Stmt (40)
                                            IntConst (40)
                                              CONSTANTOCT: 0


===========================================================
Global
ID             category       type           depictor
               
n              Variable       TYPEINTEGER    NULL           
bubblesort     Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:bubblesort
ID             category       type           depictor
              
arr            Array          TYPEINTEGER    ----------> dim=1
===========================================================
===========================================================
Local:bubblesort
ID             category       type           depictor
              
i              Variable       TYPEINTEGER    NULL           
j              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
tmp            Variable       TYPEINTEGER    NULL           
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
a              Array          TYPEINTEGER    ----------> dim=1
i              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
tmp            Variable       TYPEINTEGER    NULL           
===========================================================
456
789
456
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
TraverseScopeStack no result
789
789
789
789
456
789
789
789
789
789
456
789
789
789
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
TraverseScopeStack no result
789
789
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   2)	FUNCTION bubblesort :
  2  (at line   2)	PARAM arr
  3  (at line   6)	_t0 := #0
  4  (at line   6)	i := _t0
  5  (at line   7)	LABEL label0 :
  6  (at line   7)	_t1 := i
  7  (at line   7)	_t5 := n
  8  (at line   7)	_t6 := #1
  9  (at line   7)	_t4 := _t5 - _t6
 10  (at line   7)	IF _t1 < _t4 GOTO label1
 11  (at line   7)	GOTO label2
 12  (at line   7)	LABEL label1 :
 13  (at line   9)	_t7 := #0
 14  (at line   9)	j := _t7
 15  (at line  10)	LABEL label3 :
 16  (at line  10)	_t8 := j
 17  (at line  10)	_t14 := n
 18  (at line  10)	_t15 := i
 19  (at line  10)	_t12 := _t14 - _t15
 20  (at line  10)	_t13 := #1
 21  (at line  10)	_t11 := _t12 - _t13
 22  (at line  10)	IF _t8 < _t11 GOTO label4
 23  (at line  10)	GOTO label5
 24  (at line  10)	LABEL label4 :
 25  (at line  11)	_t21 := j
 26  (at line  11)	_t16 := arr[_t21]
 27  (at line  11)	_t27 := j
 28  (at line  11)	_t28 := #1
 29  (at line  11)	_t26 := _t27 + _t28
 30  (at line  11)	_t23 := arr[_t26]
 31  (at line  11)	IF _t16 > _t23 GOTO label6
 32  (at line  11)	GOTO label7
 33  (at line  11)	LABEL label6 :
 34  (at line  14)	_t34 := j
 35  (at line  14)	_t35 := #1
 36  (at line  14)	_t33 := _t34 + _t35
 37  (at line  14)	_t30 := arr[_t33]
 38  (at line  14)	tmp := _t30
 39  (at line  15)	_t40 := j
 40  (at line  15)	_t37 := arr[_t40]
 41  (at line  15)	_t45 := j
 42  (at line  15)	_t46 := #1
 43  (at line  15)	_t44 := _t45 + _t46
 44  (at line  15)	arr[_t44] := _t37
 45  (at line  16)	_t48 := tmp
 46  (at line  16)	_t51 := j
 47  (at line  16)	arr[_t51] := _t48
 48  (at line  11)	LABEL label7 :
 49  (at line  18)	_t54 := j
 50  (at line  18)	_t55 := #1
 51  (at line  18)	_t53 := _t54 + _t55
 52  (at line  18)	j := _t53
 53  (at line  10)	GOTO label3
 54  (at line  10)	LABEL label5 :
 55  (at line  20)	_t57 := i
 56  (at line  20)	_t58 := #1
 57  (at line  20)	_t56 := _t57 + _t58
 58  (at line  20)	i := _t56
 59  (at line   7)	GOTO label0
 60  (at line   7)	LABEL label2 :
 61  (at line  22)	_t59 := #0
 62  (at line  22)	RETURN _t59

 63  (at line  25)	FUNCTION main :
 64  (at line  26)	_t60 := #10
 65  (at line  26)	n := _t60
 66  (at line  28)	_t61 := #4
 67  (at line  28)	_t64 := #0
 68  (at line  28)	a[_t64] := _t61
 69  (at line  28)	_t66 := #3
 70  (at line  28)	_t69 := #1
 71  (at line  28)	a[_t69] := _t66
 72  (at line  28)	_t71 := #9
 73  (at line  28)	_t74 := #2
 74  (at line  28)	a[_t74] := _t71
 75  (at line  28)	_t76 := #2
 76  (at line  28)	_t79 := #3
 77  (at line  28)	a[_t79] := _t76
 78  (at line  28)	_t81 := #0
 79  (at line  28)	_t84 := #4
 80  (at line  28)	a[_t84] := _t81
 81  (at line  29)	_t86 := #1
 82  (at line  29)	_t89 := #5
 83  (at line  29)	a[_t89] := _t86
 84  (at line  29)	_t91 := #6
 85  (at line  29)	_t94 := #6
 86  (at line  29)	a[_t94] := _t91
 87  (at line  29)	_t96 := #5
 88  (at line  29)	_t99 := #7
 89  (at line  29)	a[_t99] := _t96
 90  (at line  29)	_t101 := #7
 91  (at line  29)	_t104 := #8
 92  (at line  29)	a[_t104] := _t101
 93  (at line  29)	_t106 := #8
 94  (at line  29)	_t109 := #9
 95  (at line  29)	a[_t109] := _t106
 96  (at line  27)	_t113 := #10
 97  (at line  31)	ARG a[_t113]
 98  (at line  31)	_t111 := CALL bubblesort
 99  (at line  31)	i := _t111
100  (at line  32)	LABEL label8 :
101  (at line  32)	_t114 := i
102  (at line  32)	_t117 := n
103  (at line  32)	IF _t114 < _t117 GOTO label9
104  (at line  32)	GOTO label10
105  (at line  32)	LABEL label9 :
106  (at line  34)	_t121 := i
107  (at line  34)	_t118 := a[_t121]
108  (at line  34)	tmp := _t118
109  (at line  35)	_t123 := tmp
110  (at line  35)	ARG _t123
111  (at line  35)	CALL 
112  (at line  36)	_t124 := #10
113  (at line  36)	tmp := _t124
114  (at line  37)	_t125 := tmp
115  (at line  37)	ARG _t125
116  (at line  37)	CALL 
117  (at line  38)	_t127 := i
118  (at line  38)	_t128 := #1
119  (at line  38)	_t126 := _t127 + _t128
120  (at line  38)	i := _t126
121  (at line  32)	GOTO label8
122  (at line  32)	LABEL label10 :
123  (at line  40)	_t129 := #0
124  (at line  40)	RETURN _t129


===========================================================
Global
ID             category       type           depictor
               
n              Variable       TYPEINTEGER    NULL           
bubblesort     Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:bubblesort
ID             category       type           depictor
              
arr            Array          TYPEINTEGER    ----------> dim=1
scope type is wrong
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
scope type is wrong
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
Variable offset count+4 :i
Variable offset count+4 :i
Variable offset count+4 :i
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t0
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t1
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t4
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t5
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t6
Variable offset count+4 :_t59
tec type ASSIGN
findregister: insldr rd=0,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=1,r1=11,r2 offset=0,op2type=1, insefft=0
tac type LABELDF
L0:

tec type ASSIGN
findregister: insldr rd=2,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=3,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=4,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=5,r1=11,r2 offset=0,op2type=1, insefft=0
tac type SUB
compiler: ./ObjectCode/Arm.cpp:85: ARM::ARM(TACCode *, ScopeItem &): Assertion `code.dest.Type = VARIABLE' failed.
Aborted (core dumped)
