<int>
<id,doubleWhile>
<(>
<)>
<{>
<int>
<id,i>
<;>
<id,i>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,j>
<;>
<id,j>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,i>
<<>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,i>
<=>
Lval
<id,i>
<+>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,j>
<<>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,j>
<=>
Lval
<id,j>
<+>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,j>
<=>
Lval
<id,j>
<->
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<(>
<id,j>
<)>
Lval
<;>
<}>
<int>
<id,main>
<(>
<)>
<{>
<return>
<id,doubleWhile>
<(>
<)>
<;>
<}>
CompUnits (1)
  FuncDef (1)
    NOFParam (1)
    Block (2)
      BlockItems (2)
        VarDecl (2)
          IDENTIFIER i
        BlockItems (3)
          Lval_Opassign_Stmt (3)
            LVal (3)
              IDENTIFIER i
              ArrayExps (3)
            IntConst (3)
              CONSTANTINTD: 5
          BlockItems (4)
            VarDecl (4)
              IDENTIFIER j
            BlockItems (5)
              Lval_Opassign_Stmt (5)
                LVal (5)
                  IDENTIFIER j
                  ArrayExps (5)
                IntConst (5)
                  CONSTANTINTD: 7
              BlockItems (6)
                While_Stmt (6)
                  Cond (6)
                    OPLIGHT (6)
                      LVal_EXP (6)
                        LVal (6)
                          IDENTIFIER i
                          ArrayExps (6)
                      IntConst (6)
                        CONSTANTINTD: 100
                  Block_Stmt (7)
                    Block (7)
                      BlockItems (7)
                        Lval_Opassign_Stmt (7)
                          LVal (7)
                            IDENTIFIER i
                            ArrayExps (7)
                          PLUSExp (7)
                            LVal_EXP (7)
                              LVal (7)
                                IDENTIFIER i
                                ArrayExps (7)
                            IntConst (7)
                              CONSTANTINTD: 30
                        BlockItems (8)
                          While_Stmt (8)
                            Cond (8)
                              OPLIGHT (8)
                                LVal_EXP (8)
                                  LVal (8)
                                    IDENTIFIER j
                                    ArrayExps (8)
                                IntConst (8)
                                  CONSTANTINTD: 100
                            Block_Stmt (9)
                              Block (9)
                                BlockItems (9)
                                  Lval_Opassign_Stmt (9)
                                    LVal (9)
                                      IDENTIFIER j
                                      ArrayExps (9)
                                    PLUSExp (9)
                                      LVal_EXP (9)
                                        LVal (9)
                                          IDENTIFIER j
                                          ArrayExps (9)
                                      IntConst (9)
                                        CONSTANTINTD: 6
                          BlockItems (11)
                            Lval_Opassign_Stmt (11)
                              LVal (11)
                                IDENTIFIER j
                                ArrayExps (11)
                              MINUSExp (11)
                                LVal_EXP (11)
                                  LVal (11)
                                    IDENTIFIER j
                                    ArrayExps (11)
                                IntConst (11)
                                  CONSTANTINTD: 100
                BlockItems (13)
                  Return_Stmt (13)
                    (Exp) (13)
                      LVal_EXP (13)
                        LVal (13)
                          IDENTIFIER j
                          ArrayExps (13)
  CompUnits (16)
    FuncDef (16)
      NOFParam (16)
      Block (17)
        BlockItems (17)
          Return_Stmt (17)
            funcall (17)
              IDENTIFIER doubleWhile


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
doubleWhile    Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:doubleWhile
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:doubleWhile
ID             category       type           depictor
              
i              Variable       TYPEINTEGER    NULL           
j              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
===========================================================
456
789
789
456
789
789
456
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
789
456

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   1)	FUNCTION doubleWhile :
  2  (at line   3)	_t0 := #5
  3  (at line   3)	i := _t0
  4  (at line   5)	_t1 := #7
  5  (at line   5)	j := _t1
  6  (at line   6)	LABEL label0 :
  7  (at line   6)	_t2 := i
  8  (at line   6)	_t5 := #100
  9  (at line   6)	IF _t2 < _t5 GOTO label1
 10  (at line   6)	GOTO label2
 11  (at line   6)	LABEL label1 :
 12  (at line   7)	_t7 := i
 13  (at line   7)	_t8 := #30
 14  (at line   7)	_t6 := _t7 + _t8
 15  (at line   7)	i := _t6
 16  (at line   8)	LABEL label3 :
 17  (at line   8)	_t9 := j
 18  (at line   8)	_t12 := #100
 19  (at line   8)	IF _t9 < _t12 GOTO label4
 20  (at line   8)	GOTO label5
 21  (at line   8)	LABEL label4 :
 22  (at line   9)	_t14 := j
 23  (at line   9)	_t15 := #6
 24  (at line   9)	_t13 := _t14 + _t15
 25  (at line   9)	j := _t13
 26  (at line   8)	GOTO label3
 27  (at line   8)	LABEL label5 :
 28  (at line  11)	_t17 := j
 29  (at line  11)	_t18 := #100
 30  (at line  11)	_t16 := _t17 - _t18
 31  (at line  11)	j := _t16
 32  (at line   6)	GOTO label0
 33  (at line   6)	LABEL label2 :
 34  (at line  13)	_t20 := j
 35  (at line  13)	_t19 := _t20
 36  (at line  13)	RETURN _t19

 37  (at line  16)	FUNCTION main :
 38  (at line  17)	_t21 := CALL doubleWhile
 39  (at line  17)	RETURN _t21


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
doubleWhile    Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:doubleWhile
ID             category       type           depictor
              
               NOParam                       NOT NULL       
scope type is wrong
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
===========================================================
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
Variable offset count+4 :i
Variable offset count+4 :j
Variable offset count+4 :i
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t0
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t1
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t2
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t5
Variable offset count+4 :_t19
scope type not local in functiondf
scopeprev:1
Variable offset count+4 :_t20
tac type ASSIGN
 assign 5 to tegister0
tac type ASSIGN
tac type ASSIGN
 assign 7 to tegister2
tac type ASSIGN
tac type LABELDF
L0:

tac type ASSIGN
tac type ASSIGN
 assign 100 to tegister5
tac type IFLT
tac type GOTO
Goto string B L2

tac type LABELDF
L1:

tac type ASSIGN
tac type ASSIGN
 assign 30 to tegister8
tac type ADD
tac type ASSIGN
tac type LABELDF
L3:

tac type ASSIGN
tac type ASSIGN
 assign 100 to tegisterStore Register in getregisterNoLoad variable
10
tac type IFLT
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type GOTO
Goto string B L5

tac type LABELDF
L4:

tac type ASSIGN
Store Register in getregisterNoLoad variable
tac type ASSIGN
 assign 6 to tegisterStore Register in getregisterNoLoad variable
10
tac type ADD
Store Register in getregisterNoLoad variable
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ASSIGN
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type GOTO
Goto string B L3

tac type LABELDF
L5:

tac type ASSIGN
Store Register in getregisterNoLoad variable
tac type ASSIGN
 assign 100 to tegisterStore Register in getregisterNoLoad variable
10
tac type SUB
Store Register in getregisterNoLoad variable
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ASSIGN
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type GOTO
Goto string B L0

tac type LABELDF
L2:

tac type ASSIGN
Store Register in getregisterNoLoad variable
tac type ASSIGN
Store Register in getregisterNoLoad variable
register:-1
terminate called after throwing an instance of 'std::runtime_error'
  what():  no variable in this register
Aborted (core dumped)
