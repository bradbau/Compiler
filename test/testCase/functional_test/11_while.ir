--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("b")
--accepting rule at line 89 ("=")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 89 ("=")
--accepting rule at line 109 ("3")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 95 (">")
--accepting rule at line 111 ("0")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 114 ("	")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 84 ("+")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 85 ("-")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 114 ("	")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
<int>
<id,a>
<;>
<int>
<id,b>
<;>
<int>
<id,main>
<(>
<)>
<{>
<id,b>
<=>
Lval
<into>
ExpNumber:0
<;>
stmt1
<id,a>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,a>
<>>
Lval
<into>
ExpNumber:0
<)>
<{>
<id,b>
<=>
Lval
<id,b>
<+>
Lval
<id,a>
<;>
Lval
stmt1
<id,a>
<=>
Lval
<id,a>
<->
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<id,b>
<;>
Lval
<}>
CompUnits (1)
  VarDecl (1)
    IDENTIFIER a
  CompUnits (2)
    VarDecl (2)
      IDENTIFIER b
    CompUnits (3)
      FuncDef (3)
        NOFParam (3)
        Block (4)
          BlockItems (4)
            Lval_Opassign_Stmt (4)
              LVal (4)
                IDENTIFIER b
                ArrayExps (4)
              IntConst (4)
                CONSTANTOCT: 0
            BlockItems (5)
              Lval_Opassign_Stmt (5)
                LVal (5)
                  IDENTIFIER a
                  ArrayExps (5)
                IntConst (5)
                  CONSTANTINTD: 3
              BlockItems (6)
                While_Stmt (6)
                  Cond (6)
                    OPGREAT (6)
                      LVal_EXP (6)
                        LVal (6)
                          IDENTIFIER a
                          ArrayExps (6)
                      IntConst (6)
                        CONSTANTOCT: 0
                  Block_Stmt (7)
                    Block (7)
                      BlockItems (7)
                        Lval_Opassign_Stmt (7)
                          LVal (7)
                            IDENTIFIER b
                            ArrayExps (7)
                          PLUSExp (7)
                            LVal_EXP (7)
                              LVal (7)
                                IDENTIFIER b
                                ArrayExps (7)
                            LVal_EXP (7)
                              LVal (7)
                                IDENTIFIER a
                                ArrayExps (7)
                        BlockItems (8)
                          Lval_Opassign_Stmt (8)
                            LVal (8)
                              IDENTIFIER a
                              ArrayExps (8)
                            MINUSExp (8)
                              LVal_EXP (8)
                                LVal (8)
                                  IDENTIFIER a
                                  ArrayExps (8)
                              IntConst (8)
                                CONSTANTINTD: 1
                BlockItems (10)
                  Return_Stmt (10)
                    LVal_EXP (10)
                      LVal (10)
                        IDENTIFIER b
                        ArrayExps (10)


===========================================================
Global
ID             category       type           depictor
               
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:main
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
TraverseScopeStack no result
TraverseScopeStack no result

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   3)	FUNCTION main :
  2  (at line   4)	_t12 := #0
  3  (at line   4)	 := _t12
  4  (at line   5)	_t11 := #3
  5  (at line   5)	 := _t11
  6  (at line   6)	LABEL label0 :
  7  (at line   6)	_t1 := 
  8  (at line   6)	_t4 := #0
  9  (at line   6)	IF _t1 > _t4 GOTO label1
 10  (at line   6)	GOTO label2
 11  (at line   6)	LABEL label1 :
 12  (at line   7)	_t9 := 
 13  (at line   7)	_t10 := 
 14  (at line   7)	_t8 := _t9 + _t10
 15  (at line   7)	 := _t8
 16  (at line   8)	_t6 := 
 17  (at line   8)	_t7 := #1
 18  (at line   8)	_t5 := _t6 - _t7
 19  (at line   8)	 := _t5
 20  (at line   6)	GOTO label0
 21  (at line   6)	LABEL label2 :
 22  (at line  10)	_t0 := 
 23  (at line  10)	RETURN _t0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
tec type ASSIGN
tec type ASSIGN
tec type ASSIGN
tec type ASSIGN
tac type LABELDF
tec type ASSIGN
tec type ASSIGN
tac type IFGT
tac type GOTO
tac type LABELDF
tec type ASSIGN
tec type ASSIGN
tac type ADD
tec type ASSIGN
tec type ASSIGN
tec type ASSIGN
tac type SUB
compiler: ./ObjectCode/Arm.cpp:75: ARM::ARM(TACCode*, ScopeItem&): Assertion `code.dest.Type = VARIABLE' failed.
Aborted (core dumped)
