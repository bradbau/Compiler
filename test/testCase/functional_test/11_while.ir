--(end of buffer or a NUL)
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("a")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("b")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("main")
--accepting rule at line 88 ("(")
--accepting rule at line 89 (")")
--accepting rule at line 86 ("{")
--accepting rule at line 131 ("
")
--accepting rule at line 130 ("	")
--accepting rule at line 128 ("b")
--accepting rule at line 97 ("=")
--accepting rule at line 127 ("0")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 ("	")
--accepting rule at line 128 ("a")
--accepting rule at line 97 ("=")
--accepting rule at line 125 ("3")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 ("	")
--accepting rule at line 111 ("while")
--accepting rule at line 88 ("(")
--accepting rule at line 128 ("a")
--accepting rule at line 103 (">")
--accepting rule at line 127 ("0")
--accepting rule at line 89 (")")
--accepting rule at line 86 ("{")
--accepting rule at line 130 ("	")
--accepting rule at line 131 ("
")
--accepting rule at line 130 ("	")
--accepting rule at line 130 ("	")
--accepting rule at line 128 ("b")
--accepting rule at line 130 (" ")
--accepting rule at line 97 ("=")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("b")
--accepting rule at line 92 ("+")
--accepting rule at line 128 ("a")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 ("	")
--accepting rule at line 130 ("	")
--accepting rule at line 128 ("a")
--accepting rule at line 130 (" ")
--accepting rule at line 97 ("=")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("a")
--accepting rule at line 93 ("-")
--accepting rule at line 125 ("1")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 ("	")
--accepting rule at line 87 ("}")
<int>
<id,a>
<;>
VarDecVarDefVarDefsDeclCompUnit<int>
<id,b>
<;>
VarDecVarDefVarDefsDeclCompUnit<int>
<id,main>
<(>
<)>
FuncFParams<{>
<id,b>
<=>
ArrayExpsLval
<into>
<;>
stmt1
BlockItem<id,a>
<=>
ArrayExpsLval
<intd>
<;>
stmt1
BlockItem<while>
<(>
<id,a>
<>>
ArrayExpsLval
<into>
<)>
Cond<{>
<id,b>
<=>
ArrayExpsLval
<id,b>
<+>
ArrayExpsLval
<id,a>
<;>
ArrayExpsLval
stmt1
BlockItem<id,a>
<=>
ArrayExpsLval
<id,a>
<->
ArrayExpsLval
<intd>
<;>
stmt1
BlockItem<}>
BlockItemsBlockItemsBlockItemsBlockStmtStmtBlockI--accepting rule at line 131 ("
")
--accepting rule at line 130 ("	")
--accepting rule at line 124 ("return")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("b")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 87 ("}")
--accepting rule at line 130 ("	")
--accepting rule at line 131 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
tem<return>
<id,b>
<;>
ArrayExpsLval
StmtBlockItem<}>
BlockItemsBlockItemsBlockItemsBlockItemsBlockItemsBlockCompUnitCompUnitsCompUnitsCompUnitsCompUnitsCompilerCompUnits (1)
  VarDecl (1)
    IDENTIFIER a  CompUnits (2)
    VarDecl (2)
      IDENTIFIER b    CompUnits (3)
      FuncDef (3)
        FuncFParam (3)
        Block (4)
          BlockItems (4)
            Lval_Opassign_Stmt (4)
              LVal (4)
                IDENTIFIER b              IntConst (4)
                CONSTANTOCT: 0
            BlockItems (5)
              Lval_Opassign_Stmt (5)
                LVal (5)
                  IDENTIFIER a                IntConst (5)
                  CONSTANTINTD: 3
              BlockItems (6)
                While_Stmt (6)
                  Cond (6)
                    OPGREAT (6)
                      LVal_EXP (6)
                        LVal (6)
                          IDENTIFIER a                      IntConst (6)
                        CONSTANTOCT: 0
                  Block_Stmt (7)
                    Block (7)
                      BlockItems (7)
                        Lval_Opassign_Stmt (7)
                          LVal (7)
                            IDENTIFIER b                          PLUSExp (7)
                            LVal_EXP (7)
                              LVal (7)
                                IDENTIFIER b                            LVal_EXP (7)
                              LVal (7)
                                IDENTIFIER a                        BlockItems (8)
                          Lval_Opassign_Stmt (8)
                            LVal (8)
                              IDENTIFIER a                            MINUSExp (8)
                              LVal_EXP (8)
                                LVal (8)
                                  IDENTIFIER a                              IntConst (8)
                                CONSTANTINTD: 1
                BlockItems (10)
                  Return_Stmt (10)
                    LVal_EXP (10)
                      LVal (10)
                        IDENTIFIER b

===========================================================
Global
ID             category       type           depictor
               
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:main
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
