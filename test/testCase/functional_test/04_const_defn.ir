--(end of buffer or a NUL)
--accepting rule at line 106 ("const")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("x")
--accepting rule at line 89 ("=")
--accepting rule at line 109 ("4")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("x")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--(end of buffer or a NUL)
--EOF (start condition 0)
<const>
<int>
<id,x>
<=>
<intd>
ExpNumber:0
<;>
<int>
<id,main>
<(>
<)>
<{>
<return>
<id,x>
<;>
Lval
<}>
CompUnits (1)
  ConstDecl (1)
    ConstOpassign (1)
      IDENTIFIER x
      ConstInitVal (1)
        IntConst (1)
          CONSTANTINTD: 4
  CompUnits (3)
    FuncDef (3)
      NOFParam (3)
      Block (4)
        BlockItems (4)
          Return_Stmt (4)
            LVal_EXP (4)
              LVal (4)
                IDENTIFIER x
                ArrayExps (4)


===========================================================
Global
ID             category       type           depictor
               
x              Variable       TYPEINTEGER    NULL           
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
Local:main
ID             category       type           depictor
              

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main
  1  (at line   1)	x := #4

  2  (at line   3)	FUNCTION main :
  3  (at line   4)	_t0 := 
  4  (at line   4)	RETURN _t0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tec type ASSIGN
findregister: insldr rd=0,r1=11,r2 offset=0,op2type=1, insefft=0
tac type FUNCTIONDF
tec type ASSIGN
findregister: insldr rd=0,r1=11,r2 offset=0,op2type=1, insefft=0
tac type RETURN
tac build complete
op2type==1
push instruction
op2type==1
#armv7 assembly code
LDRIA r0, [fp, 0x0]
MOV r0, 4
main:
PUSH {fp}
ADD  fp, sp, #0
SUB fp, fp, #64
LDRIA r0, [fp, 0x0]
ADD  r0, r1, #0
ADD  r0, r0, #0
ADD  sp, fp, #0
POP {fp}
BX lr

