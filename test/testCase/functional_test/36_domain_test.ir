arg S
--(end of buffer or a NUL)
--accepting rule at line 74 ("// duplicate names with global array variables and local int variable
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("2")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("func")
--accepting rule at line 80 ("(")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("array")
--accepting rule at line 82 ("[")
--accepting rule at line 83 ("]")
--accepting rule at line 81 (")")
<int>
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<;>
<int>
<id,func>
<(>
<int>
<id,array>
<[>
<]>
<)>
33333333333
1111111111111111
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 111 ("0")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
<{>
<id,a>
<[>
<into>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("array")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("3")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 111 ("0")
--accepting rule at line 83 ("]")
--accepting rule at line 83 ("]")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<return>
<id,array>
<[>
<intd>
ExpNumber:0
<->
<id,a>
<[>
<into>
ExpNumber:0
<]>
<]>
33333333333
22222222222222
--accepting rule at line 75 (";")
Lval
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("array")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("3")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("array")
--accepting rule at line 82 ("[")
--accepting rule at line 111 ("0")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<}>
<int>
<id,main>
<(>
<)>
<{>
<int>
<id,a>
<;>
<int>
<id,array>
<[>
<intd>
ExpNumber:0
<]>
<;>
<id,array>
<[>
<into>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 85 ("-")
--accepting rule at line 109 ("1")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("array")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<(>
<->
<intd>
ExpNumber:0
<)>
<;>
stmt1
<id,array>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("4")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("array")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("2")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,array>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("8")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("func")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("array")
--accepting rule at line 81 (")")
Lval
<id,func>
<(>
<id,array>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<;>
stmt1
<return>
<(>
<id,a>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("array")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 81 (")")
Lval
<id,array>
<[>
<intd>
ExpNumber:0
<]>
<)>
33333333333
22222222222222
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--(end of buffer or a NUL)
--EOF (start condition 0)
Lval
<;>
<}>
CompUnits (2)
  VarDecl (2)
    ArrayDec: demmision=0
      IDENTIFIER a
  CompUnits (4)
    FuncDef (4)
      FuncFParam (4)
        ArrayExps (4)
      Block (5)
        BlockItems (5)
          Lval_Opassign_Stmt (5)
            LVal (5)
              IDENTIFIER a
              ArrayExps (5)
                IntConst (5)
                  CONSTANTOCT: 0
                ArrayExps (5)
            IntConst (5)
              CONSTANTINTD: 1
          BlockItems (6)
            Return_Stmt (6)
              LVal_EXP (6)
                LVal (6)
                  IDENTIFIER array
                  ArrayExps (6)
                    MINUSExp (6)
                      IntConst (6)
                        CONSTANTINTD: 3
                      LVal_EXP (6)
                        LVal (6)
                          IDENTIFIER a
                          ArrayExps (6)
                            IntConst (6)
                              CONSTANTOCT: 0
                            ArrayExps (6)
                    ArrayExps (6)
    CompUnits (9)
      FuncDef (9)
        NOFParam (9)
        Block (10)
          BlockItems (10)
            VarDecl (10)
              IDENTIFIER a
            BlockItems (11)
              VarDecl (11)
                ArrayDec: demmision=0
                  IDENTIFIER array
              BlockItems (12)
                Lval_Opassign_Stmt (12)
                  LVal (12)
                    IDENTIFIER array
                    ArrayExps (12)
                      IntConst (12)
                        CONSTANTOCT: 0
                      ArrayExps (12)
                  (Exp) (12)
                    OPMINUS_Exp (12)
                      IntConst (12)
                        CONSTANTINTD: 1
                BlockItems (13)
                  Lval_Opassign_Stmt (13)
                    LVal (13)
                      IDENTIFIER array
                      ArrayExps (13)
                        IntConst (13)
                          CONSTANTINTD: 1
                        ArrayExps (13)
                    IntConst (13)
                      CONSTANTINTD: 4
                  BlockItems (14)
                    Lval_Opassign_Stmt (14)
                      LVal (14)
                        IDENTIFIER array
                        ArrayExps (14)
                          IntConst (14)
                            CONSTANTINTD: 2
                          ArrayExps (14)
                      IntConst (14)
                        CONSTANTINTD: 8
                    BlockItems (15)
                      Lval_Opassign_Stmt (15)
                        LVal (15)
                          IDENTIFIER a
                          ArrayExps (15)
                        funcall (15)
                          IDENTIFIER func
                          FuncRParams (15)
                            LVal_EXP (15)
                              LVal (15)
                                IDENTIFIER array
                                ArrayExps (15)
                      BlockItems (16)
                        Return_Stmt (16)
                          (Exp) (16)
                            PLUSExp (16)
                              LVal_EXP (16)
                                LVal (16)
                                  IDENTIFIER a
                                  ArrayExps (16)
                              LVal_EXP (16)
                                LVal (16)
                                  IDENTIFIER array
                                  ArrayExps (16)
                                    IntConst (16)
                                      CONSTANTINTD: 1
                                    ArrayExps (16)


===========================================================
Global
ID             category       type           depictor
               
a              Array          TYPEINTEGER    ----------> dim=1
func           Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:func
ID             category       type           depictor
              
array          Array          TYPEINTEGER    ----------> dim=1
===========================================================
===========================================================
Local:func
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
array          Array          TYPEINTEGER    ----------> dim=1
===========================================================
789
789
789
789
789
789
456
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   4)	FUNCTION func :
  2  (at line   4)	PARAM array
  3  (at line   5)	_t0 := #1
  4  (at line   5)	_t3 := #0
  5  (at line   5)	a[_t3] := _t0
  6  (at line   6)	_t9 := #3
  7  (at line   6)	_t13 := #0
  8  (at line   6)	_t10 := a[_t13]
  9  (at line   6)	_t8 := _t9 - _t10
 10  (at line   6)	_t5 := array[_t8]
 11  (at line   6)	RETURN _t5

 12  (at line   9)	FUNCTION main :
 13  (at line  12)	_t18 := #1
 14  (at line  12)	_t17 := #0 - _t18
 15  (at line  12)	_t16 := _t17
 16  (at line  12)	_t21 := #0
 17  (at line  12)	array[_t21] := _t16
 18  (at line  13)	_t23 := #4
 19  (at line  13)	_t26 := #1
 20  (at line  13)	array[_t26] := _t23
 21  (at line  14)	_t28 := #8
 22  (at line  14)	_t31 := #2
 23  (at line  14)	array[_t31] := _t28
 24  (at line  11)	_t35 := #3
 25  (at line  15)	ARG array[_t35]
 26  (at line  15)	_t33 := CALL func
 27  (at line  15)	a := _t33
 28  (at line  16)	_t38 := a
 29  (at line  16)	_t42 := #1
 30  (at line  16)	_t39 := array[_t42]
 31  (at line  16)	_t37 := _t38 + _t39
 32  (at line  16)	_t36 := _t37
 33  (at line  16)	RETURN _t36


===========================================================
Global
ID             category       type           depictor
               
a              Array          TYPEINTEGER    ----------> dim=1
func           Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:func
ID             category       type           depictor
              
array          Array          TYPEINTEGER    ----------> dim=1
===========================================================
===========================================================
Local:func
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
scope type is wrong
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
tec type ASSIGN
findregister: insldr rd=0,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=1,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
compiler: ./ObjectCode/Arm.cpp:32: ARM::ARM(TACCode *, ScopeItem &): Assertion `code.dest.Type==VARIABLE' failed.
Aborted (core dumped)
