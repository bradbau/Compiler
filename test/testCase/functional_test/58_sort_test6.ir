arg S
--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("counting_sort")
--accepting rule at line 80 ("(")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("ini_arr")
--accepting rule at line 82 ("[")
--accepting rule at line 83 ("]")
--accepting rule at line 76 (",")
<int>
<id,n>
<;>
<int>
<id,counting_sort>
<(>
<int>
<id,ini_arr>
<[>
<]>
<,>
33333333333
1111111111111111
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("sorted_arr")
--accepting rule at line 82 ("[")
--accepting rule at line 83 ("]")
--accepting rule at line 76 (",")
<int>
<id,sorted_arr>
<[>
<]>
<,>
33333333333
1111111111111111
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("count_arr")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("10")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
<int>
<id,n>
<)>
<{>
<int>
<id,count_arr>
<[>
<intd>
ExpNumber:0
<]>
<;>
<int>
<id,i>
<;>
<int>
<id,j>
<;>
<int>
<id,k>
<;>
<id,k>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<id,j>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<into>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,k>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("count_arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("k")
--accepting rule at line 83 ("]")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,count_arr>
<[>
<id,k>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<id,k>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,k>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<while>
<(>
<id,i>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 81 (")")
Lval
<id,n>
<)>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("count_arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("ini_arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<{>
<id,count_arr>
<[>
<id,ini_arr>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 83 ("]")
Lval
<]>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("count_arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("ini_arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<id,count_arr>
<[>
<id,ini_arr>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 83 ("]")
Lval
<]>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<+>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,i>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,k>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,k>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("count_arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("k")
--accepting rule at line 83 ("]")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,count_arr>
<[>
<id,k>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("count_arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("k")
--accepting rule at line 83 ("]")
Lval
<id,count_arr>
<[>
<id,k>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<+>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("count_arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,count_arr>
<[>
<id,k>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
Lval
<intd>
ExpNumber:0
<]>
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<id,k>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,k>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,j>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 75 (";")
Lval
<id,n>
<;>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 95 (">")
Lval
stmt1
<while>
<(>
<id,j>
<>>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("count_arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("ini_arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<into>
ExpNumber:0
<)>
<{>
<id,count_arr>
<[>
<id,ini_arr>
<[>
<id,j>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 83 ("]")
Lval
<intd>
ExpNumber:0
<]>
<]>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("count_arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("ini_arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,count_arr>
<[>
<id,ini_arr>
<[>
<id,j>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 83 ("]")
Lval
<intd>
ExpNumber:0
<]>
<]>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<->
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("sorted_arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("count_arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("ini_arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,sorted_arr>
<[>
<id,count_arr>
<[>
<id,ini_arr>
<[>
<id,j>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 83 ("]")
Lval
<intd>
ExpNumber:0
<]>
<]>
33333333333
22222222222222
--accepting rule at line 83 ("]")
Lval
<]>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("ini_arr")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,ini_arr>
<[>
<id,j>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
Lval
<intd>
ExpNumber:0
<]>
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<id,j>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,j>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<into>
ExpNumber:0
<;>
<}>
<int>
<id,main>
<(>
<)>
<{>
<id,n>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("10")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 111 ("0")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<;>
<id,a>
<[>
<into>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("4")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("3")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("2")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("9")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("3")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("4")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("5")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("6")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("6")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("7")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("5")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("8")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("7")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("9")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("8")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,i>
<;>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("10")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<int>
<id,b>
<[>
<intd>
ExpNumber:0
<]>
<;>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("counting_sort")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 76 (",")
Lval
<id,counting_sort>
<(>
<id,a>
<,>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 76 (",")
Lval
<id,b>
<,>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 81 (")")
Lval
<id,n>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<;>
stmt1
<while>
<(>
<id,i>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 81 (")")
Lval
<id,n>
<)>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<{>
<int>
<id,tmp>
<;>
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<id,b>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 75 (";")
Lval
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putint")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("tmp")
--accepting rule at line 81 (")")
Lval
stmt1
<id,putint>
<(>
<id,tmp>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<;>
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putch")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("tmp")
--accepting rule at line 81 (")")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,putch>
<(>
<id,tmp>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<;>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,i>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<into>
ExpNumber:0
<;>
<}>
CompUnits (1)
  VarDecl (1)
    IDENTIFIER n
  CompUnits (3)
    FuncDef (3)
      FuncFParams (3)
        FuncFParam (3)
          ArrayExps (3)
        FuncFParams (3)
          FuncFParam (3)
            ArrayExps (3)
          FuncFParam (3)
      Block (4)
        BlockItems (4)
          VarDecl (4)
            ArrayDec: demmision=0
              IDENTIFIER count_arr
          BlockItems (5)
            VarDecl (5)
              IDENTIFIER i
            BlockItems (6)
              VarDecl (6)
                IDENTIFIER j
              BlockItems (7)
                VarDecl (7)
                  IDENTIFIER k
                BlockItems (8)
                  Lval_Opassign_Stmt (8)
                    LVal (8)
                      IDENTIFIER k
                      ArrayExps (8)
                    IntConst (8)
                      CONSTANTOCT: 0
                  BlockItems (9)
                    Lval_Opassign_Stmt (9)
                      LVal (9)
                        IDENTIFIER i
                        ArrayExps (9)
                      IntConst (9)
                        CONSTANTOCT: 0
                    BlockItems (10)
                      Lval_Opassign_Stmt (10)
                        LVal (10)
                          IDENTIFIER j
                          ArrayExps (10)
                        IntConst (10)
                          CONSTANTOCT: 0
                      BlockItems (11)
                        While_Stmt (11)
                          Cond (11)
                            OPLIGHT (11)
                              LVal_EXP (11)
                                LVal (11)
                                  IDENTIFIER k
                                  ArrayExps (11)
                              IntConst (11)
                                CONSTANTINTD: 10
                          Block_Stmt (12)
                            Block (12)
                              BlockItems (12)
                                Lval_Opassign_Stmt (12)
                                  LVal (12)
                                    IDENTIFIER count_arr
                                    ArrayExps (12)
                                      LVal_EXP (12)
                                        LVal (12)
                                          IDENTIFIER k
                                          ArrayExps (12)
                                      ArrayExps (12)
                                  IntConst (12)
                                    CONSTANTOCT: 0
                                BlockItems (13)
                                  Lval_Opassign_Stmt (13)
                                    LVal (13)
                                      IDENTIFIER k
                                      ArrayExps (13)
                                    PLUSExp (13)
                                      LVal_EXP (13)
                                        LVal (13)
                                          IDENTIFIER k
                                          ArrayExps (13)
                                      IntConst (13)
                                        CONSTANTINTD: 1
                        BlockItems (15)
                          While_Stmt (15)
                            Cond (15)
                              OPLIGHT (15)
                                LVal_EXP (15)
                                  LVal (15)
                                    IDENTIFIER i
                                    ArrayExps (15)
                                LVal_EXP (15)
                                  LVal (15)
                                    IDENTIFIER n
                                    ArrayExps (15)
                            Block_Stmt (17)
                              Block (17)
                                BlockItems (17)
                                  Lval_Opassign_Stmt (17)
                                    LVal (17)
                                      IDENTIFIER count_arr
                                      ArrayExps (17)
                                        LVal_EXP (17)
                                          LVal (17)
                                            IDENTIFIER ini_arr
                                            ArrayExps (17)
                                              LVal_EXP (17)
                                                LVal (17)
                                                  IDENTIFIER i
                                                  ArrayExps (17)
                                              ArrayExps (17)
                                        ArrayExps (17)
                                    PLUSExp (17)
                                      LVal_EXP (17)
                                        LVal (17)
                                          IDENTIFIER count_arr
                                          ArrayExps (17)
                                            LVal_EXP (17)
                                              LVal (17)
                                                IDENTIFIER ini_arr
                                                ArrayExps (17)
                                                  LVal_EXP (17)
                                                    LVal (17)
                                                      IDENTIFIER i
                                                      ArrayExps (17)
                                                  ArrayExps (17)
                                            ArrayExps (17)
                                      IntConst (17)
                                        CONSTANTINTD: 1
                                  BlockItems (18)
                                    Lval_Opassign_Stmt (18)
                                      LVal (18)
                                        IDENTIFIER i
                                        ArrayExps (18)
                                      PLUSExp (18)
                                        LVal_EXP (18)
                                          LVal (18)
                                            IDENTIFIER i
                                            ArrayExps (18)
                                        IntConst (18)
                                          CONSTANTINTD: 1
                          BlockItems (20)
                            Lval_Opassign_Stmt (20)
                              LVal (20)
                                IDENTIFIER k
                                ArrayExps (20)
                              IntConst (20)
                                CONSTANTINTD: 1
                            BlockItems (21)
                              While_Stmt (21)
                                Cond (21)
                                  OPLIGHT (21)
                                    LVal_EXP (21)
                                      LVal (21)
                                        IDENTIFIER k
                                        ArrayExps (21)
                                    IntConst (21)
                                      CONSTANTINTD: 10
                                Block_Stmt (22)
                                  Block (22)
                                    BlockItems (22)
                                      Lval_Opassign_Stmt (22)
                                        LVal (22)
                                          IDENTIFIER count_arr
                                          ArrayExps (22)
                                            LVal_EXP (22)
                                              LVal (22)
                                                IDENTIFIER k
                                                ArrayExps (22)
                                            ArrayExps (22)
                                        PLUSExp (22)
                                          LVal_EXP (22)
                                            LVal (22)
                                              IDENTIFIER count_arr
                                              ArrayExps (22)
                                                LVal_EXP (22)
                                                  LVal (22)
                                                    IDENTIFIER k
                                                    ArrayExps (22)
                                                ArrayExps (22)
                                          LVal_EXP (22)
                                            LVal (22)
                                              IDENTIFIER count_arr
                                              ArrayExps (22)
                                                MINUSExp (22)
                                                  LVal_EXP (22)
                                                    LVal (22)
                                                      IDENTIFIER k
                                                      ArrayExps (22)
                                                  IntConst (22)
                                                    CONSTANTINTD: 1
                                                ArrayExps (22)
                                      BlockItems (23)
                                        Lval_Opassign_Stmt (23)
                                          LVal (23)
                                            IDENTIFIER k
                                            ArrayExps (23)
                                          PLUSExp (23)
                                            LVal_EXP (23)
                                              LVal (23)
                                                IDENTIFIER k
                                                ArrayExps (23)
                                            IntConst (23)
                                              CONSTANTINTD: 1
                              BlockItems (25)
                                Lval_Opassign_Stmt (25)
                                  LVal (25)
                                    IDENTIFIER j
                                    ArrayExps (25)
                                  LVal_EXP (25)
                                    LVal (25)
                                      IDENTIFIER n
                                      ArrayExps (25)
                                BlockItems (26)
                                  While_Stmt (26)
                                    Cond (26)
                                      OPGREAT (26)
                                        LVal_EXP (26)
                                          LVal (26)
                                            IDENTIFIER j
                                            ArrayExps (26)
                                        IntConst (26)
                                          CONSTANTOCT: 0
                                    Block_Stmt (27)
                                      Block (27)
                                        BlockItems (27)
                                          Lval_Opassign_Stmt (27)
                                            LVal (27)
                                              IDENTIFIER count_arr
                                              ArrayExps (27)
                                                LVal_EXP (27)
                                                  LVal (27)
                                                    IDENTIFIER ini_arr
                                                    ArrayExps (27)
                                                      MINUSExp (27)
                                                        LVal_EXP (27)
                                                          LVal (27)
                                                            IDENTIFIER j
                                                            ArrayExps (27)
                                                        IntConst (27)
                                                          CONSTANTINTD: 1
                                                      ArrayExps (27)
                                                ArrayExps (27)
                                            MINUSExp (27)
                                              LVal_EXP (27)
                                                LVal (27)
                                                  IDENTIFIER count_arr
                                                  ArrayExps (27)
                                                    LVal_EXP (27)
                                                      LVal (27)
                                                        IDENTIFIER ini_arr
                                                        ArrayExps (27)
                                                          MINUSExp (27)
                                                            LVal_EXP (27)
                                                              LVal (27)
                                                                IDENTIFIER j
                                                                ArrayExps (27)
                                                            IntConst (27)
                                                              CONSTANTINTD: 1
                                                          ArrayExps (27)
                                                    ArrayExps (27)
                                              IntConst (27)
                                                CONSTANTINTD: 1
                                          BlockItems (28)
                                            Lval_Opassign_Stmt (28)
                                              LVal (28)
                                                IDENTIFIER sorted_arr
                                                ArrayExps (28)
                                                  LVal_EXP (28)
                                                    LVal (28)
                                                      IDENTIFIER count_arr
                                                      ArrayExps (28)
                                                        LVal_EXP (28)
                                                          LVal (28)
                                                            IDENTIFIER ini_arr
                                                            ArrayExps (28)
                                                              MINUSExp (28)
                                                                LVal_EXP (28)
                                                                  LVal (28)
                                                                    IDENTIFIER j
                                                                    ArrayExps (28)
                                                                IntConst (28)
                                                                  CONSTANTINTD: 1
                                                              ArrayExps (28)
                                                        ArrayExps (28)
                                                  ArrayExps (28)
                                              LVal_EXP (28)
                                                LVal (28)
                                                  IDENTIFIER ini_arr
                                                  ArrayExps (28)
                                                    MINUSExp (28)
                                                      LVal_EXP (28)
                                                        LVal (28)
                                                          IDENTIFIER j
                                                          ArrayExps (28)
                                                      IntConst (28)
                                                        CONSTANTINTD: 1
                                                    ArrayExps (28)
                                            BlockItems (29)
                                              Lval_Opassign_Stmt (29)
                                                LVal (29)
                                                  IDENTIFIER j
                                                  ArrayExps (29)
                                                MINUSExp (29)
                                                  LVal_EXP (29)
                                                    LVal (29)
                                                      IDENTIFIER j
                                                      ArrayExps (29)
                                                  IntConst (29)
                                                    CONSTANTINTD: 1
                                  BlockItems (31)
                                    Return_Stmt (31)
                                      IntConst (31)
                                        CONSTANTOCT: 0
    CompUnits (35)
      FuncDef (35)
        NOFParam (35)
        Block (36)
          BlockItems (36)
            Lval_Opassign_Stmt (36)
              LVal (36)
                IDENTIFIER n
                ArrayExps (36)
              IntConst (36)
                CONSTANTINTD: 10
            BlockItems (37)
              VarDecl (37)
                ArrayDec: demmision=0
                  IDENTIFIER a
              BlockItems (38)
                Lval_Opassign_Stmt (38)
                  LVal (38)
                    IDENTIFIER a
                    ArrayExps (38)
                      IntConst (38)
                        CONSTANTOCT: 0
                      ArrayExps (38)
                  IntConst (38)
                    CONSTANTINTD: 4
                BlockItems (38)
                  Lval_Opassign_Stmt (38)
                    LVal (38)
                      IDENTIFIER a
                      ArrayExps (38)
                        IntConst (38)
                          CONSTANTINTD: 1
                        ArrayExps (38)
                    IntConst (38)
                      CONSTANTINTD: 3
                  BlockItems (38)
                    Lval_Opassign_Stmt (38)
                      LVal (38)
                        IDENTIFIER a
                        ArrayExps (38)
                          IntConst (38)
                            CONSTANTINTD: 2
                          ArrayExps (38)
                      IntConst (38)
                        CONSTANTINTD: 9
                    BlockItems (38)
                      Lval_Opassign_Stmt (38)
                        LVal (38)
                          IDENTIFIER a
                          ArrayExps (38)
                            IntConst (38)
                              CONSTANTINTD: 3
                            ArrayExps (38)
                        IntConst (38)
                          CONSTANTINTD: 2
                      BlockItems (38)
                        Lval_Opassign_Stmt (38)
                          LVal (38)
                            IDENTIFIER a
                            ArrayExps (38)
                              IntConst (38)
                                CONSTANTINTD: 4
                              ArrayExps (38)
                          IntConst (38)
                            CONSTANTOCT: 0
                        BlockItems (39)
                          Lval_Opassign_Stmt (39)
                            LVal (39)
                              IDENTIFIER a
                              ArrayExps (39)
                                IntConst (39)
                                  CONSTANTINTD: 5
                                ArrayExps (39)
                            IntConst (39)
                              CONSTANTINTD: 1
                          BlockItems (39)
                            Lval_Opassign_Stmt (39)
                              LVal (39)
                                IDENTIFIER a
                                ArrayExps (39)
                                  IntConst (39)
                                    CONSTANTINTD: 6
                                  ArrayExps (39)
                              IntConst (39)
                                CONSTANTINTD: 6
                            BlockItems (39)
                              Lval_Opassign_Stmt (39)
                                LVal (39)
                                  IDENTIFIER a
                                  ArrayExps (39)
                                    IntConst (39)
                                      CONSTANTINTD: 7
                                    ArrayExps (39)
                                IntConst (39)
                                  CONSTANTINTD: 5
                              BlockItems (39)
                                Lval_Opassign_Stmt (39)
                                  LVal (39)
                                    IDENTIFIER a
                                    ArrayExps (39)
                                      IntConst (39)
                                        CONSTANTINTD: 8
                                      ArrayExps (39)
                                  IntConst (39)
                                    CONSTANTINTD: 7
                                BlockItems (39)
                                  Lval_Opassign_Stmt (39)
                                    LVal (39)
                                      IDENTIFIER a
                                      ArrayExps (39)
                                        IntConst (39)
                                          CONSTANTINTD: 9
                                        ArrayExps (39)
                                    IntConst (39)
                                      CONSTANTINTD: 8
                                  BlockItems (40)
                                    VarDecl (40)
                                      IDENTIFIER i
                                    BlockItems (41)
                                      Lval_Opassign_Stmt (41)
                                        LVal (41)
                                          IDENTIFIER i
                                          ArrayExps (41)
                                        IntConst (41)
                                          CONSTANTOCT: 0
                                      BlockItems (42)
                                        VarDecl (42)
                                          ArrayDec: demmision=0
                                            IDENTIFIER b
                                        BlockItems (43)
                                          Lval_Opassign_Stmt (43)
                                            LVal (43)
                                              IDENTIFIER i
                                              ArrayExps (43)
                                            funcall (43)
                                              IDENTIFIER counting_sort
                                              FuncRParams (43)
                                                LVal_EXP (43)
                                                  LVal (43)
                                                    IDENTIFIER a
                                                    ArrayExps (43)
                                                Exps (43)
                                                  LVal_EXP (43)
                                                    LVal (43)
                                                      IDENTIFIER b
                                                      ArrayExps (43)
                                                  Exps (43)
                                                    LVal_EXP (43)
                                                      LVal (43)
                                                        IDENTIFIER n
                                                        ArrayExps (43)
                                          BlockItems (44)
                                            While_Stmt (44)
                                              Cond (44)
                                                OPLIGHT (44)
                                                  LVal_EXP (44)
                                                    LVal (44)
                                                      IDENTIFIER i
                                                      ArrayExps (44)
                                                  LVal_EXP (44)
                                                    LVal (44)
                                                      IDENTIFIER n
                                                      ArrayExps (44)
                                              Block_Stmt (45)
                                                Block (45)
                                                  BlockItems (45)
                                                    VarDecl (45)
                                                      IDENTIFIER tmp
                                                    BlockItems (46)
                                                      Lval_Opassign_Stmt (46)
                                                        LVal (46)
                                                          IDENTIFIER tmp
                                                          ArrayExps (46)
                                                        LVal_EXP (46)
                                                          LVal (46)
                                                            IDENTIFIER b
                                                            ArrayExps (46)
                                                              LVal_EXP (46)
                                                                LVal (46)
                                                                  IDENTIFIER i
                                                                  ArrayExps (46)
                                                              ArrayExps (46)
                                                      BlockItems (47)
                                                        Exp_Stmt (47)
                                                          funcall (47)
                                                            IDENTIFIER putint
                                                            FuncRParams (47)
                                                              LVal_EXP (47)
                                                                LVal (47)
                                                                  IDENTIFIER tmp
                                                                  ArrayExps (47)
                                                        BlockItems (48)
                                                          Lval_Opassign_Stmt (48)
                                                            LVal (48)
                                                              IDENTIFIER tmp
                                                              ArrayExps (48)
                                                            IntConst (48)
                                                              CONSTANTINTD: 10
                                                          BlockItems (49)
                                                            Exp_Stmt (49)
                                                              funcall (49)
                                                                IDENTIFIER putch
                                                                FuncRParams (49)
                                                                  LVal_EXP (49)
                                                                    LVal (49)
                                                                      IDENTIFIER tmp
                                                                      ArrayExps (49)
                                                            BlockItems (50)
                                                              Lval_Opassign_Stmt (50)
                                                                LVal (50)
                                                                  IDENTIFIER i
                                                                  ArrayExps (50)
                                                                PLUSExp (50)
                                                                  LVal_EXP (50)
                                                                    LVal (50)
                                                                      IDENTIFIER i
                                                                      ArrayExps (50)
                                                                  IntConst (50)
                                                                    CONSTANTINTD: 1
                                            BlockItems (52)
                                              Return_Stmt (52)
                                                IntConst (52)
                                                  CONSTANTOCT: 0


===========================================================
Global
ID             category       type           depictor
               
n              Variable       TYPEINTEGER    NULL           
counting_sort  Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:counting_sort
ID             category       type           depictor
              
ini_arr        Array          TYPEINTEGER    ----------> dim=1
sorted_arr     Array          TYPEINTEGER    ----------> dim=1
n              Variable       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Local:counting_sort
ID             category       type           depictor
              
count_arr      Array          TYPEINTEGER    ----------> dim=1
i              Variable       TYPEINTEGER    NULL           
j              Variable       TYPEINTEGER    NULL           
k              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
a              Array          TYPEINTEGER    ----------> dim=1
i              Variable       TYPEINTEGER    NULL           
b              Array          TYPEINTEGER    ----------> dim=1
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
tmp            Variable       TYPEINTEGER    NULL           
===========================================================
789
789
789
456
789
789
456
789
789
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
TraverseScopeStack no result
789
789
789
789
456
789
789
789
789
789
456
789
789
789
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
TraverseScopeStack no result
789
789
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   3)	FUNCTION counting_sort :
  2  (at line   3)	PARAM ini_arr
  3  (at line   3)	PARAM sorted_arr
  4  (at line   3)	PARAM n
  5  (at line   8)	_t0 := #0
  6  (at line   8)	k := _t0
  7  (at line   9)	_t1 := #0
  8  (at line   9)	i := _t1
  9  (at line  10)	_t2 := #0
 10  (at line  10)	j := _t2
 11  (at line  11)	LABEL label0 :
 12  (at line  11)	_t3 := k
 13  (at line  11)	_t6 := #10
 14  (at line  11)	IF _t3 < _t6 GOTO label1
 15  (at line  11)	GOTO label2
 16  (at line  11)	LABEL label1 :
 17  (at line  12)	_t7 := #0
 18  (at line  12)	_t10 := k
 19  (at line  12)	count_arr[_t10] := _t7
 20  (at line  13)	_t13 := k
 21  (at line  13)	_t14 := #1
 22  (at line  13)	_t12 := _t13 + _t14
 23  (at line  13)	k := _t12
 24  (at line  11)	GOTO label0
 25  (at line  11)	LABEL label2 :
 26  (at line  15)	LABEL label3 :
 27  (at line  15)	_t15 := i
 28  (at line  15)	_t18 := n
 29  (at line  15)	IF _t15 < _t18 GOTO label4
 30  (at line  15)	GOTO label5
 31  (at line  15)	LABEL label4 :
 32  (at line  17)	_t27 := i
 33  (at line  17)	_t24 := ini_arr[_t27]
 34  (at line  17)	_t20 := count_arr[_t24]
 35  (at line  17)	_t21 := #1
 36  (at line  17)	_t19 := _t20 + _t21
 37  (at line  17)	_t35 := i
 38  (at line  17)	_t32 := ini_arr[_t35]
 39  (at line  17)	count_arr[_t32] := _t19
 40  (at line  18)	_t39 := i
 41  (at line  18)	_t40 := #1
 42  (at line  18)	_t38 := _t39 + _t40
 43  (at line  18)	i := _t38
 44  (at line  15)	GOTO label3
 45  (at line  15)	LABEL label5 :
 46  (at line  20)	_t41 := #1
 47  (at line  20)	k := _t41
 48  (at line  21)	LABEL label6 :
 49  (at line  21)	_t42 := k
 50  (at line  21)	_t45 := #10
 51  (at line  21)	IF _t42 < _t45 GOTO label7
 52  (at line  21)	GOTO label8
 53  (at line  21)	LABEL label7 :
 54  (at line  22)	_t51 := k
 55  (at line  22)	_t47 := count_arr[_t51]
 56  (at line  22)	_t56 := k
 57  (at line  22)	_t57 := #1
 58  (at line  22)	_t55 := _t56 - _t57
 59  (at line  22)	_t48 := count_arr[_t55]
 60  (at line  22)	_t46 := _t47 + _t48
 61  (at line  22)	_t61 := k
 62  (at line  22)	count_arr[_t61] := _t46
 63  (at line  23)	_t64 := k
 64  (at line  23)	_t65 := #1
 65  (at line  23)	_t63 := _t64 + _t65
 66  (at line  23)	k := _t63
 67  (at line  21)	GOTO label6
 68  (at line  21)	LABEL label8 :
 69  (at line  25)	_t66 := n
 70  (at line  25)	j := _t66
 71  (at line  26)	LABEL label9 :
 72  (at line  26)	_t67 := j
 73  (at line  26)	_t70 := #0
 74  (at line  26)	IF _t67 > _t70 GOTO label10
 75  (at line  26)	GOTO label11
 76  (at line  26)	LABEL label10 :
 77  (at line  27)	_t80 := j
 78  (at line  27)	_t81 := #1
 79  (at line  27)	_t79 := _t80 - _t81
 80  (at line  27)	_t76 := ini_arr[_t79]
 81  (at line  27)	_t72 := count_arr[_t76]
 82  (at line  27)	_t73 := #1
 83  (at line  27)	_t71 := _t72 - _t73
 84  (at line  27)	_t90 := j
 85  (at line  27)	_t91 := #1
 86  (at line  27)	_t89 := _t90 - _t91
 87  (at line  27)	_t86 := ini_arr[_t89]
 88  (at line  27)	count_arr[_t86] := _t71
 89  (at line  28)	_t98 := j
 90  (at line  28)	_t99 := #1
 91  (at line  28)	_t97 := _t98 - _t99
 92  (at line  28)	_t94 := ini_arr[_t97]
 93  (at line  28)	_t110 := j
 94  (at line  28)	_t111 := #1
 95  (at line  28)	_t109 := _t110 - _t111
 96  (at line  28)	_t106 := ini_arr[_t109]
 97  (at line  28)	_t103 := count_arr[_t106]
 98  (at line  28)	sorted_arr[_t103] := _t94
 99  (at line  29)	_t116 := j
100  (at line  29)	_t117 := #1
101  (at line  29)	_t115 := _t116 - _t117
102  (at line  29)	j := _t115
103  (at line  26)	GOTO label9
104  (at line  26)	LABEL label11 :
105  (at line  31)	_t118 := #0
106  (at line  31)	RETURN _t118

107  (at line  35)	FUNCTION main :
108  (at line  36)	_t119 := #10
109  (at line  36)	n := _t119
110  (at line  38)	_t120 := #4
111  (at line  38)	_t123 := #0
112  (at line  38)	a[_t123] := _t120
113  (at line  38)	_t125 := #3
114  (at line  38)	_t128 := #1
115  (at line  38)	a[_t128] := _t125
116  (at line  38)	_t130 := #9
117  (at line  38)	_t133 := #2
118  (at line  38)	a[_t133] := _t130
119  (at line  38)	_t135 := #2
120  (at line  38)	_t138 := #3
121  (at line  38)	a[_t138] := _t135
122  (at line  38)	_t140 := #0
123  (at line  38)	_t143 := #4
124  (at line  38)	a[_t143] := _t140
125  (at line  39)	_t145 := #1
126  (at line  39)	_t148 := #5
127  (at line  39)	a[_t148] := _t145
128  (at line  39)	_t150 := #6
129  (at line  39)	_t153 := #6
130  (at line  39)	a[_t153] := _t150
131  (at line  39)	_t155 := #5
132  (at line  39)	_t158 := #7
133  (at line  39)	a[_t158] := _t155
134  (at line  39)	_t160 := #7
135  (at line  39)	_t163 := #8
136  (at line  39)	a[_t163] := _t160
137  (at line  39)	_t165 := #8
138  (at line  39)	_t168 := #9
139  (at line  39)	a[_t168] := _t165
140  (at line  41)	_t170 := #0
141  (at line  41)	i := _t170
142  (at line  37)	_t173 := #10
143  (at line  42)	_t175 := #10
144  (at line  43)	_t176 := n
145  (at line  43)	ARG _t176
146  (at line  43)	ARG b[_t175]
147  (at line  43)	ARG a[_t173]
148  (at line  43)	_t171 := CALL counting_sort
149  (at line  43)	i := _t171
150  (at line  44)	LABEL label12 :
151  (at line  44)	_t177 := i
152  (at line  44)	_t180 := n
153  (at line  44)	IF _t177 < _t180 GOTO label13
154  (at line  44)	GOTO label14
155  (at line  44)	LABEL label13 :
156  (at line  46)	_t184 := i
157  (at line  46)	_t181 := b[_t184]
158  (at line  46)	tmp := _t181
159  (at line  47)	_t186 := tmp
160  (at line  47)	ARG _t186
161  (at line  47)	CALL 
162  (at line  48)	_t187 := #10
163  (at line  48)	tmp := _t187
164  (at line  49)	_t188 := tmp
165  (at line  49)	ARG _t188
166  (at line  49)	CALL 
167  (at line  50)	_t190 := i
168  (at line  50)	_t191 := #1
169  (at line  50)	_t189 := _t190 + _t191
170  (at line  50)	i := _t189
171  (at line  44)	GOTO label12
172  (at line  44)	LABEL label14 :
173  (at line  52)	_t192 := #0
174  (at line  52)	RETURN _t192


===========================================================
Global
ID             category       type           depictor
               
n              Variable       TYPEINTEGER    NULL           
counting_sort  Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:counting_sort
ID             category       type           depictor
              
ini_arr        Array          TYPEINTEGER    ----------> dim=1
sorted_arr     Array          TYPEINTEGER    ----------> dim=1
n              Variable       TYPEINTEGER    NOT NULL       
scope type is wrong
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
scope type is wrong
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
Variable offset count+4 :count_arr
Variable offset count+4 :count_arr
Variable offset count+4 :count_arr
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t0
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t1
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t2
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t3
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t6
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t7
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t8
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t9
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t10
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t11
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t12
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t13
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t14
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t15
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t18
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t19
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t20
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t21
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t22
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t23
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t24
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t25
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t26
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t27
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t28
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t29
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t30
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t31
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t32
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t33
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t34
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t35
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t36
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t37
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t38
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t39
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t40
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t41
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t42
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t45
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t46
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t47
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t48
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t49
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t50
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t51
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t52
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t53
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t54
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t55
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t56
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t57
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t58
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t59
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t60
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t61
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t62
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t63
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t64
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t65
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t66
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t67
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t70
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t71
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t72
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t73
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t74
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t75
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t76
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t77
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t78
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t79
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t80
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t81
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t82
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t83
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t84
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t85
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t86
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t87
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t88
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t89
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t90
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t91
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t92
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t93
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t94
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t95
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t96
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t97
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t98
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t99
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t100
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t101
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t102
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t103
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t104
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t105
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t106
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t107
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t108
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t109
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t110
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t111
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t112
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t113
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t114
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t115
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t116
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t117
Variable offset count+4 :_t118
tec type ASSIGN
findregister: insldr rd=0,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=1,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=2,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=3,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=4,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=5,r1=11,r2 offset=0,op2type=1, insefft=0
tac type LABELDF
L0:

tec type ASSIGN
findregister: insldr rd=6,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=8,r1=11,r2 offset=0,op2type=1, insefft=0
tac type IFLT
tac type GOTO
Goto string  ControlInstruction tostring
INS B tostring
B L2

tac type LABELDF
L1:

tec type ASSIGN
findregister: insldr rd=9,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
compiler: ./ObjectCode/Arm.cpp:32: ARM::ARM(TACCode *, ScopeItem &): Assertion `code.dest.Type==VARIABLE' failed.
Aborted (core dumped)
