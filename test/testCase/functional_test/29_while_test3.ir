arg S
--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("g")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("h")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("f")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("e")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("EightWhile")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
<int>
<id,g>
<;>
<int>
<id,h>
<;>
<int>
<id,f>
<;>
<int>
<id,e>
<;>
<int>
<id,EightWhile>
<(>
<)>
<{>
<int>
<id,a>
<;>
<id,a>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("5")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,b>
<;>
<int>
<id,c>
<;>
<id,b>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("6")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,c>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("7")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,d>
<;>
<id,d>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,a>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("20")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,a>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,a>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("3")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,b>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,b>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,b>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 93 ("==")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,c>
<==>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("7")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,c>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,c>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,d>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("20")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,d>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,d>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("3")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("e")
--accepting rule at line 114 (" ")
--accepting rule at line 95 (">")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,e>
<>>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("e")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,e>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("e")
--accepting rule at line 85 ("-")
Lval
<id,e>
<->
33333333333
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("f")
--accepting rule at line 114 (" ")
--accepting rule at line 95 (">")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,f>
<>>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("f")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,f>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("f")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,f>
<->
33333333333
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("g")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,g>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("3")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("g")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,g>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("g")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,g>
<+>
33333333333
--accepting rule at line 109 ("10")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("h")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,h>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("h")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,h>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("h")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,h>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("8")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("h")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,h>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("h")
--accepting rule at line 85 ("-")
Lval
<id,h>
<->
33333333333
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("g")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,g>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("g")
--accepting rule at line 85 ("-")
Lval
<id,g>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("8")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("f")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,f>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("f")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,f>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("e")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,e>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("e")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,e>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,d>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,d>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,c>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,c>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,b>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,b>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<(>
<id,a>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<(>
<id,b>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 81 (")")
Lval
<id,d>
<)>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 81 (")")
Lval
<+>
<id,c>
<)>
33333333333
--accepting rule at line 85 ("-")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("e")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<->
<(>
<id,e>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,d>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("g")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,g>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("h")
--accepting rule at line 81 (")")
Lval
<id,h>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("g")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<;>
<}>
<int>
<id,main>
<(>
<)>
<{>
<id,g>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("h")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,h>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("e")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,e>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("4")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("f")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,f>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("6")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("EightWhile")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Lval
<intd>
ExpNumber:0
<;>
stmt1
<return>
<id,EightWhile>
<(>
<)>
<;>
<}>
CompUnits (1)
  VarDecl (1)
    IDENTIFIER g
  CompUnits (2)
    VarDecl (2)
      IDENTIFIER h
    CompUnits (3)
      VarDecl (3)
        IDENTIFIER f
      CompUnits (4)
        VarDecl (4)
          IDENTIFIER e
        CompUnits (5)
          FuncDef (5)
            NOFParam (5)
            Block (6)
              BlockItems (6)
                VarDecl (6)
                  IDENTIFIER a
                BlockItems (7)
                  Lval_Opassign_Stmt (7)
                    LVal (7)
                      IDENTIFIER a
                      ArrayExps (7)
                    IntConst (7)
                      CONSTANTINTD: 5
                  BlockItems (8)
                    VarDecl (8)
                      IDENTIFIER b
                    BlockItems (9)
                      VarDecl (9)
                        IDENTIFIER c
                      BlockItems (10)
                        Lval_Opassign_Stmt (10)
                          LVal (10)
                            IDENTIFIER b
                            ArrayExps (10)
                          IntConst (10)
                            CONSTANTINTD: 6
                        BlockItems (11)
                          Lval_Opassign_Stmt (11)
                            LVal (11)
                              IDENTIFIER c
                              ArrayExps (11)
                            IntConst (11)
                              CONSTANTINTD: 7
                          BlockItems (12)
                            VarDecl (12)
                              IDENTIFIER d
                            BlockItems (13)
                              Lval_Opassign_Stmt (13)
                                LVal (13)
                                  IDENTIFIER d
                                  ArrayExps (13)
                                IntConst (13)
                                  CONSTANTINTD: 10
                              BlockItems (14)
                                While_Stmt (14)
                                  Cond (14)
                                    OPLIGHT (14)
                                      LVal_EXP (14)
                                        LVal (14)
                                          IDENTIFIER a
                                          ArrayExps (14)
                                      IntConst (14)
                                        CONSTANTINTD: 20
                                  Block_Stmt (15)
                                    Block (15)
                                      BlockItems (15)
                                        Lval_Opassign_Stmt (15)
                                          LVal (15)
                                            IDENTIFIER a
                                            ArrayExps (15)
                                          PLUSExp (15)
                                            LVal_EXP (15)
                                              LVal (15)
                                                IDENTIFIER a
                                                ArrayExps (15)
                                            IntConst (15)
                                              CONSTANTINTD: 3
                                        BlockItems (16)
                                          While_Stmt (16)
                                            Cond (16)
                                              OPLIGHT (16)
                                                LVal_EXP (16)
                                                  LVal (16)
                                                    IDENTIFIER b
                                                    ArrayExps (16)
                                                IntConst (16)
                                                  CONSTANTINTD: 10
                                            Block_Stmt (17)
                                              Block (17)
                                                BlockItems (17)
                                                  Lval_Opassign_Stmt (17)
                                                    LVal (17)
                                                      IDENTIFIER b
                                                      ArrayExps (17)
                                                    PLUSExp (17)
                                                      LVal_EXP (17)
                                                        LVal (17)
                                                          IDENTIFIER b
                                                          ArrayExps (17)
                                                      IntConst (17)
                                                        CONSTANTINTD: 1
                                                  BlockItems (18)
                                                    While_Stmt (18)
                                                      Cond (18)
                                                        OPEQUAL (18)
                                                          LVal_EXP (18)
                                                            LVal (18)
                                                              IDENTIFIER c
                                                              ArrayExps (18)
                                                          IntConst (18)
                                                            CONSTANTINTD: 7
                                                      Block_Stmt (19)
                                                        Block (19)
                                                          BlockItems (19)
                                                            Lval_Opassign_Stmt (19)
                                                              LVal (19)
                                                                IDENTIFIER c
                                                                ArrayExps (19)
                                                              MINUSExp (19)
                                                                LVal_EXP (19)
                                                                  LVal (19)
                                                                    IDENTIFIER c
                                                                    ArrayExps (19)
                                                                IntConst (19)
                                                                  CONSTANTINTD: 1
                                                            BlockItems (20)
                                                              While_Stmt (20)
                                                                Cond (20)
                                                                  OPLIGHT (20)
                                                                    LVal_EXP (20)
                                                                      LVal (20)
                                                                        IDENTIFIER d
                                                                        ArrayExps (20)
                                                                    IntConst (20)
                                                                      CONSTANTINTD: 20
                                                                Block_Stmt (21)
                                                                  Block (21)
                                                                    BlockItems (21)
                                                                      Lval_Opassign_Stmt (21)
                                                                        LVal (21)
                                                                          IDENTIFIER d
                                                                          ArrayExps (21)
                                                                        PLUSExp (21)
                                                                          LVal_EXP (21)
                                                                            LVal (21)
                                                                              IDENTIFIER d
                                                                              ArrayExps (21)
                                                                          IntConst (21)
                                                                            CONSTANTINTD: 3
                                                                      BlockItems (22)
                                                                        While_Stmt (22)
                                                                          Cond (22)
                                                                            OPGREAT (22)
                                                                              LVal_EXP (22)
                                                                                LVal (22)
                                                                                  IDENTIFIER e
                                                                                  ArrayExps (22)
                                                                              IntConst (22)
                                                                                CONSTANTINTD: 1
                                                                          Block_Stmt (23)
                                                                            Block (23)
                                                                              BlockItems (23)
                                                                                Lval_Opassign_Stmt (23)
                                                                                  LVal (23)
                                                                                    IDENTIFIER e
                                                                                    ArrayExps (23)
                                                                                  MINUSExp (23)
                                                                                    LVal_EXP (23)
                                                                                      LVal (23)
                                                                                        IDENTIFIER e
                                                                                        ArrayExps (23)
                                                                                    IntConst (23)
                                                                                      CONSTANTINTD: 1
                                                                                BlockItems (24)
                                                                                  While_Stmt (24)
                                                                                    Cond (24)
                                                                                      OPGREAT (24)
                                                                                        LVal_EXP (24)
                                                                                          LVal (24)
                                                                                            IDENTIFIER f
                                                                                            ArrayExps (24)
                                                                                        IntConst (24)
                                                                                          CONSTANTINTD: 2
                                                                                    Block_Stmt (25)
                                                                                      Block (25)
                                                                                        BlockItems (25)
                                                                                          Lval_Opassign_Stmt (25)
                                                                                            LVal (25)
                                                                                              IDENTIFIER f
                                                                                              ArrayExps (25)
                                                                                            MINUSExp (25)
                                                                                              LVal_EXP (25)
                                                                                                LVal (25)
                                                                                                  IDENTIFIER f
                                                                                                  ArrayExps (25)
                                                                                              IntConst (25)
                                                                                                CONSTANTINTD: 2
                                                                                          BlockItems (26)
                                                                                            While_Stmt (26)
                                                                                              Cond (26)
                                                                                                OPLIGHT (26)
                                                                                                  LVal_EXP (26)
                                                                                                    LVal (26)
                                                                                                      IDENTIFIER g
                                                                                                      ArrayExps (26)
                                                                                                  IntConst (26)
                                                                                                    CONSTANTINTD: 3
                                                                                              Block_Stmt (27)
                                                                                                Block (27)
                                                                                                  BlockItems (27)
                                                                                                    Lval_Opassign_Stmt (27)
                                                                                                      LVal (27)
                                                                                                        IDENTIFIER g
                                                                                                        ArrayExps (27)
                                                                                                      PLUSExp (27)
                                                                                                        LVal_EXP (27)
                                                                                                          LVal (27)
                                                                                                            IDENTIFIER g
                                                                                                            ArrayExps (27)
                                                                                                        IntConst (27)
                                                                                                          CONSTANTINTD: 10
                                                                                                    BlockItems (28)
                                                                                                      While_Stmt (28)
                                                                                                        Cond (28)
                                                                                                          OPLIGHT (28)
                                                                                                            LVal_EXP (28)
                                                                                                              LVal (28)
                                                                                                                IDENTIFIER h
                                                                                                                ArrayExps (28)
                                                                                                            IntConst (28)
                                                                                                              CONSTANTINTD: 10
                                                                                                        Block_Stmt (29)
                                                                                                          Block (29)
                                                                                                            BlockItems (29)
                                                                                                              Lval_Opassign_Stmt (29)
                                                                                                                LVal (29)
                                                                                                                  IDENTIFIER h
                                                                                                                  ArrayExps (29)
                                                                                                                PLUSExp (29)
                                                                                                                  LVal_EXP (29)
                                                                                                                    LVal (29)
                                                                                                                      IDENTIFIER h
                                                                                                                      ArrayExps (29)
                                                                                                                  IntConst (29)
                                                                                                                    CONSTANTINTD: 8
                                                                                                      BlockItems (31)
                                                                                                        Lval_Opassign_Stmt (31)
                                                                                                          LVal (31)
                                                                                                            IDENTIFIER h
                                                                                                            ArrayExps (31)
                                                                                                          MINUSExp (31)
                                                                                                            LVal_EXP (31)
                                                                                                              LVal (31)
                                                                                                                IDENTIFIER h
                                                                                                                ArrayExps (31)
                                                                                                            IntConst (31)
                                                                                                              CONSTANTINTD: 1
                                                                                            BlockItems (33)
                                                                                              Lval_Opassign_Stmt (33)
                                                                                                LVal (33)
                                                                                                  IDENTIFIER g
                                                                                                  ArrayExps (33)
                                                                                                MINUSExp (33)
                                                                                                  LVal_EXP (33)
                                                                                                    LVal (33)
                                                                                                      IDENTIFIER g
                                                                                                      ArrayExps (33)
                                                                                                  IntConst (33)
                                                                                                    CONSTANTINTD: 8
                                                                                  BlockItems (35)
                                                                                    Lval_Opassign_Stmt (35)
                                                                                      LVal (35)
                                                                                        IDENTIFIER f
                                                                                        ArrayExps (35)
                                                                                      PLUSExp (35)
                                                                                        LVal_EXP (35)
                                                                                          LVal (35)
                                                                                            IDENTIFIER f
                                                                                            ArrayExps (35)
                                                                                        IntConst (35)
                                                                                          CONSTANTINTD: 1
                                                                        BlockItems (37)
                                                                          Lval_Opassign_Stmt (37)
                                                                            LVal (37)
                                                                              IDENTIFIER e
                                                                              ArrayExps (37)
                                                                            PLUSExp (37)
                                                                              LVal_EXP (37)
                                                                                LVal (37)
                                                                                  IDENTIFIER e
                                                                                  ArrayExps (37)
                                                                              IntConst (37)
                                                                                CONSTANTINTD: 1
                                                              BlockItems (39)
                                                                Lval_Opassign_Stmt (39)
                                                                  LVal (39)
                                                                    IDENTIFIER d
                                                                    ArrayExps (39)
                                                                  MINUSExp (39)
                                                                    LVal_EXP (39)
                                                                      LVal (39)
                                                                        IDENTIFIER d
                                                                        ArrayExps (39)
                                                                    IntConst (39)
                                                                      CONSTANTINTD: 1
                                                    BlockItems (41)
                                                      Lval_Opassign_Stmt (41)
                                                        LVal (41)
                                                          IDENTIFIER c
                                                          ArrayExps (41)
                                                        PLUSExp (41)
                                                          LVal_EXP (41)
                                                            LVal (41)
                                                              IDENTIFIER c
                                                              ArrayExps (41)
                                                          IntConst (41)
                                                            CONSTANTINTD: 1
                                          BlockItems (43)
                                            Lval_Opassign_Stmt (43)
                                              LVal (43)
                                                IDENTIFIER b
                                                ArrayExps (43)
                                              MINUSExp (43)
                                                LVal_EXP (43)
                                                  LVal (43)
                                                    IDENTIFIER b
                                                    ArrayExps (43)
                                                IntConst (43)
                                                  CONSTANTINTD: 2
                                BlockItems (46)
                                  Return_Stmt (46)
                                    MINUSExp (46)
                                      (Exp) (46)
                                        PLUSExp (46)
                                          PLUSExp (46)
                                            LVal_EXP (46)
                                              LVal (46)
                                                IDENTIFIER a
                                                ArrayExps (46)
                                            (Exp) (46)
                                              PLUSExp (46)
                                                LVal_EXP (46)
                                                  LVal (46)
                                                    IDENTIFIER b
                                                    ArrayExps (46)
                                                LVal_EXP (46)
                                                  LVal (46)
                                                    IDENTIFIER d
                                                    ArrayExps (46)
                                          LVal_EXP (46)
                                            LVal (46)
                                              IDENTIFIER c
                                              ArrayExps (46)
                                      (Exp) (46)
                                        PLUSExp (46)
                                          MINUSExp (46)
                                            PLUSExp (46)
                                              LVal_EXP (46)
                                                LVal (46)
                                                  IDENTIFIER e
                                                  ArrayExps (46)
                                              LVal_EXP (46)
                                                LVal (46)
                                                  IDENTIFIER d
                                                  ArrayExps (46)
                                            LVal_EXP (46)
                                              LVal (46)
                                                IDENTIFIER g
                                                ArrayExps (46)
                                          LVal_EXP (46)
                                            LVal (46)
                                              IDENTIFIER h
                                              ArrayExps (46)
          CompUnits (49)
            FuncDef (49)
              NOFParam (49)
              Block (50)
                BlockItems (50)
                  Lval_Opassign_Stmt (50)
                    LVal (50)
                      IDENTIFIER g
                      ArrayExps (50)
                    IntConst (50)
                      CONSTANTINTD: 1
                  BlockItems (51)
                    Lval_Opassign_Stmt (51)
                      LVal (51)
                        IDENTIFIER h
                        ArrayExps (51)
                      IntConst (51)
                        CONSTANTINTD: 2
                    BlockItems (52)
                      Lval_Opassign_Stmt (52)
                        LVal (52)
                          IDENTIFIER e
                          ArrayExps (52)
                        IntConst (52)
                          CONSTANTINTD: 4
                      BlockItems (53)
                        Lval_Opassign_Stmt (53)
                          LVal (53)
                            IDENTIFIER f
                            ArrayExps (53)
                          IntConst (53)
                            CONSTANTINTD: 6
                        BlockItems (54)
                          Return_Stmt (54)
                            funcall (54)
                              IDENTIFIER EightWhile


===========================================================
Global
ID             category       type           depictor
               
g              Variable       TYPEINTEGER    NULL           
h              Variable       TYPEINTEGER    NULL           
f              Variable       TYPEINTEGER    NULL           
e              Variable       TYPEINTEGER    NULL           
EightWhile     Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:EightWhile
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:EightWhile
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
c              Variable       TYPEINTEGER    NULL           
d              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
===========================================================
456
789
789
456
789
789
789
789
456
789
789
789
789
789
789
456
789
789
789
789
456
789
789
789
789
456
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   5)	FUNCTION EightWhile :
  2  (at line   7)	_t0 := #5
  3  (at line   7)	a := _t0
  4  (at line  10)	_t1 := #6
  5  (at line  10)	b := _t1
  6  (at line  11)	_t2 := #7
  7  (at line  11)	c := _t2
  8  (at line  13)	_t3 := #10
  9  (at line  13)	d := _t3
 10  (at line  14)	LABEL label0 :
 11  (at line  14)	_t4 := a
 12  (at line  14)	_t7 := #20
 13  (at line  14)	IF _t4 < _t7 GOTO label1
 14  (at line  14)	GOTO label2
 15  (at line  14)	LABEL label1 :
 16  (at line  15)	_t9 := a
 17  (at line  15)	_t10 := #3
 18  (at line  15)	_t8 := _t9 + _t10
 19  (at line  15)	a := _t8
 20  (at line  16)	LABEL label3 :
 21  (at line  16)	_t11 := b
 22  (at line  16)	_t14 := #10
 23  (at line  16)	IF _t11 < _t14 GOTO label4
 24  (at line  16)	GOTO label5
 25  (at line  16)	LABEL label4 :
 26  (at line  17)	_t16 := b
 27  (at line  17)	_t17 := #1
 28  (at line  17)	_t15 := _t16 + _t17
 29  (at line  17)	b := _t15
 30  (at line  18)	LABEL label6 :
 31  (at line  18)	_t18 := c
 32  (at line  18)	_t21 := #7
 33  (at line  18)	IF _t18 = _t21 GOTO label7
 34  (at line  18)	GOTO label8
 35  (at line  18)	LABEL label7 :
 36  (at line  19)	_t23 := c
 37  (at line  19)	_t24 := #1
 38  (at line  19)	_t22 := _t23 - _t24
 39  (at line  19)	c := _t22
 40  (at line  20)	LABEL label9 :
 41  (at line  20)	_t25 := d
 42  (at line  20)	_t28 := #20
 43  (at line  20)	IF _t25 < _t28 GOTO label10
 44  (at line  20)	GOTO label11
 45  (at line  20)	LABEL label10 :
 46  (at line  21)	_t30 := d
 47  (at line  21)	_t31 := #3
 48  (at line  21)	_t29 := _t30 + _t31
 49  (at line  21)	d := _t29
 50  (at line  22)	LABEL label12 :
 51  (at line  22)	_t32 := e
 52  (at line  22)	_t35 := #1
 53  (at line  22)	IF _t32 > _t35 GOTO label13
 54  (at line  22)	GOTO label14
 55  (at line  22)	LABEL label13 :
 56  (at line  23)	_t37 := e
 57  (at line  23)	_t38 := #1
 58  (at line  23)	_t36 := _t37 - _t38
 59  (at line  23)	e := _t36
 60  (at line  24)	LABEL label15 :
 61  (at line  24)	_t39 := f
 62  (at line  24)	_t42 := #2
 63  (at line  24)	IF _t39 > _t42 GOTO label16
 64  (at line  24)	GOTO label17
 65  (at line  24)	LABEL label16 :
 66  (at line  25)	_t44 := f
 67  (at line  25)	_t45 := #2
 68  (at line  25)	_t43 := _t44 - _t45
 69  (at line  25)	f := _t43
 70  (at line  26)	LABEL label18 :
 71  (at line  26)	_t46 := g
 72  (at line  26)	_t49 := #3
 73  (at line  26)	IF _t46 < _t49 GOTO label19
 74  (at line  26)	GOTO label20
 75  (at line  26)	LABEL label19 :
 76  (at line  27)	_t51 := g
 77  (at line  27)	_t52 := #10
 78  (at line  27)	_t50 := _t51 + _t52
 79  (at line  27)	g := _t50
 80  (at line  28)	LABEL label21 :
 81  (at line  28)	_t53 := h
 82  (at line  28)	_t56 := #10
 83  (at line  28)	IF _t53 < _t56 GOTO label22
 84  (at line  28)	GOTO label23
 85  (at line  28)	LABEL label22 :
 86  (at line  29)	_t58 := h
 87  (at line  29)	_t59 := #8
 88  (at line  29)	_t57 := _t58 + _t59
 89  (at line  29)	h := _t57
 90  (at line  28)	GOTO label21
 91  (at line  28)	LABEL label23 :
 92  (at line  31)	_t61 := h
 93  (at line  31)	_t62 := #1
 94  (at line  31)	_t60 := _t61 - _t62
 95  (at line  31)	h := _t60
 96  (at line  26)	GOTO label18
 97  (at line  26)	LABEL label20 :
 98  (at line  33)	_t64 := g
 99  (at line  33)	_t65 := #8
100  (at line  33)	_t63 := _t64 - _t65
101  (at line  33)	g := _t63
102  (at line  24)	GOTO label15
103  (at line  24)	LABEL label17 :
104  (at line  35)	_t67 := f
105  (at line  35)	_t68 := #1
106  (at line  35)	_t66 := _t67 + _t68
107  (at line  35)	f := _t66
108  (at line  22)	GOTO label12
109  (at line  22)	LABEL label14 :
110  (at line  37)	_t70 := e
111  (at line  37)	_t71 := #1
112  (at line  37)	_t69 := _t70 + _t71
113  (at line  37)	e := _t69
114  (at line  20)	GOTO label9
115  (at line  20)	LABEL label11 :
116  (at line  39)	_t73 := d
117  (at line  39)	_t74 := #1
118  (at line  39)	_t72 := _t73 - _t74
119  (at line  39)	d := _t72
120  (at line  18)	GOTO label6
121  (at line  18)	LABEL label8 :
122  (at line  41)	_t76 := c
123  (at line  41)	_t77 := #1
124  (at line  41)	_t75 := _t76 + _t77
125  (at line  41)	c := _t75
126  (at line  16)	GOTO label3
127  (at line  16)	LABEL label5 :
128  (at line  43)	_t79 := b
129  (at line  43)	_t80 := #2
130  (at line  43)	_t78 := _t79 - _t80
131  (at line  43)	b := _t78
132  (at line  14)	GOTO label0
133  (at line  14)	LABEL label2 :
134  (at line  46)	_t87 := a
135  (at line  46)	_t90 := b
136  (at line  46)	_t91 := d
137  (at line  46)	_t89 := _t90 + _t91
138  (at line  46)	_t88 := _t89
139  (at line  46)	_t85 := _t87 + _t88
140  (at line  46)	_t86 := c
141  (at line  46)	_t84 := _t85 + _t86
142  (at line  46)	_t82 := _t84
143  (at line  46)	_t97 := e
144  (at line  46)	_t98 := d
145  (at line  46)	_t95 := _t97 + _t98
146  (at line  46)	_t96 := g
147  (at line  46)	_t93 := _t95 - _t96
148  (at line  46)	_t94 := h
149  (at line  46)	_t92 := _t93 + _t94
150  (at line  46)	_t83 := _t92
151  (at line  46)	_t81 := _t82 - _t83
152  (at line  46)	RETURN _t81

153  (at line  49)	FUNCTION main :
154  (at line  50)	_t99 := #1
155  (at line  50)	g := _t99
156  (at line  51)	_t100 := #2
157  (at line  51)	h := _t100
158  (at line  52)	_t101 := #4
159  (at line  52)	e := _t101
160  (at line  53)	_t102 := #6
161  (at line  53)	f := _t102
162  (at line  54)	_t103 := CALL EightWhile
163  (at line  54)	RETURN _t103


===========================================================
Global
ID             category       type           depictor
               
g              Variable       TYPEINTEGER    NULL           
h              Variable       TYPEINTEGER    NULL           
f              Variable       TYPEINTEGER    NULL           
e              Variable       TYPEINTEGER    NULL           
EightWhile     Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:EightWhile
ID             category       type           depictor
              
               NOParam                       NOT NULL       
scope type is wrong
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
===========================================================
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
Variable offset count+4 :a
Variable offset count+4 :a
Variable offset count+4 :a
Variable offset count+4 :a
Variable offset count+4 :a
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t0
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t1
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t2
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t3
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t4
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t7
Variable offset count+4 :_t81
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t82
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t83
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t84
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t85
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t86
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t87
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t88
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t89
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t90
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t91
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t92
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t93
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t94
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t95
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t96
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t97
scope type not local in functiondf
scopeprev:1
Variable offset count+4 :_t98
tec type ASSIGN
findregister: insldr rd=0,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=1,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=2,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=3,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=4,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=5,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=6,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=8,r1=11,r2 offset=0,op2type=1, insefft=0
tac type LABELDF
L0:

tec type ASSIGN
findregister: insldr rd=9,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type IFLT
tac type GOTO
Goto string  ControlInstruction tostring
INS B tostring
B L2

tac type LABELDF
L1:

tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ADD
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type LABELDF
L3:

tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type IFLT
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type GOTO
Goto string  ControlInstruction tostring
INS B tostring
B L5

tac type LABELDF
L4:

tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ADD
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type LABELDF
L6:

tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type IFEQ
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type GOTO
Goto string  ControlInstruction tostring
INS B tostring
B L8

tac type LABELDF
L7:

tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type SUB
compiler: ./ObjectCode/Arm.cpp:85: ARM::ARM(TACCode *, ScopeItem &): Assertion `code.dest.Type = VARIABLE' failed.
Aborted (core dumped)
