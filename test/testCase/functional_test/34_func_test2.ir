--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("func1")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("func2")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("func3")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("4")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("func4")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("8")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 79 ("}")
<int>
<id,func1>
<(>
<)>
<{>
<int>
<id,a>
<;>
<id,a>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<return>
<id,a>
<;>
Lval
<}>
<int>
<id,func2>
<(>
<)>
<{>
<int>
<id,a>
<;>
<id,a>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<return>
<id,a>
<;>
Lval
<}>
<int>
<id,func3>
<(>
<)>
<{>
<int>
<id,a>
<;>
<id,a>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<return>
<id,a>
<;>
Lval
<}>
<int>
<id,func4>
<(>
<)>
<{>
<int>
<id,a>
<;>
<{>
<int>
<id,b>
<;>
<id,b>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<=>
Lval
<id,b>
<;>
Lval
stmt1
<}--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("16")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("32")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("32")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("32")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("func1")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("func2")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("func3")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("func4")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 75 (";")
>
<{>
<int>
<id,b>
<;>
<id,b>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<=>
Lval
<id,a>
<+>
Lval
<id,b>
<;>
Lval
stmt1
<}>
<return>
<id,a>
<;>
Lval
<}>
<int>
<id,main>
<(>
<)>
<{>
<int>
<id,a>
<;>
<int>
<id,b>
<;>
<int>
<id,c>
<;>
<id,a>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,b>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,c>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<return>
<id,func1>
<(>
<)>
<+>
<id,func2>
<(>
<)>
<+>
<id,func3>
<(>
<)>
<+>
<id,func4>
<(>
<)>
<+>
<id,a>
<+>
Lval
<id,b>
<+>
Lval
<id,c>
<;>--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--(end of buffer or a NUL)
--EOF (start condition 0)

Lval
<}>
CompUnits (1)
  FuncDef (1)
    NOFParam (1)
    Block (2)
      BlockItems (2)
        VarDecl (2)
          IDENTIFIER a
        BlockItems (3)
          Lval_Opassign_Stmt (3)
            LVal (3)
              IDENTIFIER a
              ArrayExps (3)
            IntConst (3)
              CONSTANTINTD: 1
          BlockItems (4)
            Return_Stmt (4)
              LVal_EXP (4)
                LVal (4)
                  IDENTIFIER a
                  ArrayExps (4)
  CompUnits (7)
    FuncDef (7)
      NOFParam (7)
      Block (8)
        BlockItems (8)
          VarDecl (8)
            IDENTIFIER a
          BlockItems (9)
            Lval_Opassign_Stmt (9)
              LVal (9)
                IDENTIFIER a
                ArrayExps (9)
              IntConst (9)
                CONSTANTINTD: 2
            BlockItems (10)
              Return_Stmt (10)
                LVal_EXP (10)
                  LVal (10)
                    IDENTIFIER a
                    ArrayExps (10)
    CompUnits (13)
      FuncDef (13)
        NOFParam (13)
        Block (14)
          BlockItems (14)
            VarDecl (14)
              IDENTIFIER a
            BlockItems (15)
              Lval_Opassign_Stmt (15)
                LVal (15)
                  IDENTIFIER a
                  ArrayExps (15)
                IntConst (15)
                  CONSTANTINTD: 4
              BlockItems (16)
                Return_Stmt (16)
                  LVal_EXP (16)
                    LVal (16)
                      IDENTIFIER a
                      ArrayExps (16)
      CompUnits (19)
        FuncDef (19)
          NOFParam (19)
          Block (20)
            BlockItems (20)
              VarDecl (20)
                IDENTIFIER a
              BlockItems (22)
                Block_Stmt (22)
                  Block (22)
                    BlockItems (22)
                      VarDecl (22)
                        IDENTIFIER b
                      BlockItems (23)
                        Lval_Opassign_Stmt (23)
                          LVal (23)
                            IDENTIFIER b
                            ArrayExps (23)
                          IntConst (23)
                            CONSTANTINTD: 8
                        BlockItems (24)
                          Lval_Opassign_Stmt (24)
                            LVal (24)
                              IDENTIFIER a
                              ArrayExps (24)
                            LVal_EXP (24)
                              LVal (24)
                                IDENTIFIER b
                                ArrayExps (24)
                BlockItems (27)
                  Block_Stmt (27)
                    Block (27)
                      BlockItems (27)
                        VarDecl (27)
                          IDENTIFIER b
                        BlockItems (28)
                          Lval_Opassign_Stmt (28)
                            LVal (28)
                              IDENTIFIER b
                              ArrayExps (28)
                            IntConst (28)
                              CONSTANTINTD: 16
                          BlockItems (29)
                            Lval_Opassign_Stmt (29)
                              LVal (29)
                                IDENTIFIER a
                                ArrayExps (29)
                              PLUSExp (29)
                                LVal_EXP (29)
                                  LVal (29)
                                    IDENTIFIER a
                                    ArrayExps (29)
                                LVal_EXP (29)
                                  LVal (29)
                                    IDENTIFIER b
                                    ArrayExps (29)
                  BlockItems (31)
                    Return_Stmt (31)
                      LVal_EXP (31)
                        LVal (31)
                          IDENTIFIER a
                          ArrayExps (31)
        CompUnits (34)
          FuncDef (34)
            NOFParam (34)
            Block (35)
              BlockItems (35)
                VarDecl (35)
                  IDENTIFIER a
                BlockItems (36)
                  VarDecl (36)
                    IDENTIFIER b
                  BlockItems (37)
                    VarDecl (37)
                      IDENTIFIER c
                    BlockItems (38)
                      Lval_Opassign_Stmt (38)
                        LVal (38)
                          IDENTIFIER a
                          ArrayExps (38)
                        IntConst (38)
                          CONSTANTINTD: 32
                      BlockItems (39)
                        Lval_Opassign_Stmt (39)
                          LVal (39)
                            IDENTIFIER b
                            ArrayExps (39)
                          IntConst (39)
                            CONSTANTINTD: 32
                        BlockItems (40)
                          Lval_Opassign_Stmt (40)
                            LVal (40)
                              IDENTIFIER c
                              ArrayExps (40)
                            IntConst (40)
                              CONSTANTINTD: 32
                          BlockItems (42)
                            Return_Stmt (42)
                              PLUSExp (42)
                                PLUSExp (42)
                                  PLUSExp (42)
                                    PLUSExp (42)
                                      PLUSExp (42)
                                        PLUSExp (42)
                                          funcall (42)
                                            IDENTIFIER func1
                                          funcall (42)
                                            IDENTIFIER func2
                                        funcall (42)
                                          IDENTIFIER func3
                                      funcall (42)
                                        IDENTIFIER func4
                                    LVal_EXP (43)
                                      LVal (43)
                                        IDENTIFIER a
                                        ArrayExps (43)
                                  LVal_EXP (43)
                                    LVal (43)
                                      IDENTIFIER b
                                      ArrayExps (43)
                                LVal_EXP (43)
                                  LVal (43)
                                    IDENTIFIER c
                                    ArrayExps (43)


===========================================================
Global
ID             category       type           depictor
               
func1          Function       TYPEINTEGER    NOT NULL       
func2          Function       TYPEINTEGER    NOT NULL       
func3          Function       TYPEINTEGER    NOT NULL       
func4          Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:func1
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:func1
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
===========================================================
Formal:func2
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:func2
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
===========================================================
Formal:func3
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:func3
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
===========================================================
Formal:func4
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:func4
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
               Block          BLOCKStmt      NOT NULL       
===========================================================
Local:block
ID             category       type           depictor
              
b              Variable       TYPEINTEGER    NULL           
===========================================================
Local:block
ID             category       type           depictor
              
b              Variable       TYPEINTEGER    NULL           
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:main
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
c              Variable       TYPEINTEGER    NULL           
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   1)	FUNCTION func1 :
  2  (at line   3)	_t28 := #1
  3  (at line   3)	 := _t28
  4  (at line   4)	_t27 := 
  5  (at line   4)	RETURN _t27

  6  (at line   7)	FUNCTION func2 :
  7  (at line   9)	_t26 := #2
  8  (at line   9)	 := _t26
  9  (at line  10)	_t25 := 
 10  (at line  10)	RETURN _t25

 11  (at line  13)	FUNCTION func3 :
 12  (at line  15)	_t24 := #4
 13  (at line  15)	 := _t24
 14  (at line  16)	_t23 := 
 15  (at line  16)	RETURN _t23

 16  (at line  19)	FUNCTION func4 :
 17  (at line  23)	_t22 := #8
 18  (at line  23)	 := _t22
 19  (at line  24)	_t21 := 
 20  (at line  24)	 := _t21
 21  (at line  28)	_t20 := #16
 22  (at line  28)	 := _t20
 23  (at line  29)	_t18 := 
 24  (at line  29)	_t19 := 
 25  (at line  29)	_t17 := _t18 + _t19
 26  (at line  29)	 := _t17
 27  (at line  31)	_t16 := 
 28  (at line  31)	RETURN _t16

 29  (at line  34)	FUNCTION main :
 30  (at line  38)	_t15 := #32
 31  (at line  38)	 := _t15
 32  (at line  39)	_t14 := #32
 33  (at line  39)	 := _t14
 34  (at line  40)	_t13 := #32
 35  (at line  40)	 := _t13
 36  (at line  42)	_t11 := CALL func1
 37  (at line  42)	_t12 := CALL func2
 38  (at line  42)	_t9 := _t11 + _t12
 39  (at line  42)	_t10 := CALL func3
 40  (at line  42)	_t7 := _t9 + _t10
 41  (at line  42)	_t8 := CALL func4
 42  (at line  42)	_t5 := _t7 + _t8
 43  (at line  43)	_t6 := 
 44  (at line  42)	_t3 := _t5 + _t6
 45  (at line  43)	_t4 := 
 46  Segmentation fault (core dumped)
