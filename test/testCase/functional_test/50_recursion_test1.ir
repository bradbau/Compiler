<int>
<id,fact>
<(>
<int>
<id,n>
<)>
<{>
<if>
<(>
<id,n>
<==>
Lval
<into>
ExpNumber:0
<)>
<{>
<return>
<intd>
ExpNumber:0
<;>
<}>
<int>
<id,nn>
<;>
<id,nn>
<=>
Lval
<id,n>
<->
Lval
<intd>
ExpNumber:0
<;>
stmt1
<return>
<(>
<id,n>
<*>
Lval
<id,fact>
<(>
<id,nn>
<)>
Lval
<)>
<;>
<}>
<int>
<id,main>
<(>
<)>
<{>
<int>
<id,n>
<;>
<id,n>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<return>
<id,fact>
<(>
<id,n>
<)>
Lval
<;>
<}>
CompUnits (1)
  FuncDef (1)
    FuncFParam (1)
    Block (2)
      BlockItems (2)
        IF_Stmt (2)
          Cond (2)
            OPEQUAL (2)
              LVal_EXP (2)
                LVal (2)
                  IDENTIFIER n
                  ArrayExps (2)
              IntConst (2)
                CONSTANTOCT: 0
          Block_Stmt (3)
            Block (3)
              BlockItems (3)
                Return_Stmt (3)
                  IntConst (3)
                    CONSTANTINTD: 1
        BlockItems (5)
          VarDecl (5)
            IDENTIFIER nn
          BlockItems (6)
            Lval_Opassign_Stmt (6)
              LVal (6)
                IDENTIFIER nn
                ArrayExps (6)
              MINUSExp (6)
                LVal_EXP (6)
                  LVal (6)
                    IDENTIFIER n
                    ArrayExps (6)
                IntConst (6)
                  CONSTANTINTD: 1
            BlockItems (7)
              Return_Stmt (7)
                (Exp) (7)
                  MulExp (7)
                    LVal_EXP (7)
                      LVal (7)
                        IDENTIFIER n
                        ArrayExps (7)
                    funcall (7)
                      IDENTIFIER fact
                      FuncRParams (7)
                        LVal_EXP (7)
                          LVal (7)
                            IDENTIFIER nn
                            ArrayExps (7)
  CompUnits (10)
    FuncDef (10)
      NOFParam (10)
      Block (11)
        BlockItems (11)
          VarDecl (11)
            IDENTIFIER n
          BlockItems (12)
            Lval_Opassign_Stmt (12)
              LVal (12)
                IDENTIFIER n
                ArrayExps (12)
              IntConst (12)
                CONSTANTINTD: 4
            BlockItems (13)
              Return_Stmt (13)
                funcall (13)
                  IDENTIFIER fact
                  FuncRParams (13)
                    LVal_EXP (13)
                      LVal (13)
                        IDENTIFIER n
                        ArrayExps (13)


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
fact           Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:fact
ID             category       type           depictor
              
n              Variable       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Local:fact
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
nn             Variable       TYPEINTEGER    NULL           
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
n              Variable       TYPEINTEGER    NULL           
===========================================================
789
789
123
789
789
123
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
123
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
456
789
789
789
789
456
789
789
456
789
789
456

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   1)	FUNCTION fact :
  2  (at line   1)	PARAM n
  3  (at line   2)	_t0 := n
  4  (at line   2)	_t3 := #0
  5  (at line   2)	IF _t0 = _t3 GOTO label0
  6  (at line   2)	GOTO label1
  7  (at line   2)	LABEL label0 :
  8  (at line   3)	_t4 := #1
  9  (at line   3)	RETURN _t4
 10  (at line   2)	LABEL label1 :
 11  (at line   6)	_t6 := n
 12  (at line   6)	_t7 := #1
 13  (at line   6)	_t5 := _t6 - _t7
 14  (at line   6)	nn := _t5
 15  (at line   7)	_t10 := n
 16  (at line   7)	_t12 := nn
 17  (at line   7)	ARG _t12
 18  (at line   7)	_t11 := CALL fact
 19  (at line   7)	_t9 := _t10 * _t11
 20  (at line   7)	_t8 := _t9
 21  (at line   7)	RETURN _t8

 22  (at line  10)	FUNCTION main :
 23  (at line  12)	_t13 := #4
 24  (at line  12)	n := _t13
 25  (at line  13)	_t15 := n
 26  (at line  13)	ARG _t15
 27  (at line  13)	_t14 := CALL fact
 28  (at line  13)	RETURN _t14


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
fact           Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:fact
ID             category       type           depictor
              
n              Variable       TYPEINTEGER    NOT NULL       
scope type is wrong
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
scope type is wrong
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
Variable offset count+4 :nn
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t0
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t3
Variable offset count+4 :_t4
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t5
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t6
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t7
Variable offset count+4 :_t8
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t9
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t10
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t11
scope type not local in functiondf
scopeprev:1
Variable offset count+4 :_t12
tac type ASSIGN
userreg0contains0x243c7f0
userreg1contains0
userreg2contains0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x2441d00
userreg1contains0
userreg2contains0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
findregister: insldr rd=1,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ASSIGN
 assign 0 to tegisteruserreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
2
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
tac type IFEQ
userreg0contains0x2441d00
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
tac type GOTO
Goto string B L1

tac type LABELDF
L0:

tac type ASSIGN
 assign 1 to tegisteruserreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
3
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0x2442730
tac type RETURN
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0x2442730
tac type ARG
tac type LABELDF
L1:

tac type ASSIGN
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0x2442730
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x2441d00
userreg1contains0x243c7f0
tac type ASSIGN
 assign 1 to tegisteruserreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0x2442730
userreg4contains0x24429b0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
5
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0x2442730
userreg4contains0x24429b0
userreg5contains0x2442a60
tac type SUB
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0x2442730
userreg4contains0x24429b0
userreg5contains0x2442a60
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0x2442730
userreg4contains0x24429b0
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0x2442730
userreg4contains0x24429b0
userreg5contains0x2442a60
tac type ASSIGN
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0x2442730
userreg4contains0x24429b0
userreg5contains0x2442a60
userreg6contains0x2442900
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0x2442730
userreg4contains0x24429b0
userreg5contains0x2442a60
userreg6contains0x2442900
tac type ASSIGN
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0x2442730
userreg4contains0x24429b0
userreg5contains0x2442a60
userreg6contains0x2442900
userreg8contains0x243d740
userreg9contains0
userreg10contains0
userreg0contains0x2441d00
userreg1contains0x243c7f0
tac type ASSIGN
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0x2442730
userreg4contains0x24429b0
userreg5contains0x2442a60
userreg6contains0x2442900
userreg8contains0x243d740
userreg9contains0x2442eb0
userreg10contains0
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0x2442730
userreg4contains0x24429b0
userreg5contains0x2442a60
userreg6contains0x2442900
userreg8contains0x243d740
tac type ARG
tac type CALLASSIGN
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0x2442730
userreg4contains0x24429b0
userreg5contains0x2442a60
userreg6contains0x2442900
userreg8contains0x243d740
userreg9contains0x2442eb0
userreg10contains0x24430d0
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0x2442730
userreg4contains0x24429b0
userreg5contains0x2442a60
userreg6contains0x2442900
userreg8contains0x243d740
userreg9contains0x2442eb0
userreg10contains0x24430d0
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type MUL
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0x2442730
userreg4contains0x24429b0
userreg5contains0x2442a60
userreg6contains0x2442900
userreg8contains0x243d740
userreg9contains0x2442eb0
userreg10contains0x2442f60
Store Register in getregisterNoLoad variable
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0x2442730
userreg4contains0x24429b0
userreg5contains0x2442a60
userreg6contains0x2442900
userreg8contains0x243d740
userreg9contains0x2442eb0
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0x2442730
userreg4contains0x24429b0
userreg5contains0x2442a60
userreg6contains0x2442900
userreg8contains0x243d740
userreg9contains0x2442eb0
userreg10contains0x2442da0
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ASSIGN
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0x2442730
userreg4contains0x24429b0
userreg5contains0x2442a60
userreg6contains0x2442900
userreg8contains0x243d740
userreg9contains0x2442eb0
userreg10contains0x2442f60
Store Register in getregisterNoLoad variable
userreg0contains0x2441d00
userreg1contains0x243c7f0
userreg2contains0x2441f00
userreg3contains0x2442730
userreg4contains0x24429b0
userreg5contains0x2442a60
userreg6contains0x2442900
userreg8contains0x243d740
userreg9contains0x2442eb0
userreg10contains0x2442cf0
register:-1
terminate called after throwing an instance of 'std::runtime_error'
  what():  no variable in this register
Aborted (core dumped)
