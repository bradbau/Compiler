arg S
--(end of buffer or a NUL)
--accepting rule at line 74 ("// Count how many alpha in a string
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("string")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("500")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("temp")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("count")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("count")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
-o<int>
<id,main>
<(>
<)>
<{>
<int>
<id,string>
<[>
<intd>
ExpNumber:0
<]>
<;>
<int>
<id,temp>
<;>
<int>
<id,i>
<;>
<int>
<id,count>
<;>
<id,count>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("temp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<id,temp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("temp")
--accepting rule at line 114 (" ")
--accepting rule at line 94 ("!=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,temp>
<!=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("temp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,temp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("getch")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 101 ("if")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("temp")
--accepting rule at line 114 (" ")
--accepting rule at line 95 (">")
Lval
<id,getch>
<(>
<)>
<;>
stmt1
<if>
<(>
<id,temp>
<>>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("40")
--accepting rule at line 114 (" ")
--accepting rule at line 90 ("&&")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("temp")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<&&>
<id,temp>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("91")
--accepting rule at line 114 (" ")
--accepting rule at line 91 ("||")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("temp")
--accepting rule at line 114 (" ")
--accepting rule at line 95 (">")
Lval
<intd>
ExpNumber:0
<||>
<id,temp>
<>>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("96")
--accepting rule at line 114 (" ")
--accepting rule at line 90 ("&&")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("temp")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<&&>
<id,temp>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("123")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("count")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,count>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("count")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,count>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,i>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putint")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("count")
--accepting rule at line 81 (")")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,putint>
<(>
<id,count>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Lval
<;>
<return>
<into>
ExpNumber:0
<;>
<}>
CompUnits (2)
  FuncDef (2)
    NOFParam (2)
    Block (3)
      BlockItems (3)
        VarDecl (3)
          ArrayDec: demmision=0
            IDENTIFIER string
        BlockItems (4)
          VarDecl (4)
            IDENTIFIER temp
          BlockItems (5)
            VarDecl (5)
              IDENTIFIER i
            BlockItems (6)
              VarDecl (6)
                IDENTIFIER count
              BlockItems (7)
                Lval_Opassign_Stmt (7)
                  LVal (7)
                    IDENTIFIER count
                    ArrayExps (7)
                  IntConst (7)
                    CONSTANTOCT: 0
                BlockItems (8)
                  Lval_Opassign_Stmt (8)
                    LVal (8)
                      IDENTIFIER i
                      ArrayExps (8)
                    IntConst (8)
                      CONSTANTOCT: 0
                  BlockItems (9)
                    Lval_Opassign_Stmt (9)
                      LVal (9)
                        IDENTIFIER temp
                        ArrayExps (9)
                      IntConst (9)
                        CONSTANTOCT: 0
                    BlockItems (10)
                      While_Stmt (10)
                        Cond (10)
                          OPNOTEQUAL (10)
                            LVal_EXP (10)
                              LVal (10)
                                IDENTIFIER temp
                                ArrayExps (10)
                            IntConst (10)
                              CONSTANTINTD: 10
                        Block_Stmt (11)
                          Block (11)
                            BlockItems (11)
                              Lval_Opassign_Stmt (11)
                                LVal (11)
                                  IDENTIFIER temp
                                  ArrayExps (11)
                                funcall (11)
                                  IDENTIFIER getch
                              BlockItems (12)
                                IF_Stmt (12)
                                  Cond_Or (12)
                                    Cond_And (12)
                                      Cond (12)
                                        OPGREAT (12)
                                          LVal_EXP (12)
                                            LVal (12)
                                              IDENTIFIER temp
                                              ArrayExps (12)
                                          IntConst (12)
                                            CONSTANTINTD: 40
                                      Cond (12)
                                        OPLIGHT (12)
                                          LVal_EXP (12)
                                            LVal (12)
                                              IDENTIFIER temp
                                              ArrayExps (12)
                                          IntConst (12)
                                            CONSTANTINTD: 91
                                    Cond_And (12)
                                      Cond (12)
                                        OPGREAT (12)
                                          LVal_EXP (12)
                                            LVal (12)
                                              IDENTIFIER temp
                                              ArrayExps (12)
                                          IntConst (12)
                                            CONSTANTINTD: 96
                                      Cond (12)
                                        OPLIGHT (12)
                                          LVal_EXP (12)
                                            LVal (12)
                                              IDENTIFIER temp
                                              ArrayExps (12)
                                          IntConst (12)
                                            CONSTANTINTD: 123
                                  Block_Stmt (13)
                                    Block (13)
                                      BlockItems (13)
                                        Lval_Opassign_Stmt (13)
                                          LVal (13)
                                            IDENTIFIER count
                                            ArrayExps (13)
                                          PLUSExp (13)
                                            LVal_EXP (13)
                                              LVal (13)
                                                IDENTIFIER count
                                                ArrayExps (13)
                                            IntConst (13)
                                              CONSTANTINTD: 1
                                BlockItems (15)
                                  Lval_Opassign_Stmt (15)
                                    LVal (15)
                                      IDENTIFIER i
                                      ArrayExps (15)
                                    PLUSExp (15)
                                      LVal_EXP (15)
                                        LVal (15)
                                          IDENTIFIER i
                                          ArrayExps (15)
                                      IntConst (15)
                                        CONSTANTINTD: 1
                      BlockItems (17)
                        Exp_Stmt (17)
                          funcall (17)
                            IDENTIFIER putint
                            FuncRParams (17)
                              LVal_EXP (17)
                                LVal (17)
                                  IDENTIFIER count
                                  ArrayExps (17)
                        BlockItems (18)
                          Return_Stmt (18)
                            IntConst (18)
                              CONSTANTOCT: 0


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
string         Array          TYPEINTEGER    ----------> dim=1
temp           Variable       TYPEINTEGER    NULL           
i              Variable       TYPEINTEGER    NULL           
count          Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
===========================================================
789
789
789
456
789
789
789
456
789
789
789
456
789
789
789
789
456
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
terminate called after throwing an instance of 'std::runtime_error'
  what():  TraverseScopeStack no result
Aborted (core dumped)
