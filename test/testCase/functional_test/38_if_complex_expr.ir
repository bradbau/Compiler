--(end of buffer or a NUL)
--accepting rule at line 74 ("// Use complex expression in if structure
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("result")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("5")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("5")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("result")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 101 ("if")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 86 ("*")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 114 (" ")
--accepting rule at line 87 ("/")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 114 (" ")
--accepting rule at line 91 ("||")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 94 ("!=")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
<int>
<id,main>
<(>
<)>
<{>
<int>
<id,a>
<;>
<int>
<id,b>
<;>
<int>
<id,c>
<;>
<int>
<id,d>
<;>
<int>
<id,result>
<;>
<id,a>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,b>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,c>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,d>
<=>
Lval
<->
<intd>
ExpNumber:0
<;>
stmt1
<id,result>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<if>
<(>
<(>
<id,d>
<*>
Lval
<intd>
ExpNumber:0
</>
<intd>
ExpNumber:0
<)>
<<>
<into>
ExpNumber:0
<||>
<(>
<id,a>
<->
Lval
<id,b>
<)>
Lval
<!=>
<into>
ExpNumber--accepting rule at line 114 (" ")
--accepting rule at line 90 ("&&")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("3")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 88 ("%")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 114 (" ")
--accepting rule at line 94 ("!=")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putint")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("result")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 101 ("if")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 88 ("%")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("67")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 114 (" ")
--accepting rule at line 91 ("||")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 94 ("!=")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 114 (" ")
--accepting rule at line 90 ("&&")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 88 ("%")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 114 (" ")
--accepting rule at line 94 ("!=")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("result")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("4")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putint")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("result")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
:0
<&&>
<(>
<id,c>
<+>
Lval
<intd>
ExpNumber:0
<)>
<%>
<intd>
ExpNumber:0
<!=>
<into>
ExpNumber:0
<)>
<{>
<id,putint>
<(>
<id,result>
<)>
Lval
<;>
<}>
<if>
<(>
<(>
<id,d>
<%>
Lval
<intd>
ExpNumber:0
<+>
<intd>
ExpNumber:0
<)>
<<>
<into>
ExpNumber:0
<||>
<(>
<id,a>
<->
Lval
<id,b>
<)>
Lval
<!=>
<into>
ExpNumber:0
<&&>
<(>
<id,c>
<+>
Lval
<intd>
ExpNumber:0
<)>
<%>
<intd>
ExpNumber:0
<!=>
<into>
ExpNumber:0
<)>
<{>
<id,result>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,putint>
<(>
<id,result>
<)>
Lval
<;>
<}>
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
<return>
<into>
ExpNumber:0
<;>
<}>
CompUnits (2)
  FuncDef (2)
    FuncFParam (2)
    Block (3)
      BlockItems (3)
        VarDecl (3)
          IDENTIFIER a
        BlockItems (4)
          VarDecl (4)
            IDENTIFIER b
          BlockItems (5)
            VarDecl (5)
              IDENTIFIER c
            BlockItems (6)
              VarDecl (6)
                IDENTIFIER d
              BlockItems (7)
                VarDecl (7)
                  IDENTIFIER result
                BlockItems (8)
                  Lval_Opassign_Stmt (8)
                    LVal (8)
                      IDENTIFIER a
                      ArrayExps (8)
                    IntConst (8)
                      CONSTANTINTD: 5
                  BlockItems (9)
                    Lval_Opassign_Stmt (9)
                      LVal (9)
                        IDENTIFIER b
                        ArrayExps (9)
                      IntConst (9)
                        CONSTANTINTD: 5
                    BlockItems (10)
                      Lval_Opassign_Stmt (10)
                        LVal (10)
                          IDENTIFIER c
                          ArrayExps (10)
                        IntConst (10)
                          CONSTANTINTD: 1
                      BlockItems (11)
                        Lval_Opassign_Stmt (11)
                          LVal (11)
                            IDENTIFIER d
                            ArrayExps (11)
                          OPMINUS_Exp (11)
                            IntConst (11)
                              CONSTANTINTD: 2
                        BlockItems (12)
                          Lval_Opassign_Stmt (12)
                            LVal (12)
                              IDENTIFIER result
                              ArrayExps (12)
                            IntConst (12)
                              CONSTANTINTD: 2
                          BlockItems (13)
                            IF_Stmt (13)
                              Cond_Or (13)
                                Cond (13)
                                  OPLIGHT (13)
                                    (Exp) (13)
                                      DIVIDEExp (13)
                                        MulExp (13)
                                          LVal_EXP (13)
                                            LVal (13)
                                              IDENTIFIER d
                                              ArrayExps (13)
                                          IntConst (13)
                                            CONSTANTINTD: 1
                                        IntConst (13)
                                          CONSTANTINTD: 2
                                    IntConst (13)
                                      CONSTANTOCT: 0
                                Cond_And (13)
                                  Cond (13)
                                    OPNOTEQUAL (13)
                                      (Exp) (13)
                                        MINUSExp (13)
                                          LVal_EXP (13)
                                            LVal (13)
                                              IDENTIFIER a
                                              ArrayExps (13)
                                          LVal_EXP (13)
                                            LVal (13)
                                              IDENTIFIER b
                                              ArrayExps (13)
                                      IntConst (13)
                                        CONSTANTOCT: 0
                                  Cond (13)
                                    OPNOTEQUAL (13)
                                      MODExp (13)
                                        (Exp) (13)
                                          PLUSExp (13)
                                            LVal_EXP (13)
                                              LVal (13)
                                                IDENTIFIER c
                                                ArrayExps (13)
                                            IntConst (13)
                                              CONSTANTINTD: 3
                                        IntConst (13)
                                          CONSTANTINTD: 2
                                      IntConst (13)
                                        CONSTANTOCT: 0
                              Block_Stmt (14)
                                Block (14)
                                  BlockItems (14)
                                    Exp_Stmt (14)
                                      funcall (14)
                                        IDENTIFIER putint
                                        FuncRParams (14)
                                          LVal_EXP (14)
                                            LVal (14)
                                              IDENTIFIER result
                                              ArrayExps (14)
                            BlockItems (16)
                              IF_Stmt (16)
                                Cond_Or (16)
                                  Cond (16)
                                    OPLIGHT (16)
                                      (Exp) (16)
                                        PLUSExp (16)
                                          MODExp (16)
                                            LVal_EXP (16)
                                              LVal (16)
                                                IDENTIFIER d
                                                ArrayExps (16)
                                            IntConst (16)
                                              CONSTANTINTD: 2
                                          IntConst (16)
                                            CONSTANTINTD: 67
                                      IntConst (16)
                                        CONSTANTOCT: 0
                                  Cond_And (16)
                                    Cond (16)
                                      OPNOTEQUAL (16)
                                        (Exp) (16)
                                          MINUSExp (16)
                                            LVal_EXP (16)
                                              LVal (16)
                                                IDENTIFIER a
                                                ArrayExps (16)
                                            LVal_EXP (16)
                                              LVal (16)
                                                IDENTIFIER b
                                                ArrayExps (16)
                                        IntConst (16)
                                          CONSTANTOCT: 0
                                    Cond (16)
                                      OPNOTEQUAL (16)
                                        MODExp (16)
                                          (Exp) (16)
                                            PLUSExp (16)
                                              LVal_EXP (16)
                                                LVal (16)
                                                  IDENTIFIER c
                                                  ArrayExps (16)
                                              IntConst (16)
                                                CONSTANTINTD: 2
                                          IntConst (16)
                                            CONSTANTINTD: 2
                                        IntConst (16)
                                          CONSTANTOCT: 0
                                Block_Stmt (17)
                                  Block (17)
                                    BlockItems (17)
                                      Lval_Opassign_Stmt (17)
                                        LVal (17)
                                          IDENTIFIER result
                                          ArrayExps (17)
                                        IntConst (17)
                                          CONSTANTINTD: 4
                                      BlockItems (18)
                                        Exp_Stmt (18)
                                          funcall (18)
                                            IDENTIFIER putint
                                            FuncRParams (18)
                                              LVal_EXP (18)
                                                LVal (18)
                                                  IDENTIFIER result
                                                  ArrayExps (18)
                              BlockItems (20)
                                Return_Stmt (20)
                                  IntConst (20)
                                    CONSTANTOCT: 0


===========================================================
Global
ID             category       type           depictor
               
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:main
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
c              Variable       TYPEINTEGER    NULL           
d              Variable       TYPEINTEGER    NULL           
result         Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
Segmentation fault (core dumped)
