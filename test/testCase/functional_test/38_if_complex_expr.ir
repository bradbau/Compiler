--(end of buffer or a NUL)
--accepting rule at line 74 ("// Use complex expression in if structure
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("result")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("5")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("5")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("result")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 101 ("if")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 86 ("*")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 114 (" ")
--accepting rule at line 87 ("/")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 114 (" ")
--accepting rule at line 91 ("||")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 94 ("!=")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
<int>
<id,main>
<(>
<)>
<{>
<int>
<id,a>
<;>
<int>
<id,b>
<;>
<int>
<id,c>
<;>
<int>
<id,d>
<;>
<int>
<id,result>
<;>
<id,a>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,b>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,c>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,d>
<=>
Lval
<->
<intd>
ExpNumber:0
<;>
stmt1
<id,result>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<if>
<(>
<(>
<id,d>
<*>
Lval
<intd>
ExpNumber:0
</>
<intd>
ExpNumber:0
<)>
<<>
<into>
ExpNumber:0
<||>
<(>
<id,a>
<->
Lval
<id,b>
<)>
Lval
<!=>
<into>
ExpNumber--accepting rule at line 114 (" ")
--accepting rule at line 90 ("&&")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("3")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 88 ("%")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 114 (" ")
--accepting rule at line 94 ("!=")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putint")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("result")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 101 ("if")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 88 ("%")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("67")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 114 (" ")
--accepting rule at line 91 ("||")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 94 ("!=")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 114 (" ")
--accepting rule at line 90 ("&&")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 88 ("%")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 114 (" ")
--accepting rule at line 94 ("!=")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("result")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("4")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putint")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("result")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
:0
<&&>
<(>
<id,c>
<+>
Lval
<intd>
ExpNumber:0
<)>
<%>
<intd>
ExpNumber:0
<!=>
<into>
ExpNumber:0
<)>
<{>
<id,putint>
<(>
<id,result>
<)>
Lval
<;>
<}>
<if>
<(>
<(>
<id,d>
<%>
Lval
<intd>
ExpNumber:0
<+>
<intd>
ExpNumber:0
<)>
<<>
<into>
ExpNumber:0
<||>
<(>
<id,a>
<->
Lval
<id,b>
<)>
Lval
<!=>
<into>
ExpNumber:0
<&&>
<(>
<id,c>
<+>
Lval
<intd>
ExpNumber:0
<)>
<%>
<intd>
ExpNumber:0
<!=>
<into>
ExpNumber:0
<)>
<{>
<id,result>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,putint>
<(>
<id,result>
<)>
Lval
<;>
<}>
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
<return>
<into>
ExpNumber:0
<;>
<}>
CompUnits (2)
  FuncDef (2)
    NOFParam (2)
    Block (3)
      BlockItems (3)
        VarDecl (3)
          IDENTIFIER a
        BlockItems (4)
          VarDecl (4)
            IDENTIFIER b
          BlockItems (5)
            VarDecl (5)
              IDENTIFIER c
            BlockItems (6)
              VarDecl (6)
                IDENTIFIER d
              BlockItems (7)
                VarDecl (7)
                  IDENTIFIER result
                BlockItems (8)
                  Lval_Opassign_Stmt (8)
                    LVal (8)
                      IDENTIFIER a
                      ArrayExps (8)
                    IntConst (8)
                      CONSTANTINTD: 5
                  BlockItems (9)
                    Lval_Opassign_Stmt (9)
                      LVal (9)
                        IDENTIFIER b
                        ArrayExps (9)
                      IntConst (9)
                        CONSTANTINTD: 5
                    BlockItems (10)
                      Lval_Opassign_Stmt (10)
                        LVal (10)
                          IDENTIFIER c
                          ArrayExps (10)
                        IntConst (10)
                          CONSTANTINTD: 1
                      BlockItems (11)
                        Lval_Opassign_Stmt (11)
                          LVal (11)
                            IDENTIFIER d
                            ArrayExps (11)
                          OPMINUS_Exp (11)
                            IntConst (11)
                              CONSTANTINTD: 2
                        BlockItems (12)
                          Lval_Opassign_Stmt (12)
                            LVal (12)
                              IDENTIFIER result
                              ArrayExps (12)
                            IntConst (12)
                              CONSTANTINTD: 2
                          BlockItems (13)
                            IF_Stmt (13)
                              Cond_Or (13)
                                Cond (13)
                                  OPLIGHT (13)
                                    (Exp) (13)
                                      DIVIDEExp (13)
                                        MulExp (13)
                                          LVal_EXP (13)
                                            LVal (13)
                                              IDENTIFIER d
                                              ArrayExps (13)
                                          IntConst (13)
                                            CONSTANTINTD: 1
                                        IntConst (13)
                                          CONSTANTINTD: 2
                                    IntConst (13)
                                      CONSTANTOCT: 0
                                Cond_And (13)
                                  Cond (13)
                                    OPNOTEQUAL (13)
                                      (Exp) (13)
                                        MINUSExp (13)
                                          LVal_EXP (13)
                                            LVal (13)
                                              IDENTIFIER a
                                              ArrayExps (13)
                                          LVal_EXP (13)
                                            LVal (13)
                                              IDENTIFIER b
                                              ArrayExps (13)
                                      IntConst (13)
                                        CONSTANTOCT: 0
                                  Cond (13)
                                    OPNOTEQUAL (13)
                                      MODExp (13)
                                        (Exp) (13)
                                          PLUSExp (13)
                                            LVal_EXP (13)
                                              LVal (13)
                                                IDENTIFIER c
                                                ArrayExps (13)
                                            IntConst (13)
                                              CONSTANTINTD: 3
                                        IntConst (13)
                                          CONSTANTINTD: 2
                                      IntConst (13)
                                        CONSTANTOCT: 0
                              Block_Stmt (14)
                                Block (14)
                                  BlockItems (14)
                                    Exp_Stmt (14)
                                      funcall (14)
                                        IDENTIFIER putint
                                        FuncRParams (14)
                                          LVal_EXP (14)
                                            LVal (14)
                                              IDENTIFIER result
                                              ArrayExps (14)
                            BlockItems (16)
                              IF_Stmt (16)
                                Cond_Or (16)
                                  Cond (16)
                                    OPLIGHT (16)
                                      (Exp) (16)
                                        PLUSExp (16)
                                          MODExp (16)
                                            LVal_EXP (16)
                                              LVal (16)
                                                IDENTIFIER d
                                                ArrayExps (16)
                                            IntConst (16)
                                              CONSTANTINTD: 2
                                          IntConst (16)
                                            CONSTANTINTD: 67
                                      IntConst (16)
                                        CONSTANTOCT: 0
                                  Cond_And (16)
                                    Cond (16)
                                      OPNOTEQUAL (16)
                                        (Exp) (16)
                                          MINUSExp (16)
                                            LVal_EXP (16)
                                              LVal (16)
                                                IDENTIFIER a
                                                ArrayExps (16)
                                            LVal_EXP (16)
                                              LVal (16)
                                                IDENTIFIER b
                                                ArrayExps (16)
                                        IntConst (16)
                                          CONSTANTOCT: 0
                                    Cond (16)
                                      OPNOTEQUAL (16)
                                        MODExp (16)
                                          (Exp) (16)
                                            PLUSExp (16)
                                              LVal_EXP (16)
                                                LVal (16)
                                                  IDENTIFIER c
                                                  ArrayExps (16)
                                              IntConst (16)
                                                CONSTANTINTD: 2
                                          IntConst (16)
                                            CONSTANTINTD: 2
                                        IntConst (16)
                                          CONSTANTOCT: 0
                                Block_Stmt (17)
                                  Block (17)
                                    BlockItems (17)
                                      Lval_Opassign_Stmt (17)
                                        LVal (17)
                                          IDENTIFIER result
                                          ArrayExps (17)
                                        IntConst (17)
                                          CONSTANTINTD: 4
                                      BlockItems (18)
                                        Exp_Stmt (18)
                                          funcall (18)
                                            IDENTIFIER putint
                                            FuncRParams (18)
                                              LVal_EXP (18)
                                                LVal (18)
                                                  IDENTIFIER result
                                                  ArrayExps (18)
                              BlockItems (20)
                                Return_Stmt (20)
                                  IntConst (20)
                                    CONSTANTOCT: 0


===========================================================
Global
ID             category       type           depictor
               
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:main
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
c              Variable       TYPEINTEGER    NULL           
d              Variable       TYPEINTEGER    NULL           
result         Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   2)	FUNCTION main :
  2  (at line   8)	_t59 := #5
  3  (at line   8)	 := _t59
  4  (at line   9)	_t58 := #5
  5  (at line   9)	 := _t58
  6  (at line  10)	_t57 := #1
  7  (at line  10)	 := _t57
  8  (at line  11)	_t56 := #2
  9  (at line  11)	_t55 := #0 - _t56
 10  (at line  11)	 := _t55
 11  (at line  12)	_t54 := #2
 12  (at line  12)	 := _t54
 13  (at line  13)	_t34 := 
 14  (at line  13)	_t35 := #1
 15  (at line  13)	_t32 := _t34 * _t35
 16  (at line  13)	_t33 := #2
 17  (at line  13)	_t31 := _t32 / _t33
 18  (at line  13)	_t28 := _t31
 19  (at line  13)	_t36 := #0
 20  (at line  13)	IF _t28 < _t36 GOTO label4
 21  (at line  13)	GOTO label6
 22  (at line  13)	LABEL label6 :
 23  (at line  13)	_t41 := 
 24  (at line  13)	_t42 := 
 25  (at line  13)	_t40 := _t41 - _t42
 26  (at line  13)	_t37 := _t40
 27  (at line  13)	_t43 := #0
 28  (at line  13)	IF _t37 != _t43 GOTO label7
 29  (at line  13)	GOTO label5
 30  (at line  13)	LABEL label7 :
 31  (at line  13)	_t50 := 
 32  (at line  13)	_t51 := #3
 33  (at line  13)	_t49 := _t50 + _t51
 34  (at line  13)	_t47 := _t49
 35  (at line  13)	_t48 := #2
 36  (at line  13)	_t44 := _t47 % _t48
 37  (at line  13)	_t52 := #0
 38  (at line  13)	IF _t44 != _t52 GOTO label4
 39  (at line  13)	GOTO label5
 40  (at line  13)	LABEL label4 :
 41  (at line  14)	_t53 := 
 42  (at line  14)	ARG _t53
 43  (at line  14)	CALL 
 44  (at line  13)	LABEL label5 :
 45  (at line  16)	_t7 := 
 46  (at line  16)	_t8 := #2
 47  (at line  16)	_t5 := _t7 % _t8
 48  (at line  16)	_t6 := #67
 49  (at line  16)	_t4 := _t5 + _t6
 50  (at line  16)	_t1 := _t4
 51  (at line  16)	_t9 := #0
 52  (at line  16)	IF _t1 < _t9 GOTO label0
 53  (at line  16)	GOTO label2
 54  (at line  16)	LABEL label2 :
 55  (at line  16)	_t14 := 
 56  (at line  16)	_t15 := 
 57  (at line  16)	_t13 := _t14 - _t15
 58  (at line  16)	_t10 := _t13
 59  (at line  16)	_t16 := #0
 60  (at line  16)	IF _t10 != _t16 GOTO label3
 61  (at line  16)	GOTO label1
 62  (at line  16)	LABEL label3 :
 63  (at line  16)	_t23 := 
 64  (at line  16)	_t24 := #2
 65  (at line  16)	_t22 := _t23 + _t24
 66  (at line  16)	_t20 := _t22
 67  (at line  16)	_t21 := #2
 68  (at line  16)	_t17 := _t20 % _t21
 69  (at line  16)	_t25 := #0
 70  (at line  16)	IF _t17 != _t25 GOTO label0
 71  (at line  16)	GOTO label1
 72  (at line  16)	LABEL label0 :
 73  (at line  17)	_t27 := #4
 74  (at line  17)	 := _t27
 75  (at line  18)	_t26 := 
 76  (at line  18)	ARG _t26
 77  (at line  18)	CALL 
 78  (at line  16)	LABEL label1 :
 79  (at line  20)	_t0 := #0
 80  (at line  20)	RETURN _t0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
tec type ASSIGN
findregister: insldr rd=0,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tec type ASSIGN
findregister: insldr rd=1,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tec type ASSIGN
findregister: insldr rd=2,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tec type ASSIGN
findregister: insldr rd=3,r1=11,r2 offset=0,op2type=1, insefft=0
tac type SUB
compiler: ./ObjectCode/Arm.cpp:75: ARM::ARM(TACCode*, ScopeItem&): Assertion `code.dest.Type = VARIABLE' failed.
Aborted (core dumped)
