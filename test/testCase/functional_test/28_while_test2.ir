--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("FourWhile")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
<int>
<id,FourWhile>
<(>
<)>
<{>
<int>
<id,a>
<;>
<id,a>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("5")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,b>
<;>
<int>
<id,c>
<;>
<id,b>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("6")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,c>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("7")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,d>
<;>
<id,d>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,a>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("20")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,a>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,a>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("3")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,b>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,b>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,b>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 93 ("==")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,c>
<==>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("7")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,c>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,c>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,d>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("20")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,d>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,d>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("3")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,d>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,d>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,c>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,c>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,b>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,b>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<(>
<id,a>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<(>
<id,b>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 81 (")")
Lval
<id,d>
<)>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 81 (")")
Lval
<+>
<id,c>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("FourWhile")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Lval
<;>
<}>
<int>
<id,main>
<(>
<)>
<{>
<return>
<id,FourWhile>
<(>
<)>
<;>
<}>
CompUnits (1)
  FuncDef (1)
    NOFParam (1)
    Block (2)
      BlockItems (2)
        VarDecl (2)
          IDENTIFIER a
        BlockItems (3)
          Lval_Opassign_Stmt (3)
            LVal (3)
              IDENTIFIER a
              ArrayExps (3)
            IntConst (3)
              CONSTANTINTD: 5
          BlockItems (4)
            VarDecl (4)
              IDENTIFIER b
            BlockItems (5)
              VarDecl (5)
                IDENTIFIER c
              BlockItems (6)
                Lval_Opassign_Stmt (6)
                  LVal (6)
                    IDENTIFIER b
                    ArrayExps (6)
                  IntConst (6)
                    CONSTANTINTD: 6
                BlockItems (7)
                  Lval_Opassign_Stmt (7)
                    LVal (7)
                      IDENTIFIER c
                      ArrayExps (7)
                    IntConst (7)
                      CONSTANTINTD: 7
                  BlockItems (8)
                    VarDecl (8)
                      IDENTIFIER d
                    BlockItems (9)
                      Lval_Opassign_Stmt (9)
                        LVal (9)
                          IDENTIFIER d
                          ArrayExps (9)
                        IntConst (9)
                          CONSTANTINTD: 10
                      BlockItems (10)
                        While_Stmt (10)
                          Cond (10)
                            OPLIGHT (10)
                              LVal_EXP (10)
                                LVal (10)
                                  IDENTIFIER a
                                  ArrayExps (10)
                              IntConst (10)
                                CONSTANTINTD: 20
                          Block_Stmt (11)
                            Block (11)
                              BlockItems (11)
                                Lval_Opassign_Stmt (11)
                                  LVal (11)
                                    IDENTIFIER a
                                    ArrayExps (11)
                                  PLUSExp (11)
                                    LVal_EXP (11)
                                      LVal (11)
                                        IDENTIFIER a
                                        ArrayExps (11)
                                    IntConst (11)
                                      CONSTANTINTD: 3
                                BlockItems (12)
                                  While_Stmt (12)
                                    Cond (12)
                                      OPLIGHT (12)
                                        LVal_EXP (12)
                                          LVal (12)
                                            IDENTIFIER b
                                            ArrayExps (12)
                                        IntConst (12)
                                          CONSTANTINTD: 10
                                    Block_Stmt (13)
                                      Block (13)
                                        BlockItems (13)
                                          Lval_Opassign_Stmt (13)
                                            LVal (13)
                                              IDENTIFIER b
                                              ArrayExps (13)
                                            PLUSExp (13)
                                              LVal_EXP (13)
                                                LVal (13)
                                                  IDENTIFIER b
                                                  ArrayExps (13)
                                              IntConst (13)
                                                CONSTANTINTD: 1
                                          BlockItems (14)
                                            While_Stmt (14)
                                              Cond (14)
                                                OPEQUAL (14)
                                                  LVal_EXP (14)
                                                    LVal (14)
                                                      IDENTIFIER c
                                                      ArrayExps (14)
                                                  IntConst (14)
                                                    CONSTANTINTD: 7
                                              Block_Stmt (15)
                                                Block (15)
                                                  BlockItems (15)
                                                    Lval_Opassign_Stmt (15)
                                                      LVal (15)
                                                        IDENTIFIER c
                                                        ArrayExps (15)
                                                      MINUSExp (15)
                                                        LVal_EXP (15)
                                                          LVal (15)
                                                            IDENTIFIER c
                                                            ArrayExps (15)
                                                        IntConst (15)
                                                          CONSTANTINTD: 1
                                                    BlockItems (16)
                                                      While_Stmt (16)
                                                        Cond (16)
                                                          OPLIGHT (16)
                                                            LVal_EXP (16)
                                                              LVal (16)
                                                                IDENTIFIER d
                                                                ArrayExps (16)
                                                            IntConst (16)
                                                              CONSTANTINTD: 20
                                                        Block_Stmt (17)
                                                          Block (17)
                                                            BlockItems (17)
                                                              Lval_Opassign_Stmt (17)
                                                                LVal (17)
                                                                  IDENTIFIER d
                                                                  ArrayExps (17)
                                                                PLUSExp (17)
                                                                  LVal_EXP (17)
                                                                    LVal (17)
                                                                      IDENTIFIER d
                                                                      ArrayExps (17)
                                                                  IntConst (17)
                                                                    CONSTANTINTD: 3
                                                      BlockItems (19)
                                                        Lval_Opassign_Stmt (19)
                                                          LVal (19)
                                                            IDENTIFIER d
                                                            ArrayExps (19)
                                                          MINUSExp (19)
                                                            LVal_EXP (19)
                                                              LVal (19)
                                                                IDENTIFIER d
                                                                ArrayExps (19)
                                                            IntConst (19)
                                                              CONSTANTINTD: 1
                                            BlockItems (21)
                                              Lval_Opassign_Stmt (21)
                                                LVal (21)
                                                  IDENTIFIER c
                                                  ArrayExps (21)
                                                PLUSExp (21)
                                                  LVal_EXP (21)
                                                    LVal (21)
                                                      IDENTIFIER c
                                                      ArrayExps (21)
                                                  IntConst (21)
                                                    CONSTANTINTD: 1
                                  BlockItems (23)
                                    Lval_Opassign_Stmt (23)
                                      LVal (23)
                                        IDENTIFIER b
                                        ArrayExps (23)
                                      MINUSExp (23)
                                        LVal_EXP (23)
                                          LVal (23)
                                            IDENTIFIER b
                                            ArrayExps (23)
                                        IntConst (23)
                                          CONSTANTINTD: 2
                        BlockItems (26)
                          Return_Stmt (26)
                            (Exp) (26)
                              PLUSExp (26)
                                PLUSExp (26)
                                  LVal_EXP (26)
                                    LVal (26)
                                      IDENTIFIER a
                                      ArrayExps (26)
                                  (Exp) (26)
                                    PLUSExp (26)
                                      LVal_EXP (26)
                                        LVal (26)
                                          IDENTIFIER b
                                          ArrayExps (26)
                                      LVal_EXP (26)
                                        LVal (26)
                                          IDENTIFIER d
                                          ArrayExps (26)
                                LVal_EXP (26)
                                  LVal (26)
                                    IDENTIFIER c
                                    ArrayExps (26)
  CompUnits (29)
    FuncDef (29)
      NOFParam (29)
      Block (30)
        BlockItems (30)
          Return_Stmt (30)
            funcall (30)
              IDENTIFIER FourWhile


===========================================================
Global
ID             category       type           depictor
               
FourWhile      Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:FourWhile
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:FourWhile
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
c              Variable       TYPEINTEGER    NULL           
d              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
===========================================================
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   1)	FUNCTION FourWhile :
  2  (at line   3)	_t50 := #5
  3  (at line   3)	 := _t50
  4  (at line   6)	_t49 := #6
  5  (at line   6)	 := _t49
  6  (at line   7)	_t48 := #7
  7  (at line   7)	 := _t48
  8  (at line   9)	_t47 := #10
  9  (at line   9)	 := _t47
 10  (at line  10)	LABEL label0 :
 11  (at line  10)	_t10 := 
 12  (at line  10)	_t13 := #20
 13  (at line  10)	IF _t10 < _t13 GOTO label1
 14  (at line  10)	GOTO label2
 15  (at line  10)	LABEL label1 :
 16  (at line  11)	_t45 := 
 17  (at line  11)	_t46 := #3
 18  (at line  11)	_t44 := _t45 + _t46
 19  (at line  11)	 := _t44
 20  (at line  12)	LABEL label3 :
 21  (at line  12)	_t17 := 
 22  (at line  12)	_t20 := #10
 23  (at line  12)	IF _t17 < _t20 GOTO label4
 24  (at line  12)	GOTO label5
 25  (at line  12)	LABEL label4 :
 26  (at line  13)	_t42 := 
 27  (at line  13)	_t43 := #1
 28  (at line  13)	_t41 := _t42 + _t43
 29  (at line  13)	 := _t41
 30  (at line  14)	LABEL label6 :
 31  (at line  14)	_t24 := 
 32  (at line  14)	_t27 := #7
 33  (at line  14)	IF _t24 = _t27 GOTO label7
 34  (at line  14)	GOTO label8
 35  (at line  14)	LABEL label7 :
 36  (at line  15)	_t39 := 
 37  (at line  15)	_t40 := #1
 38  (at line  15)	_t38 := _t39 - _t40
 39  (at line  15)	 := _t38
 40  (at line  16)	LABEL label9 :
 41  (at line  16)	_t31 := 
 42  (at line  16)	_t34 := #20
 43  (at line  16)	IF _t31 < _t34 GOTO label10
 44  (at line  16)	GOTO label11
 45  (at line  16)	LABEL label10 :
 46  (at line  17)	_t36 := 
 47  (at line  17)	_t37 := #3
 48  (at line  17)	_t35 := _t36 + _t37
 49  (at line  17)	 := _t35
 50  (at line  16)	GOTO label9
 51  (at line  16)	LABEL label11 :
 52  (at line  19)	_t29 := 
 53  (at line  19)	_t30 := #1
 54  (at line  19)	_t28 := _t29 - _t30
 55  (at line  19)	 := _t28
 56  (at line  14)	GOTO label6
 57  (at line  14)	LABEL label8 :
 58  (at line  21)	_t22 := 
 59  (at line  21)	_t23 := #1
 60  (at line  21)	_t21 := _t22 + _t23
 61  (at line  21)	 := _t21
 62  (at line  12)	GOTO label3
 63  (at line  12)	LABEL label5 :
 64  (at line  23)	_t15 := 
 65  (at line  23)	_t16 := #2
 66  (at line  23)	_t14 := _t15 - _t16
 67  (at line  23)	 := _t14
 68  (at line  10)	GOTO label0
 69  (at line  10)	LABEL label2 :
 70  (at line  26)	_t5 := 
 71  (at line  26)	_t8 := 
 72  (at line  26)	_t9 := 
 73  (at line  26)	_t7 := _t8 + _t9
 74  (at line  26)	_t6 := _t7
 75  (at line  26)	_t3 := _t5 + _t6
 76  (at line  26)	_t4 := 
 77  (at line  26)	_t2 := _t3 + _t4
 78  (at line  26)	_t1 := _t2
 79  (at line  26)	RETURN _t1

 80  (at line  29)	FUNCTION main :
 81  (at line  30)	_t0 := CALL FourWhile
 82  (at line  30)	RETURN _t0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
tec type ASSIGN
findregister: insldr rd=0,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tec type ASSIGN
findregister: insldr rd=1,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tec type ASSIGN
findregister: insldr rd=2,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tec type ASSIGN
findregister: insldr rd=3,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tac type LABELDF
tec type ASSIGN
findregister: insldr rd=4,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=5,r1=11,r2 offset=0,op2type=1, insefft=0
tac type IFLT
tac type GOTO
tac type LABELDF
tec type ASSIGN
findregister: insldr rd=6,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=8,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ADD
findregister: insldr rd=9,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tac type LABELDF
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type IFLT
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type GOTO
tac type LABELDF
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ADD
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type LABELDF
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type IFEQ
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type GOTO
tac type LABELDF
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type SUB
compiler: ./ObjectCode/Arm.cpp:75: ARM::ARM(TACCode*, ScopeItem&): Assertion `code.dest.Type = VARIABLE' failed.
Aborted (core dumped)
