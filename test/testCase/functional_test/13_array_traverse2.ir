--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("3")
--accepting rule at line 83 ("]")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("3")
--accepting rule at line 83 ("]")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("3")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 76 (",")
--accepting rule at line 112 ("j")
--accepting rule at line 76 (",")
--accepting rule at line 112 ("k")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 89 ("=")
<int>
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<[>
<intd>
ExpNumber:0
<]>
<[>
<intd>
ExpNumber:0
<]>
<;>
<int>
<id,main>
<(>
<)>
<{>
<int>
<id,i>
<,>
<id,j>
<,>
<id,k>
<;>
<id,i>
<=>
33333333333
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("j")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<id,j>
<=>
33333333333
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("k")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<id,k>
<=>
33333333333
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("cnt")
--accepting rule at line 89 ("=")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("i")
--accepting rule at line 96 ("<")
Lval
<into>
ExpNumber:0
<;>
stmt1
<int>
<id,cnt>
<=>
<into>
ExpNumber:0
<;>
<while>
<(>
<id,i>
<<>
33333333333
--accepting rule at line 109 ("3")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("j")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<)>
<{>
<while>
<(>
<id,j>
<<>
33333333333
--accepting rule at line 109 ("3")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("k")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<)>
<{>
<while>
<(>
<id,k>
<<>
33333333333
--accepting rule at line 109 ("3")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,a>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 83 ("]")
Lval
<[>
<id,j>
<]>
33333333333
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("k")
--accepting rule at line 83 ("]")
Lval
<[>
<id,k>
<]>
33333333333
--accepting rule at line 89 ("=")
Lval
<=>
33333333333
22222222222222
22222222222222
22222222222222
--accepting rule at line 112 ("cnt")
--accepting rule at line 75 (";")
Lval
<id,cnt>
<;>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("cnt")
--accepting rule at line 89 ("=")
Lval
stmt1
<id,cnt>
<=>
33333333333
--accepting rule at line 112 ("cnt")
--accepting rule at line 84 ("+")
Lval
<id,cnt>
<+>
33333333333
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,k>
<=>
33333333333
--accepting rule at line 112 ("k")
--accepting rule at line 84 ("+")
Lval
<id,k>
<+>
33333333333
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,j>
<=>
33333333333
--accepting rule at line 112 ("j")
--accepting rule at line 84 ("+")
Lval
<id,j>
<+>
33333333333
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,i>
<=>
33333333333
--accepting rule at line 112 ("i")
--accepting rule at line 84 ("+")
Lval
<id,i>
<+>
33333333333
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--(end of buffer or a NUL)
--EOF (start condition 0)
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<into>
ExpNumber:0
<;>
<}>
CompUnits (1)
  VarDecl (1)
    ArrayDec: demmision=0
      ArrayDec: demmision=0
        ArrayDec: demmision=0
          IDENTIFIER a
  CompUnits (3)
    FuncDef (3)
      NOFParam (3)
      Block (4)
        BlockItems (4)
          VarDecl (4)
            IDENTIFIER i
            VarDefs (4)
              IDENTIFIER j
              VarDefs (4)
                IDENTIFIER k
          BlockItems (5)
            Lval_Opassign_Stmt (5)
              LVal (5)
                IDENTIFIER i
                ArrayExps (5)
              IntConst (5)
                CONSTANTOCT: 0
            BlockItems (5)
              Lval_Opassign_Stmt (5)
                LVal (5)
                  IDENTIFIER j
                  ArrayExps (5)
                IntConst (5)
                  CONSTANTOCT: 0
              BlockItems (5)
                Lval_Opassign_Stmt (5)
                  LVal (5)
                    IDENTIFIER k
                    ArrayExps (5)
                  IntConst (5)
                    CONSTANTOCT: 0
                BlockItems (6)
                  VarDecl (6)
                    VarOPassign (6)
                      IDENTIFIER cnt
                      ConstInitVal (6)
                        IntConst (6)
                          CONSTANTOCT: 0
                  BlockItems (7)
                    While_Stmt (7)
                      Cond (7)
                        OPLIGHT (7)
                          LVal_EXP (7)
                            LVal (7)
                              IDENTIFIER i
                              ArrayExps (7)
                          IntConst (7)
                            CONSTANTINTD: 3
                      Block_Stmt (8)
                        Block (8)
                          BlockItems (8)
                            While_Stmt (8)
                              Cond (8)
                                OPLIGHT (8)
                                  LVal_EXP (8)
                                    LVal (8)
                                      IDENTIFIER j
                                      ArrayExps (8)
                                  IntConst (8)
                                    CONSTANTINTD: 3
                              Block_Stmt (9)
                                Block (9)
                                  BlockItems (9)
                                    While_Stmt (9)
                                      Cond (9)
                                        OPLIGHT (9)
                                          LVal_EXP (9)
                                            LVal (9)
                                              IDENTIFIER k
                                              ArrayExps (9)
                                          IntConst (9)
                                            CONSTANTINTD: 3
                                      Block_Stmt (10)
                                        Block (10)
                                          BlockItems (10)
                                            Lval_Opassign_Stmt (10)
                                              LVal (10)
                                                IDENTIFIER a
                                                ArrayExps (10)
                                                  LVal_EXP (10)
                                                    LVal (10)
                                                      IDENTIFIER i
                                                      ArrayExps (10)
                                                  ArrayExps (10)
                                                    LVal_EXP (10)
                                                      LVal (10)
                                                        IDENTIFIER j
                                                        ArrayExps (10)
                                                    ArrayExps (10)
                                                      LVal_EXP (10)
                                                        LVal (10)
                                                          IDENTIFIER k
                                                          ArrayExps (10)
                                                      ArrayExps (10)
                                              LVal_EXP (10)
                                                LVal (10)
                                                  IDENTIFIER cnt
                                                  ArrayExps (10)
                                            BlockItems (11)
                                              Lval_Opassign_Stmt (11)
                                                LVal (11)
                                                  IDENTIFIER cnt
                                                  ArrayExps (11)
                                                PLUSExp (11)
                                                  LVal_EXP (11)
                                                    LVal (11)
                                                      IDENTIFIER cnt
                                                      ArrayExps (11)
                                                  IntConst (11)
                                                    CONSTANTINTD: 1
                                              BlockItems (12)
                                                Lval_Opassign_Stmt (12)
                                                  LVal (12)
                                                    IDENTIFIER k
                                                    ArrayExps (12)
                                                  PLUSExp (12)
                                                    LVal_EXP (12)
                                                      LVal (12)
                                                        IDENTIFIER k
                                                        ArrayExps (12)
                                                    IntConst (12)
                                                      CONSTANTINTD: 1
                                    BlockItems (14)
                                      Lval_Opassign_Stmt (14)
                                        LVal (14)
                                          IDENTIFIER j
                                          ArrayExps (14)
                                        PLUSExp (14)
                                          LVal_EXP (14)
                                            LVal (14)
                                              IDENTIFIER j
                                              ArrayExps (14)
                                          IntConst (14)
                                            CONSTANTINTD: 1
                            BlockItems (16)
                              Lval_Opassign_Stmt (16)
                                LVal (16)
                                  IDENTIFIER i
                                  ArrayExps (16)
                                PLUSExp (16)
                                  LVal_EXP (16)
                                    LVal (16)
                                      IDENTIFIER i
                                      ArrayExps (16)
                                  IntConst (16)
                                    CONSTANTINTD: 1
                    BlockItems (18)
                      Return_Stmt (18)
                        IntConst (18)
                          CONSTANTOCT: 0


===========================================================
Global
ID             category       type           depictor
               
a              Array          TYPEINTEGER    ----------> dim=3
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
i              Variable       TYPEINTEGER    NULL           
j              Variable       TYPEINTEGER    NULL           
k              Variable       TYPEINTEGER    NULL           
cnt            Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
===========================================================
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
Segmentation fault (core dumped)
