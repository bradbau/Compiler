arg S
--(end of buffer or a NUL)
--accepting rule at line 74 ("// Use complex expression in assign structure
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("result")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("5")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
<int>
<id,main>
<(>
<)>
<{>
<int>
<id,a>
<;>
<int>
<id,b>
<;>
<int>
<id,c>
<;>
<int>
<id,d>
<;>
<int>
<id,result>
<[>
<intd>
ExpNumber:0
<]>
<;>
<id,a>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("5")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,b>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("5")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,c>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,d>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("result")
--accepting rule at line 82 ("[")
--accepting rule at line 111 ("0")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<->
<intd>
ExpNumber:0
<;>
stmt1
<id,result>
<[>
<into>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("result")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,result>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("result")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("2")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,result>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("3")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("result")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("3")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,result>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("4")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("result")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("4")
--accepting rule at line 83 ("]")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,result>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("5")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("t")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("t")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,t>
<;>
<id,t>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("result")
--accepting rule at line 82 ("[")
--accepting rule at line 80 ("(")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 86 ("*")
Lval
<id,result>
<[>
<(>
<(>
<id,d>
<*>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 114 (" ")
--accepting rule at line 87 ("/")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("4")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<intd>
ExpNumber:0
</>
<intd>
ExpNumber:0
<)>
<+>
<intd>
ExpNumber:0
<+>
<(>
<id,a>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 81 (")")
Lval
<id,b>
<)>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<->
<->
<(>
<id,c>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("3")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 88 ("%")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 88 ("%")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("5")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
Lval
<intd>
ExpNumber:0
<)>
<%>
<intd>
ExpNumber:0
<)>
<%>
<intd>
ExpNumber:0
<]>
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putint")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("t")
--accepting rule at line 81 (")")
Lval
stmt1
<id,putint>
<(>
<id,t>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("t")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<;>
<id,t>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("result")
--accepting rule at line 82 ("[")
--accepting rule at line 80 ("(")
--accepting rule at line 80 ("(")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 88 ("%")
Lval
<id,result>
<[>
<(>
<(>
<(>
<id,c>
<%>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("67")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<intd>
ExpNumber:0
<+>
<intd>
ExpNumber:0
<)>
<+>
<id,a>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 81 (")")
Lval
<id,b>
<)>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 80 ("(")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<->
<->
<(>
<(>
<id,c>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 88 ("%")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 81 (")")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 88 ("%")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("5")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
Lval
<intd>
ExpNumber:0
<)>
<%>
<intd>
ExpNumber:0
<)>
<)>
<%>
<intd>
ExpNumber:0
<]>
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putint")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("t")
--accepting rule at line 81 (")")
Lval
stmt1
<id,putint>
<(>
<id,t>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Lval
<;>
<return>
<into>
ExpNumber:0
<;>
<}>
CompUnits (2)
  FuncDef (2)
    NOFParam (2)
    Block (3)
      BlockItems (3)
        VarDecl (3)
          IDENTIFIER a
        BlockItems (4)
          VarDecl (4)
            IDENTIFIER b
          BlockItems (5)
            VarDecl (5)
              IDENTIFIER c
            BlockItems (6)
              VarDecl (6)
                IDENTIFIER d
              BlockItems (7)
                VarDecl (7)
                  ArrayDec: demmision=0
                    IDENTIFIER result
                BlockItems (8)
                  Lval_Opassign_Stmt (8)
                    LVal (8)
                      IDENTIFIER a
                      ArrayExps (8)
                    IntConst (8)
                      CONSTANTINTD: 5
                  BlockItems (9)
                    Lval_Opassign_Stmt (9)
                      LVal (9)
                        IDENTIFIER b
                        ArrayExps (9)
                      IntConst (9)
                        CONSTANTINTD: 5
                    BlockItems (10)
                      Lval_Opassign_Stmt (10)
                        LVal (10)
                          IDENTIFIER c
                          ArrayExps (10)
                        IntConst (10)
                          CONSTANTINTD: 1
                      BlockItems (11)
                        Lval_Opassign_Stmt (11)
                          LVal (11)
                            IDENTIFIER d
                            ArrayExps (11)
                          OPMINUS_Exp (11)
                            IntConst (11)
                              CONSTANTINTD: 2
                        BlockItems (12)
                          Lval_Opassign_Stmt (12)
                            LVal (12)
                              IDENTIFIER result
                              ArrayExps (12)
                                IntConst (12)
                                  CONSTANTOCT: 0
                                ArrayExps (12)
                            IntConst (12)
                              CONSTANTINTD: 1
                          BlockItems (13)
                            Lval_Opassign_Stmt (13)
                              LVal (13)
                                IDENTIFIER result
                                ArrayExps (13)
                                  IntConst (13)
                                    CONSTANTINTD: 1
                                  ArrayExps (13)
                              IntConst (13)
                                CONSTANTINTD: 2
                            BlockItems (14)
                              Lval_Opassign_Stmt (14)
                                LVal (14)
                                  IDENTIFIER result
                                  ArrayExps (14)
                                    IntConst (14)
                                      CONSTANTINTD: 2
                                    ArrayExps (14)
                                IntConst (14)
                                  CONSTANTINTD: 3
                              BlockItems (15)
                                Lval_Opassign_Stmt (15)
                                  LVal (15)
                                    IDENTIFIER result
                                    ArrayExps (15)
                                      IntConst (15)
                                        CONSTANTINTD: 3
                                      ArrayExps (15)
                                  IntConst (15)
                                    CONSTANTINTD: 4
                                BlockItems (16)
                                  Lval_Opassign_Stmt (16)
                                    LVal (16)
                                      IDENTIFIER result
                                      ArrayExps (16)
                                        IntConst (16)
                                          CONSTANTINTD: 4
                                        ArrayExps (16)
                                    IntConst (16)
                                      CONSTANTINTD: 5
                                  BlockItems (17)
                                    VarDecl (17)
                                      IDENTIFIER t
                                    BlockItems (18)
                                      Lval_Opassign_Stmt (18)
                                        LVal (18)
                                          IDENTIFIER t
                                          ArrayExps (18)
                                        LVal_EXP (18)
                                          LVal (18)
                                            IDENTIFIER result
                                            ArrayExps (18)
                                              MODExp (18)
                                                (Exp) (18)
                                                  MINUSExp (18)
                                                    PLUSExp (18)
                                                      PLUSExp (18)
                                                        (Exp) (18)
                                                          DIVIDEExp (18)
                                                            MulExp (18)
                                                              LVal_EXP (18)
                                                                LVal (18)
                                                                  IDENTIFIER d
                                                                  ArrayExps (18)
                                                              IntConst (18)
                                                                CONSTANTINTD: 1
                                                            IntConst (18)
                                                              CONSTANTINTD: 2
                                                        IntConst (18)
                                                          CONSTANTINTD: 4
                                                      (Exp) (18)
                                                        MINUSExp (18)
                                                          LVal_EXP (18)
                                                            LVal (18)
                                                              IDENTIFIER a
                                                              ArrayExps (18)
                                                          LVal_EXP (18)
                                                            LVal (18)
                                                              IDENTIFIER b
                                                              ArrayExps (18)
                                                    OPMINUS_Exp (18)
                                                      MODExp (18)
                                                        (Exp) (18)
                                                          PLUSExp (18)
                                                            LVal_EXP (18)
                                                              LVal (18)
                                                                IDENTIFIER c
                                                                ArrayExps (18)
                                                            IntConst (18)
                                                              CONSTANTINTD: 3
                                                        IntConst (18)
                                                          CONSTANTINTD: 2
                                                IntConst (18)
                                                  CONSTANTINTD: 5
                                              ArrayExps (18)
                                      BlockItems (19)
                                        Exp_Stmt (19)
                                          funcall (19)
                                            IDENTIFIER putint
                                            FuncRParams (19)
                                              LVal_EXP (19)
                                                LVal (19)
                                                  IDENTIFIER t
                                                  ArrayExps (19)
                                        BlockItems (20)
                                          Lval_Opassign_Stmt (20)
                                            LVal (20)
                                              IDENTIFIER t
                                              ArrayExps (20)
                                            LVal_EXP (20)
                                              LVal (20)
                                                IDENTIFIER result
                                                ArrayExps (20)
                                                  MODExp (20)
                                                    (Exp) (20)
                                                      MINUSExp (20)
                                                        (Exp) (20)
                                                          MINUSExp (20)
                                                            PLUSExp (20)
                                                              (Exp) (20)
                                                                PLUSExp (20)
                                                                  MODExp (20)
                                                                    LVal_EXP (20)
                                                                      LVal (20)
                                                                        IDENTIFIER c
                                                                        ArrayExps (20)
                                                                    IntConst (20)
                                                                      CONSTANTINTD: 2
                                                                  IntConst (20)
                                                                    CONSTANTINTD: 67
                                                              LVal_EXP (20)
                                                                LVal (20)
                                                                  IDENTIFIER a
                                                                  ArrayExps (20)
                                                            LVal_EXP (20)
                                                              LVal (20)
                                                                IDENTIFIER b
                                                                ArrayExps (20)
                                                        OPMINUS_Exp (20)
                                                          (Exp) (20)
                                                            MODExp (20)
                                                              (Exp) (20)
                                                                PLUSExp (20)
                                                                  LVal_EXP (20)
                                                                    LVal (20)
                                                                      IDENTIFIER c
                                                                      ArrayExps (20)
                                                                  IntConst (20)
                                                                    CONSTANTINTD: 2
                                                              IntConst (20)
                                                                CONSTANTINTD: 2
                                                    IntConst (20)
                                                      CONSTANTINTD: 5
                                                  ArrayExps (20)
                                          BlockItems (21)
                                            Exp_Stmt (21)
                                              funcall (21)
                                                IDENTIFIER putint
                                                FuncRParams (21)
                                                  LVal_EXP (21)
                                                    LVal (21)
                                                      IDENTIFIER t
                                                      ArrayExps (21)
                                            BlockItems (22)
                                              Return_Stmt (22)
                                                IntConst (22)
                                                  CONSTANTOCT: 0


===========================================================
Global
ID             category       type           depictor
               
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
c              Variable       TYPEINTEGER    NULL           
d              Variable       TYPEINTEGER    NULL           
result         Array          TYPEINTEGER    ----------> dim=1
t              Variable       TYPEINTEGER    NULL           
===========================================================
456
789
789
456
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
TraverseScopeStack no result
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
TraverseScopeStack no result
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   2)	FUNCTION main :
  2  (at line   8)	_t0 := #5
  3  (at line   8)	a := _t0
  4  (at line   9)	_t1 := #5
  5  (at line   9)	b := _t1
  6  (at line  10)	_t2 := #1
  7  (at line  10)	c := _t2
  8  (at line  11)	_t4 := #2
  9  (at line  11)	_t3 := #0 - _t4
 10  (at line  11)	d := _t3
 11  (at line  12)	_t5 := #1
 12  (at line  12)	_t8 := #0
 13  (at line  12)	result[_t8] := _t5
 14  (at line  13)	_t10 := #2
 15  (at line  13)	_t13 := #1
 16  (at line  13)	result[_t13] := _t10
 17  (at line  14)	_t15 := #3
 18  (at line  14)	_t18 := #2
 19  (at line  14)	result[_t18] := _t15
 20  (at line  15)	_t20 := #4
 21  (at line  15)	_t23 := #3
 22  (at line  15)	result[_t23] := _t20
 23  (at line  16)	_t25 := #5
 24  (at line  16)	_t28 := #4
 25  (at line  16)	result[_t28] := _t25
 26  (at line  18)	_t46 := d
 27  (at line  18)	_t47 := #1
 28  (at line  18)	_t44 := _t46 * _t47
 29  (at line  18)	_t45 := #2
 30  (at line  18)	_t43 := _t44 / _t45
 31  (at line  18)	_t41 := _t43
 32  (at line  18)	_t42 := #4
 33  (at line  18)	_t39 := _t41 + _t42
 34  (at line  18)	_t49 := a
 35  (at line  18)	_t50 := b
 36  (at line  18)	_t48 := _t49 - _t50
 37  (at line  18)	_t40 := _t48
 38  (at line  18)	_t37 := _t39 + _t40
 39  (at line  18)	_t55 := c
 40  (at line  18)	_t56 := #3
 41  (at line  18)	_t54 := _t55 + _t56
 42  (at line  18)	_t52 := _t54
 43  (at line  18)	_t53 := #2
 44  (at line  18)	_t51 := _t52 % _t53
 45  (at line  18)	_t38 := #0 - _t51
 46  (at line  18)	_t36 := _t37 - _t38
 47  (at line  18)	_t34 := _t36
 48  (at line  18)	_t35 := #5
 49  (at line  18)	_t33 := _t34 % _t35
 50  (at line  18)	_t30 := result[_t33]
 51  (at line  18)	t := _t30
 52  (at line  19)	_t58 := t
 53  (at line  19)	ARG _t58
 54  (at line  19)	CALL 
 55  (at line  20)	_t76 := c
 56  (at line  20)	_t77 := #2
 57  (at line  20)	_t74 := _t76 % _t77
 58  (at line  20)	_t75 := #67
 59  (at line  20)	_t73 := _t74 + _t75
 60  (at line  20)	_t71 := _t73
 61  (at line  20)	_t72 := a
 62  (at line  20)	_t69 := _t71 + _t72
 63  (at line  20)	_t70 := b
 64  (at line  20)	_t68 := _t69 - _t70
 65  (at line  20)	_t66 := _t68
 66  (at line  20)	_t83 := c
 67  (at line  20)	_t84 := #2
 68  (at line  20)	_t82 := _t83 + _t84
 69  (at line  20)	_t80 := _t82
 70  (at line  20)	_t81 := #2
 71  (at line  20)	_t79 := _t80 % _t81
 72  (at line  20)	_t78 := _t79
 73  (at line  20)	_t67 := #0 - _t78
 74  (at line  20)	_t65 := _t66 - _t67
 75  (at line  20)	_t63 := _t65
 76  (at line  20)	_t64 := #5
 77  (at line  20)	_t62 := _t63 % _t64
 78  (at line  20)	_t59 := result[_t62]
 79  (at line  20)	t := _t59
 80  (at line  21)	_t86 := t
 81  (at line  21)	ARG _t86
 82  (at line  21)	CALL 
 83  (at line  22)	_t87 := #0
 84  (at line  22)	RETURN _t87


===========================================================
Global
ID             category       type           depictor
               
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
scope type is wrong
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
Variable offset count+4 :a
Variable offset count+4 :a
Variable offset count+4 :a
Variable offset count+4 :a
Variable offset count+4 :a
Variable offset count+4 :a
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t0
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t1
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t2
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t3
Variable offset count+4 :_t4
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t5
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t6
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t7
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t8
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t9
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t10
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t11
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t12
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t13
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t14
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t15
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t16
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t17
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t18
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t19
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t20
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t21
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t22
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t23
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t24
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t25
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t26
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t27
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t28
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t29
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t30
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t31
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t32
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t33
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t34
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t35
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t36
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t37
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t38
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t39
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t40
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t41
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t42
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t43
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t44
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t45
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t46
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t47
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t48
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t49
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t50
Variable offset count+4 :_t51
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t52
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t53
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t54
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t55
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t56
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t57
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t58
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t59
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t60
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t61
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t62
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t63
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t64
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t65
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t66
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t67
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t68
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t69
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t70
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t71
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t72
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t73
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t74
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t75
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t76
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t77
Variable offset count+4 :_t78
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t79
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t80
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t81
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t82
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t83
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t84
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t85
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t86
Variable offset count+4 :_t87
tec type ASSIGN
findregister: insldr rd=0,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=1,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=2,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=3,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=4,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=5,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=6,r1=11,r2 offset=0,op2type=1, insefft=0
tac type SUB
compiler: ./ObjectCode/Arm.cpp:85: ARM::ARM(TACCode *, ScopeItem &): Assertion `code.dest.Type = VARIABLE' failed.
Aborted (core dumped)
