--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("fib")
--accepting rule at line 80 ("(")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("p")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 101 ("if")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("p")
--accepting rule at line 114 (" ")
--accepting rule at line 93 ("==")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 114 (" ")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 101 ("if")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("p")
--accepting rule at line 114 (" ")
--accepting rule at line 93 ("==")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 114 (" ")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 103 ("while")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("p")
--accepting rule at line 114 (" ")
--accepting rule at line 95 (">")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 114 (" ")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
<int>
<id,n>
<;>
<int>
<id,fib>
<(>
<int>
<id,p>
<)>
<{>
<int>
<id,a>
<;>
<int>
<id,b>
<;>
<int>
<id,c>
<;>
<id,a>
<=>
Lval
<into>
ExpNumber:0
<;>
stmt1
<id,b>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<if>
<(>
<id,p>
<==>
Lval
<into>
ExpNumber:0
<)>
<{>
<return>
<into>
ExpNumber:0
<;>
<}>
<if>
<(>
<id,p>
<==>
Lval
<intd>
ExpNumber:0
<)>
<{>
<return>
<intd>
ExpNumber:0
<;>
<}>
<while>
<(>
<id,p>
<>>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,c>
<=>
Lval
<id,a>
<+>
Lval
<id,b>
<;>
Lval
stmt1
<id,a>
<=>
Lval
<id,b>
<;>
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("p")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("p")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("n")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("getint")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("res")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("res")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("fib")
--accepting rule at line 80 ("(")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 114 (" ")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("res")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Lval
stmt1
<id,b>
<=>
Lval
<id,c>
<;>
Lval
stmt1
<id,p>
<=>
Lval
<id,p>
<->
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<id,c>
<;>
Lval
<}>
<int>
<id,main>
<(>
<)>
<{>
<id,n>
<=>
Lval
<id,getint>
<(>
<)>
<;>
stmt1
<int>
<id,res>
<;>
<id,res>
<=>
Lval
<id,fib>
<(>
<id,n>
<)>
Lval
<;>
stmt1
<return>
<id,res>
<;>
Lval
<}>
CompUnits (1)
  VarDecl (1)
    IDENTIFIER n
  CompUnits (2)
    FuncDef (2)
      FuncFParam (2)
      Block (3)
        BlockItems (3)
          VarDecl (3)
            IDENTIFIER a
          BlockItems (4)
            VarDecl (4)
              IDENTIFIER b
            BlockItems (5)
              VarDecl (5)
                IDENTIFIER c
              BlockItems (6)
                Lval_Opassign_Stmt (6)
                  LVal (6)
                    IDENTIFIER a
                    ArrayExps (6)
                  IntConst (6)
                    CONSTANTOCT: 0
                BlockItems (7)
                  Lval_Opassign_Stmt (7)
                    LVal (7)
                      IDENTIFIER b
                      ArrayExps (7)
                    IntConst (7)
                      CONSTANTINTD: 1
                  BlockItems (8)
                    IF_Stmt (8)
                      Cond (8)
                        OPEQUAL (8)
                          LVal_EXP (8)
                            LVal (8)
                              IDENTIFIER p
                              ArrayExps (8)
                          IntConst (8)
                            CONSTANTOCT: 0
                      Block_Stmt (9)
                        Block (9)
                          BlockItems (9)
                            Return_Stmt (9)
                              IntConst (9)
                                CONSTANTOCT: 0
                    BlockItems (11)
                      IF_Stmt (11)
                        Cond (11)
                          OPEQUAL (11)
                            LVal_EXP (11)
                              LVal (11)
                                IDENTIFIER p
                                ArrayExps (11)
                            IntConst (11)
                              CONSTANTINTD: 1
                        Block_Stmt (12)
                          Block (12)
                            BlockItems (12)
                              Return_Stmt (12)
                                IntConst (12)
                                  CONSTANTINTD: 1
                      BlockItems (14)
                        While_Stmt (14)
                          Cond (14)
                            OPGREAT (14)
                              LVal_EXP (14)
                                LVal (14)
                                  IDENTIFIER p
                                  ArrayExps (14)
                              IntConst (14)
                                CONSTANTINTD: 1
                          Block_Stmt (15)
                            Block (15)
                              BlockItems (15)
                                Lval_Opassign_Stmt (15)
                                  LVal (15)
                                    IDENTIFIER c
                                    ArrayExps (15)
                                  PLUSExp (15)
                                    LVal_EXP (15)
                                      LVal (15)
                                        IDENTIFIER a
                                        ArrayExps (15)
                                    LVal_EXP (15)
                                      LVal (15)
                                        IDENTIFIER b
                                        ArrayExps (15)
                                BlockItems (16)
                                  Lval_Opassign_Stmt (16)
                                    LVal (16)
                                      IDENTIFIER a
                                      ArrayExps (16)
                                    LVal_EXP (16)
                                      LVal (16)
                                        IDENTIFIER b
                                        ArrayExps (16)
                                  BlockItems (17)
                                    Lval_Opassign_Stmt (17)
                                      LVal (17)
                                        IDENTIFIER b
                                        ArrayExps (17)
                                      LVal_EXP (17)
                                        LVal (17)
                                          IDENTIFIER c
                                          ArrayExps (17)
                                    BlockItems (18)
                                      Lval_Opassign_Stmt (18)
                                        LVal (18)
                                          IDENTIFIER p
                                          ArrayExps (18)
                                        MINUSExp (18)
                                          LVal_EXP (18)
                                            LVal (18)
                                              IDENTIFIER p
                                              ArrayExps (18)
                                          IntConst (18)
                                            CONSTANTINTD: 1
                        BlockItems (20)
                          Return_Stmt (20)
                            LVal_EXP (20)
                              LVal (20)
                                IDENTIFIER c
                                ArrayExps (20)
    CompUnits (22)
      FuncDef (22)
        NOFParam (22)
        Block (23)
          BlockItems (23)
            Lval_Opassign_Stmt (23)
              LVal (23)
                IDENTIFIER n
                ArrayExps (23)
              funcall (23)
                IDENTIFIER getint
            BlockItems (24)
              VarDecl (24)
                IDENTIFIER res
              BlockItems (25)
                Lval_Opassign_Stmt (25)
                  LVal (25)
                    IDENTIFIER res
                    ArrayExps (25)
                  funcall (25)
                    IDENTIFIER fib
                    FuncRParams (25)
                      LVal_EXP (25)
                        LVal (25)
                          IDENTIFIER n
                          ArrayExps (25)
                BlockItems (26)
                  Return_Stmt (26)
                    LVal_EXP (26)
                      LVal (26)
                        IDENTIFIER res
                        ArrayExps (26)


===========================================================
Global
ID             category       type           depictor
               
n              Variable       TYPEINTEGER    NULL           
fib            Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:fib
ID             category       type           depictor
              
p              Variable       TYPEINTEGER    NOT NULL       
===========================================================
Local:fib
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
c              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:main
ID             category       type           depictor
              
res            Variable       TYPEINTEGER    NULL           
Segmentation fault (core dumped)
