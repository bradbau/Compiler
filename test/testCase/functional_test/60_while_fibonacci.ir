--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("fib")
--accepting rule at line 80 ("(")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("p")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
<int>
<id,n>
<;>
<int>
<id,fib>
<(>
<int>
<id,p>
<)>
<{>
<int>
<id,a>
<;>
<int>
<id,b>
<;>
<int>
<id,c>
<;>
<id,a>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<id,b>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 101 ("if")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("p")
--accepting rule at line 114 (" ")
--accepting rule at line 93 ("==")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<if>
<(>
<id,p>
<==>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 114 (" ")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 101 ("if")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("p")
--accepting rule at line 114 (" ")
--accepting rule at line 93 ("==")
Lval
<into>
ExpNumber:0
<)>
<{>
<return>
<into>
ExpNumber:0
<;>
<}>
<if>
<(>
<id,p>
<==>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 114 (" ")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 103 ("while")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("p")
--accepting rule at line 114 (" ")
--accepting rule at line 95 (">")
Lval
<intd>
ExpNumber:0
<)>
<{>
<return>
<intd>
ExpNumber:0
<;>
<}>
<while>
<(>
<id,p>
<>>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 114 (" ")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,c>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,a>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
Lval
<id,b>
<;>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<id,a>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
Lval
<id,b>
<;>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<id,b>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 75 (";")
Lval
<id,c>
<;>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("p")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<id,p>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("p")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,p>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 75 (";")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<id,c>
<;>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("n")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<}>
<int>
<id,main>
<(>
<)>
<{>
<id,n>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("getint")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("res")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("res")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<id,getint>
<(>
<)>
<;>
stmt1
<int>
<id,res>
<;>
<id,res>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("fib")
--accepting rule at line 80 ("(")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 114 (" ")
--accepting rule at line 81 (")")
Lval
<id,fib>
<(>
<id,n>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("res")
--accepting rule at line 75 (";")
Lval
<;>
stmt1
<return>
<id,res>
<;>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Lval
<}>
CompUnits (1)
  VarDecl (1)
    IDENTIFIER n
  CompUnits (2)
    FuncDef (2)
      FuncFParam (2)
      Block (3)
        BlockItems (3)
          VarDecl (3)
            IDENTIFIER a
          BlockItems (4)
            VarDecl (4)
              IDENTIFIER b
            BlockItems (5)
              VarDecl (5)
                IDENTIFIER c
              BlockItems (6)
                Lval_Opassign_Stmt (6)
                  LVal (6)
                    IDENTIFIER a
                    ArrayExps (6)
                  IntConst (6)
                    CONSTANTOCT: 0
                BlockItems (7)
                  Lval_Opassign_Stmt (7)
                    LVal (7)
                      IDENTIFIER b
                      ArrayExps (7)
                    IntConst (7)
                      CONSTANTINTD: 1
                  BlockItems (8)
                    IF_Stmt (8)
                      Cond (8)
                        OPEQUAL (8)
                          LVal_EXP (8)
                            LVal (8)
                              IDENTIFIER p
                              ArrayExps (8)
                          IntConst (8)
                            CONSTANTOCT: 0
                      Block_Stmt (9)
                        Block (9)
                          BlockItems (9)
                            Return_Stmt (9)
                              IntConst (9)
                                CONSTANTOCT: 0
                    BlockItems (11)
                      IF_Stmt (11)
                        Cond (11)
                          OPEQUAL (11)
                            LVal_EXP (11)
                              LVal (11)
                                IDENTIFIER p
                                ArrayExps (11)
                            IntConst (11)
                              CONSTANTINTD: 1
                        Block_Stmt (12)
                          Block (12)
                            BlockItems (12)
                              Return_Stmt (12)
                                IntConst (12)
                                  CONSTANTINTD: 1
                      BlockItems (14)
                        While_Stmt (14)
                          Cond (14)
                            OPGREAT (14)
                              LVal_EXP (14)
                                LVal (14)
                                  IDENTIFIER p
                                  ArrayExps (14)
                              IntConst (14)
                                CONSTANTINTD: 1
                          Block_Stmt (15)
                            Block (15)
                              BlockItems (15)
                                Lval_Opassign_Stmt (15)
                                  LVal (15)
                                    IDENTIFIER c
                                    ArrayExps (15)
                                  PLUSExp (15)
                                    LVal_EXP (15)
                                      LVal (15)
                                        IDENTIFIER a
                                        ArrayExps (15)
                                    LVal_EXP (15)
                                      LVal (15)
                                        IDENTIFIER b
                                        ArrayExps (15)
                                BlockItems (16)
                                  Lval_Opassign_Stmt (16)
                                    LVal (16)
                                      IDENTIFIER a
                                      ArrayExps (16)
                                    LVal_EXP (16)
                                      LVal (16)
                                        IDENTIFIER b
                                        ArrayExps (16)
                                  BlockItems (17)
                                    Lval_Opassign_Stmt (17)
                                      LVal (17)
                                        IDENTIFIER b
                                        ArrayExps (17)
                                      LVal_EXP (17)
                                        LVal (17)
                                          IDENTIFIER c
                                          ArrayExps (17)
                                    BlockItems (18)
                                      Lval_Opassign_Stmt (18)
                                        LVal (18)
                                          IDENTIFIER p
                                          ArrayExps (18)
                                        MINUSExp (18)
                                          LVal_EXP (18)
                                            LVal (18)
                                              IDENTIFIER p
                                              ArrayExps (18)
                                          IntConst (18)
                                            CONSTANTINTD: 1
                        BlockItems (20)
                          Return_Stmt (20)
                            LVal_EXP (20)
                              LVal (20)
                                IDENTIFIER c
                                ArrayExps (20)
    CompUnits (22)
      FuncDef (22)
        NOFParam (22)
        Block (23)
          BlockItems (23)
            Lval_Opassign_Stmt (23)
              LVal (23)
                IDENTIFIER n
                ArrayExps (23)
              funcall (23)
                IDENTIFIER getint
            BlockItems (24)
              VarDecl (24)
                IDENTIFIER res
              BlockItems (25)
                Lval_Opassign_Stmt (25)
                  LVal (25)
                    IDENTIFIER res
                    ArrayExps (25)
                  funcall (25)
                    IDENTIFIER fib
                    FuncRParams (25)
                      LVal_EXP (25)
                        LVal (25)
                          IDENTIFIER n
                          ArrayExps (25)
                BlockItems (26)
                  Return_Stmt (26)
                    LVal_EXP (26)
                      LVal (26)
                        IDENTIFIER res
                        ArrayExps (26)


===========================================================
Global
ID             category       type           depictor
               
n              Variable       TYPEINTEGER    NULL           
fib            Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:fib
ID             category       type           depictor
              
p              Variable       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Local:fib
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
c              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
res            Variable       TYPEINTEGER    NULL           
===========================================================
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   2)	FUNCTION fib :
  2  (at line   2)	PARAM p
  3  (at line   6)	_t28 := #0
  4  (at line   6)	 := _t28
  5  (at line   7)	_t27 := #1
  6  (at line   7)	 := _t27
  7  (at line   8)	_t22 := 
  8  (at line   8)	_t25 := #0
  9  (at line   8)	IF _t22 = _t25 GOTO label5
 10  (at line   8)	GOTO label6
 11  (at line   8)	LABEL label5 :
 12  (at line   9)	_t26 := #0
 13  (at line   9)	RETURN _t26
 14  (at line   8)	LABEL label6 :
 15  (at line  11)	_t17 := 
 16  (at line  11)	_t20 := #1
 17  (at line  11)	IF _t17 = _t20 GOTO label3
 18  (at line  11)	GOTO label4
 19  (at line  11)	LABEL label3 :
 20  (at line  12)	_t21 := #1
 21  (at line  12)	RETURN _t21
 22  (at line  11)	LABEL label4 :
 23  (at line  14)	LABEL label0 :
 24  (at line  14)	_t5 := 
 25  (at line  14)	_t8 := #1
 26  (at line  14)	IF _t5 > _t8 GOTO label1
 27  (at line  14)	GOTO label2
 28  (at line  14)	LABEL label1 :
 29  (at line  15)	_t15 := 
 30  (at line  15)	_t16 := 
 31  (at line  15)	_t14 := _t15 + _t16
 32  (at line  15)	 := _t14
 33  (at line  16)	_t13 := 
 34  (at line  16)	 := _t13
 35  (at line  17)	_t12 := 
 36  (at line  17)	 := _t12
 37  (at line  18)	_t10 := 
 38  (at line  18)	_t11 := #1
 39  (at line  18)	_t9 := _t10 - _t11
 40  (at line  18)	 := _t9
 41  (at line  14)	GOTO label0
 42  (at line  14)	LABEL label2 :
 43  (at line  20)	_t4 := 
 44  (at line  20)	RETURN _t4

 45  (at line  22)	FUNCTION main :
 46  (at line  23)	_t3 := CALL 
 47  (at line  23)	 := _t3
 48  (at line  25)	_t2 := 
 49  (at line  25)	ARG _t2
 50  (at line  25)	_t1 := CALL fib
 51  (at line  25)	 := _t1
 52  (at line  26)	_t0 := 
 53  (at line  26)	RETURN _t0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
tec type ASSIGN
findregister: insldr rd=0,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tec type ASSIGN
findregister: insldr rd=1,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tec type ASSIGN
findregister: insldr rd=2,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=3,r1=11,r2 offset=0,op2type=1, insefft=0
tac type IFEQ
tac type GOTO
tac type LABELDF
tec type ASSIGN
findregister: insldr rd=4,r1=11,r2 offset=0,op2type=1, insefft=0
tac type RETURN
tac type LABELDF
tec type ASSIGN
findregister: insldr rd=5,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=6,r1=11,r2 offset=0,op2type=1, insefft=0
tac type IFEQ
tac type GOTO
tac type LABELDF
tec type ASSIGN
findregister: insldr rd=8,r1=11,r2 offset=0,op2type=1, insefft=0
tac type RETURN
tac type LABELDF
tac type LABELDF
tec type ASSIGN
findregister: insldr rd=9,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type IFGT
tac type GOTO
tac type LABELDF
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ADD
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type SUB
compiler: ./ObjectCode/Arm.cpp:75: ARM::ARM(TACCode*, ScopeItem&): Assertion `code.dest.Type = VARIABLE' failed.
Aborted (core dumped)
