<int>
<id,n>
<;>
<int>
<id,fib>
<(>
<int>
<id,p>
<)>
<{>
<int>
<id,a>
<;>
<int>
<id,b>
<;>
<int>
<id,c>
<;>
<id,a>
<=>
Lval
<into>
ExpNumber:0
<;>
stmt1
<id,b>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<if>
<(>
<id,p>
<==>
Lval
<into>
ExpNumber:0
<)>
<{>
<return>
<into>
ExpNumber:0
<;>
<}>
<if>
<(>
<id,p>
<==>
Lval
<intd>
ExpNumber:0
<)>
<{>
<return>
<intd>
ExpNumber:0
<;>
<}>
<while>
<(>
<id,p>
<>>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,c>
<=>
Lval
<id,a>
<+>
Lval
<id,b>
<;>
Lval
stmt1
<id,a>
<=>
Lval
<id,b>
<;>
Lval
stmt1
<id,b>
<=>
Lval
<id,c>
<;>
Lval
stmt1
<id,p>
<=>
Lval
<id,p>
<->
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<id,c>
<;>
Lval
<}>
<int>
<id,main>
<(>
<)>
<{>
<id,n>
<=>
Lval
<id,getint>
<(>
<)>
<;>
stmt1
<int>
<id,res>
<;>
<id,res>
<=>
Lval
<id,fib>
<(>
<id,n>
<)>
Lval
<;>
stmt1
<return>
<id,res>
<;>
Lval
<}>
CompUnits (1)
  VarDecl (1)
    IDENTIFIER n
  CompUnits (2)
    FuncDef (2)
      FuncFParam (2)
      Block (3)
        BlockItems (3)
          VarDecl (3)
            IDENTIFIER a
          BlockItems (4)
            VarDecl (4)
              IDENTIFIER b
            BlockItems (5)
              VarDecl (5)
                IDENTIFIER c
              BlockItems (6)
                Lval_Opassign_Stmt (6)
                  LVal (6)
                    IDENTIFIER a
                    ArrayExps (6)
                  IntConst (6)
                    CONSTANTOCT: 0
                BlockItems (7)
                  Lval_Opassign_Stmt (7)
                    LVal (7)
                      IDENTIFIER b
                      ArrayExps (7)
                    IntConst (7)
                      CONSTANTINTD: 1
                  BlockItems (8)
                    IF_Stmt (8)
                      Cond (8)
                        OPEQUAL (8)
                          LVal_EXP (8)
                            LVal (8)
                              IDENTIFIER p
                              ArrayExps (8)
                          IntConst (8)
                            CONSTANTOCT: 0
                      Block_Stmt (9)
                        Block (9)
                          BlockItems (9)
                            Return_Stmt (9)
                              IntConst (9)
                                CONSTANTOCT: 0
                    BlockItems (11)
                      IF_Stmt (11)
                        Cond (11)
                          OPEQUAL (11)
                            LVal_EXP (11)
                              LVal (11)
                                IDENTIFIER p
                                ArrayExps (11)
                            IntConst (11)
                              CONSTANTINTD: 1
                        Block_Stmt (12)
                          Block (12)
                            BlockItems (12)
                              Return_Stmt (12)
                                IntConst (12)
                                  CONSTANTINTD: 1
                      BlockItems (14)
                        While_Stmt (14)
                          Cond (14)
                            OPGREAT (14)
                              LVal_EXP (14)
                                LVal (14)
                                  IDENTIFIER p
                                  ArrayExps (14)
                              IntConst (14)
                                CONSTANTINTD: 1
                          Block_Stmt (15)
                            Block (15)
                              BlockItems (15)
                                Lval_Opassign_Stmt (15)
                                  LVal (15)
                                    IDENTIFIER c
                                    ArrayExps (15)
                                  PLUSExp (15)
                                    LVal_EXP (15)
                                      LVal (15)
                                        IDENTIFIER a
                                        ArrayExps (15)
                                    LVal_EXP (15)
                                      LVal (15)
                                        IDENTIFIER b
                                        ArrayExps (15)
                                BlockItems (16)
                                  Lval_Opassign_Stmt (16)
                                    LVal (16)
                                      IDENTIFIER a
                                      ArrayExps (16)
                                    LVal_EXP (16)
                                      LVal (16)
                                        IDENTIFIER b
                                        ArrayExps (16)
                                  BlockItems (17)
                                    Lval_Opassign_Stmt (17)
                                      LVal (17)
                                        IDENTIFIER b
                                        ArrayExps (17)
                                      LVal_EXP (17)
                                        LVal (17)
                                          IDENTIFIER c
                                          ArrayExps (17)
                                    BlockItems (18)
                                      Lval_Opassign_Stmt (18)
                                        LVal (18)
                                          IDENTIFIER p
                                          ArrayExps (18)
                                        MINUSExp (18)
                                          LVal_EXP (18)
                                            LVal (18)
                                              IDENTIFIER p
                                              ArrayExps (18)
                                          IntConst (18)
                                            CONSTANTINTD: 1
                        BlockItems (20)
                          Return_Stmt (20)
                            LVal_EXP (20)
                              LVal (20)
                                IDENTIFIER c
                                ArrayExps (20)
    CompUnits (22)
      FuncDef (22)
        NOFParam (22)
        Block (23)
          BlockItems (23)
            Lval_Opassign_Stmt (23)
              LVal (23)
                IDENTIFIER n
                ArrayExps (23)
              funcall (23)
                IDENTIFIER getint
            BlockItems (24)
              VarDecl (24)
                IDENTIFIER res
              BlockItems (25)
                Lval_Opassign_Stmt (25)
                  LVal (25)
                    IDENTIFIER res
                    ArrayExps (25)
                  funcall (25)
                    IDENTIFIER fib
                    FuncRParams (25)
                      LVal_EXP (25)
                        LVal (25)
                          IDENTIFIER n
                          ArrayExps (25)
                BlockItems (26)
                  Return_Stmt (26)
                    LVal_EXP (26)
                      LVal (26)
                        IDENTIFIER res
                        ArrayExps (26)


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
n              Variable       TYPEINTEGER    NULL           
fib            Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:fib
ID             category       type           depictor
              
p              Variable       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Local:fib
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
c              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
res            Variable       TYPEINTEGER    NULL           
===========================================================
456
789
789
456
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
456
789
789
789
456

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   2)	FUNCTION fib :
  2  (at line   2)	PARAM p
  3  (at line   6)	_t0 := #0
  4  (at line   6)	a := _t0
  5  (at line   7)	_t1 := #1
  6  (at line   7)	b := _t1
  7  (at line   8)	_t2 := p
  8  (at line   8)	_t5 := #0
  9  (at line   8)	IF _t2 = _t5 GOTO label0
 10  (at line   8)	GOTO label1
 11  (at line   8)	LABEL label0 :
 12  (at line   9)	_t6 := #0
 13  (at line   9)	RETURN _t6
 14  (at line   8)	LABEL label1 :
 15  (at line  11)	_t7 := p
 16  (at line  11)	_t10 := #1
 17  (at line  11)	IF _t7 = _t10 GOTO label2
 18  (at line  11)	GOTO label3
 19  (at line  11)	LABEL label2 :
 20  (at line  12)	_t11 := #1
 21  (at line  12)	RETURN _t11
 22  (at line  11)	LABEL label3 :
 23  (at line  14)	LABEL label4 :
 24  (at line  14)	_t12 := p
 25  (at line  14)	_t15 := #1
 26  (at line  14)	IF _t12 > _t15 GOTO label5
 27  (at line  14)	GOTO label6
 28  (at line  14)	LABEL label5 :
 29  (at line  15)	_t17 := a
 30  (at line  15)	_t18 := b
 31  (at line  15)	_t16 := _t17 + _t18
 32  (at line  15)	c := _t16
 33  (at line  16)	_t19 := b
 34  (at line  16)	a := _t19
 35  (at line  17)	_t20 := c
 36  (at line  17)	b := _t20
 37  (at line  18)	_t22 := p
 38  (at line  18)	_t23 := #1
 39  (at line  18)	_t21 := _t22 - _t23
 40  (at line  18)	p := _t21
 41  (at line  14)	GOTO label4
 42  (at line  14)	LABEL label6 :
 43  (at line  20)	_t24 := c
 44  (at line  20)	RETURN _t24

 45  (at line  22)	FUNCTION main :
 46  (at line  23)	_t25 := CALL getint
 47  (at line  23)	n := _t25
 48  (at line  25)	_t27 := n
 49  (at line  25)	ARG _t27
 50  (at line  25)	_t26 := CALL fib
 51  (at line  25)	res := _t26
 52  (at line  26)	_t28 := res
 53  (at line  26)	RETURN _t28


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
n              Variable       TYPEINTEGER    NULL           
fib            Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:fib
ID             category       type           depictor
              
p              Variable       TYPEINTEGER    NOT NULL       
scope type is wrong
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
scope type is wrong
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
Variable offset count+4 :a
Variable offset count+4 :b
Variable offset count+4 :c
Variable offset count+4 :a
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t0
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t1
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t2
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t5
Variable offset count+4 :_t6
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t7
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t10
Variable offset count+4 :_t11
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t12
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t15
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t16
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t17
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t18
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t19
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t20
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t21
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t22
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t23
Variable offset count+4 :_t24
tac type ASSIGN
 assign 0 to tegisteruserreg0contains0xbd0a60
userreg1contains0
userreg2contains0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
0
userreg0contains0xbdaf20
tac type ASSIGN
userreg0contains0xbdaf20
userreg1contains0
userreg2contains0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0xbdaf20
tac type ASSIGN
 assign 1 to tegisteruserreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
2
userreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
tac type ASSIGN
userreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
userreg3contains0
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
tac type ASSIGN
userreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
userreg3contains0xbd0e70
userreg4contains0
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
userreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
userreg3contains0xbd0e70
userreg4contains0xbdb890
userreg5contains0
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
findregister: insldr rd=5,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ASSIGN
 assign 0 to tegisteruserreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
userreg3contains0xbd0e70
userreg4contains0xbdb890
userreg5contains0xbd0a60
userreg6contains0
userreg8contains0
userreg9contains0
userreg10contains0
6
userreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
userreg3contains0xbd0e70
userreg4contains0xbdb890
userreg5contains0xbd0a60
userreg6contains0xbdb9a0
tac type IFEQ
userreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
userreg3contains0xbd0e70
userreg4contains0xbdb890
userreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
userreg3contains0xbd0e70
userreg4contains0xbdb890
userreg5contains0xbd0a60
userreg6contains0xbdb9a0
tac type GOTO
Goto string B L1

tac type LABELDF
L0:

tac type ASSIGN
 assign 0 to tegisteruserreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
userreg3contains0xbd0e70
userreg4contains0xbdb890
userreg5contains0xbd0a60
userreg6contains0xbdb9a0
userreg8contains0
userreg9contains0
userreg10contains0
8
userreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
userreg3contains0xbd0e70
userreg4contains0xbdb890
userreg5contains0xbd0a60
userreg6contains0xbdb9a0
userreg8contains0xbdbc30
tac type RETURN
userreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
userreg3contains0xbd0e70
userreg4contains0xbdb890
userreg5contains0xbd0a60
userreg6contains0xbdb9a0
userreg8contains0xbdbc30
tac type ARG
tac type LABELDF
L1:

tac type ASSIGN
userreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
userreg3contains0xbd0e70
userreg4contains0xbdb890
userreg5contains0xbd0a60
userreg6contains0xbdb9a0
userreg8contains0xbdbc30
userreg9contains0
userreg10contains0
userreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
userreg3contains0xbd0e70
userreg4contains0xbdb890
userreg5contains0xbd0a60
tac type ASSIGN
 assign 1 to tegisteruserreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
userreg3contains0xbd0e70
userreg4contains0xbdb890
userreg5contains0xbd0a60
userreg6contains0xbdb9a0
userreg8contains0xbdbc30
userreg9contains0xbdbe00
userreg10contains0
10
userreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
userreg3contains0xbd0e70
userreg4contains0xbdb890
userreg5contains0xbd0a60
userreg6contains0xbdb9a0
userreg8contains0xbdbc30
userreg9contains0xbdbe00
userreg10contains0xbdbf10
tac type IFEQ
userreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
userreg3contains0xbd0e70
userreg4contains0xbdb890
userreg5contains0xbd0a60
userreg6contains0xbdb9a0
userreg8contains0xbdbc30
userreg9contains0xbdbe00
userreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
userreg3contains0xbd0e70
userreg4contains0xbdb890
userreg5contains0xbd0a60
userreg6contains0xbdb9a0
userreg8contains0xbdbc30
userreg9contains0xbdbe00
userreg10contains0xbdbf10
tac type GOTO
Goto string B L3

tac type LABELDF
L2:

tac type ASSIGN
 assign 1 to tegisteruserreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
userreg3contains0xbd0e70
userreg4contains0xbdb890
userreg5contains0xbd0a60
userreg6contains0xbdb9a0
userreg8contains0xbdbc30
userreg9contains0xbdbe00
userreg10contains0xbdbf10
Store Register in getregisterNoLoad variable
10
userreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
userreg3contains0xbd0e70
userreg4contains0xbdb890
userreg5contains0xbd0a60
userreg6contains0xbdb9a0
userreg8contains0xbdbc30
userreg9contains0xbdbe00
userreg10contains0xbdc1a0
tac type RETURN
userreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
userreg3contains0xbd0e70
userreg4contains0xbdb890
userreg5contains0xbd0a60
userreg6contains0xbdb9a0
userreg8contains0xbdbc30
userreg9contains0xbdbe00
userreg10contains0xbdc1a0
tac type ARG
tac type LABELDF
L3:

tac type LABELDF
L4:

tac type ASSIGN
userreg0contains0xbdaf20
userreg1contains0xbd0c00
userreg2contains0xbdb120
userreg3contains0xbd0e70
userreg4contains0xbdb890
userreg5contains0xbd0a60
userreg6contains0xbdb9a0
userreg8contains0xbdbc30
userreg9contains0xbdbe00
userreg10contains0xbdc1a0
Store Register in getregisterNoLoad variable
register:-1
terminate called after throwing an instance of 'std::runtime_error'
  what():  no variable in this register
Aborted (core dumped)
