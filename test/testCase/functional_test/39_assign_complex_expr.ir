-o<int>
<id,main>
<(>
<)>
<{>
<int>
<id,a>
<;>
<int>
<id,b>
<;>
<int>
<id,c>
<;>
<int>
<id,d>
<;>
<int>
<id,result>
<;>
<id,a>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,b>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,c>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,d>
<=>
Lval
<->
<intd>
ExpNumber:0
<;>
stmt1
<id,result>
<=>
Lval
<(>
<id,d>
<*>
Lval
<intd>
ExpNumber:0
</>
<intd>
ExpNumber:0
<)>
<+>
<(>
<id,a>
<->
Lval
<id,b>
<)>
Lval
<->
<->
<(>
<id,c>
<+>
Lval
<intd>
ExpNumber:0
<)>
<%>
<intd>
ExpNumber:0
<;>
stmt1
<id,putint>
<(>
<id,result>
<)>
Lval
<;>
<id,result>
<=>
Lval
<(>
<(>
<id,d>
<%>
Lval
<intd>
ExpNumber:0
<+>
<intd>
ExpNumber:0
<)>
<+>
<->
<(>
<id,a>
<->
Lval
<id,b>
<)>
Lval
<->
<->
<(>
<(>
<id,c>
<+>
Lval
<intd>
ExpNumber:0
<)>
<%>
<intd>
ExpNumber:0
<)>
<)>
<;>
stmt1
<id,result>
<=>
Lval
<id,result>
<+>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,putint>
<(>
<id,result>
<)>
Lval
<;>
<return>
<into>
ExpNumber:0
<;>
<}>
CompUnits (2)
  FuncDef (2)
    NOFParam (2)
    Block (3)
      BlockItems (3)
        VarDecl (3)
          IDENTIFIER a
        BlockItems (4)
          VarDecl (4)
            IDENTIFIER b
          BlockItems (5)
            VarDecl (5)
              IDENTIFIER c
            BlockItems (6)
              VarDecl (6)
                IDENTIFIER d
              BlockItems (7)
                VarDecl (7)
                  IDENTIFIER result
                BlockItems (8)
                  Lval_Opassign_Stmt (8)
                    LVal (8)
                      IDENTIFIER a
                      ArrayExps (8)
                    IntConst (8)
                      CONSTANTINTD: 5
                  BlockItems (9)
                    Lval_Opassign_Stmt (9)
                      LVal (9)
                        IDENTIFIER b
                        ArrayExps (9)
                      IntConst (9)
                        CONSTANTINTD: 5
                    BlockItems (10)
                      Lval_Opassign_Stmt (10)
                        LVal (10)
                          IDENTIFIER c
                          ArrayExps (10)
                        IntConst (10)
                          CONSTANTINTD: 1
                      BlockItems (11)
                        Lval_Opassign_Stmt (11)
                          LVal (11)
                            IDENTIFIER d
                            ArrayExps (11)
                          OPMINUS_Exp (11)
                            IntConst (11)
                              CONSTANTINTD: 2
                        BlockItems (12)
                          Lval_Opassign_Stmt (12)
                            LVal (12)
                              IDENTIFIER result
                              ArrayExps (12)
                            MINUSExp (12)
                              PLUSExp (12)
                                (Exp) (12)
                                  DIVIDEExp (12)
                                    MulExp (12)
                                      LVal_EXP (12)
                                        LVal (12)
                                          IDENTIFIER d
                                          ArrayExps (12)
                                      IntConst (12)
                                        CONSTANTINTD: 1
                                    IntConst (12)
                                      CONSTANTINTD: 2
                                (Exp) (12)
                                  MINUSExp (12)
                                    LVal_EXP (12)
                                      LVal (12)
                                        IDENTIFIER a
                                        ArrayExps (12)
                                    LVal_EXP (12)
                                      LVal (12)
                                        IDENTIFIER b
                                        ArrayExps (12)
                              OPMINUS_Exp (12)
                                MODExp (12)
                                  (Exp) (12)
                                    PLUSExp (12)
                                      LVal_EXP (12)
                                        LVal (12)
                                          IDENTIFIER c
                                          ArrayExps (12)
                                      IntConst (12)
                                        CONSTANTINTD: 3
                                  IntConst (12)
                                    CONSTANTINTD: 2
                          BlockItems (13)
                            Exp_Stmt (13)
                              funcall (13)
                                IDENTIFIER putint
                                FuncRParams (13)
                                  LVal_EXP (13)
                                    LVal (13)
                                      IDENTIFIER result
                                      ArrayExps (13)
                            BlockItems (14)
                              Lval_Opassign_Stmt (14)
                                LVal (14)
                                  IDENTIFIER result
                                  ArrayExps (14)
                                (Exp) (14)
                                  MINUSExp (14)
                                    PLUSExp (14)
                                      (Exp) (14)
                                        PLUSExp (14)
                                          MODExp (14)
                                            LVal_EXP (14)
                                              LVal (14)
                                                IDENTIFIER d
                                                ArrayExps (14)
                                            IntConst (14)
                                              CONSTANTINTD: 2
                                          IntConst (14)
                                            CONSTANTINTD: 67
                                      OPMINUS_Exp (14)
                                        (Exp) (14)
                                          MINUSExp (14)
                                            LVal_EXP (14)
                                              LVal (14)
                                                IDENTIFIER a
                                                ArrayExps (14)
                                            LVal_EXP (14)
                                              LVal (14)
                                                IDENTIFIER b
                                                ArrayExps (14)
                                    OPMINUS_Exp (14)
                                      (Exp) (14)
                                        MODExp (14)
                                          (Exp) (14)
                                            PLUSExp (14)
                                              LVal_EXP (14)
                                                LVal (14)
                                                  IDENTIFIER c
                                                  ArrayExps (14)
                                              IntConst (14)
                                                CONSTANTINTD: 2
                                          IntConst (14)
                                            CONSTANTINTD: 2
                              BlockItems (15)
                                Lval_Opassign_Stmt (15)
                                  LVal (15)
                                    IDENTIFIER result
                                    ArrayExps (15)
                                  PLUSExp (15)
                                    LVal_EXP (15)
                                      LVal (15)
                                        IDENTIFIER result
                                        ArrayExps (15)
                                    IntConst (15)
                                      CONSTANTINTD: 3
                                BlockItems (16)
                                  Exp_Stmt (16)
                                    funcall (16)
                                      IDENTIFIER putint
                                      FuncRParams (16)
                                        LVal_EXP (16)
                                          LVal (16)
                                            IDENTIFIER result
                                            ArrayExps (16)
                                  BlockItems (17)
                                    Return_Stmt (17)
                                      IntConst (17)
                                        CONSTANTOCT: 0


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
c              Variable       TYPEINTEGER    NULL           
d              Variable       TYPEINTEGER    NULL           
result         Variable       TYPEINTEGER    NULL           
===========================================================
456
789
789
456
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   2)	FUNCTION main :
  2  (at line   8)	_t0 := #5
  3  (at line   8)	a := _t0
  4  (at line   9)	_t1 := #5
  5  (at line   9)	b := _t1
  6  (at line  10)	_t2 := #1
  7  (at line  10)	c := _t2
  8  (at line  11)	_t4 := #2
  9  (at line  11)	_t3 := #0 - _t4
 10  (at line  11)	d := _t3
 11  (at line  12)	_t13 := d
 12  (at line  12)	_t14 := #1
 13  (at line  12)	_t11 := _t13 * _t14
 14  (at line  12)	_t12 := #2
 15  (at line  12)	_t10 := _t11 / _t12
 16  (at line  12)	_t8 := _t10
 17  (at line  12)	_t16 := a
 18  (at line  12)	_t17 := b
 19  (at line  12)	_t15 := _t16 - _t17
 20  (at line  12)	_t9 := _t15
 21  (at line  12)	_t6 := _t8 + _t9
 22  (at line  12)	_t22 := c
 23  (at line  12)	_t23 := #3
 24  (at line  12)	_t21 := _t22 + _t23
 25  (at line  12)	_t19 := _t21
 26  (at line  12)	_t20 := #2
 27  (at line  12)	_t18 := _t19 % _t20
 28  (at line  12)	_t7 := #0 - _t18
 29  (at line  12)	_t5 := _t6 - _t7
 30  (at line  12)	result := _t5
 31  (at line  13)	_t24 := result
 32  (at line  13)	ARG _t24
 33  (at line  13)	CALL putint
 34  (at line  14)	_t34 := d
 35  (at line  14)	_t35 := #2
 36  (at line  14)	_t32 := _t34 % _t35
 37  (at line  14)	_t33 := #67
 38  (at line  14)	_t31 := _t32 + _t33
 39  (at line  14)	_t29 := _t31
 40  (at line  14)	_t38 := a
 41  (at line  14)	_t39 := b
 42  (at line  14)	_t37 := _t38 - _t39
 43  (at line  14)	_t36 := _t37
 44  (at line  14)	_t30 := #0 - _t36
 45  (at line  14)	_t27 := _t29 + _t30
 46  (at line  14)	_t45 := c
 47  (at line  14)	_t46 := #2
 48  (at line  14)	_t44 := _t45 + _t46
 49  (at line  14)	_t42 := _t44
 50  (at line  14)	_t43 := #2
 51  (at line  14)	_t41 := _t42 % _t43
 52  (at line  14)	_t40 := _t41
 53  (at line  14)	_t28 := #0 - _t40
 54  (at line  14)	_t26 := _t27 - _t28
 55  (at line  14)	_t25 := _t26
 56  (at line  14)	result := _t25
 57  (at line  15)	_t48 := result
 58  (at line  15)	_t49 := #3
 59  (at line  15)	_t47 := _t48 + _t49
 60  (at line  15)	result := _t47
 61  (at line  16)	_t50 := result
 62  (at line  16)	ARG _t50
 63  (at line  16)	CALL putint
 64  (at line  17)	_t51 := #0
 65  (at line  17)	RETURN _t51


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
scope type is wrong
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
Variable offset count+4 :a
Variable offset count+4 :b
Variable offset count+4 :c
Variable offset count+4 :d
Variable offset count+4 :result
Variable offset count+4 :a
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t0
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t1
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t2
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t3
Variable offset count+4 :_t4
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t5
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t6
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t7
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t8
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t9
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t10
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t11
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t12
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t13
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t14
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t15
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t16
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t17
Variable offset count+4 :_t18
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t19
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t20
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t21
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t22
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t23
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t24
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t25
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t26
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t27
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t28
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t29
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t30
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t31
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t32
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t33
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t34
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t35
Variable offset count+4 :_t36
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t37
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t38
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t39
Variable offset count+4 :_t40
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t41
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t42
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t43
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t44
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t45
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t46
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t47
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t48
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t49
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t50
Variable offset count+4 :_t51
tac type ASSIGN
tac type ASSIGN
tac type ASSIGN
tac type ASSIGN
tac type ASSIGN
tac type ASSIGN
tac type ASSIGN
tac type SUB
tac type ASSIGN
tac type ASSIGN
tac type ASSIGN
Store Register in getregisterNoLoad variable
tac type MUL
Store Register in getregisterNoLoad variable
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
Store Register in getregister variable
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ASSIGN
Store Register in getregisterNoLoad variable
tac type DIV
compiler: ./ObjectCode/Arm.cpp:571: ARM::ARM(TACCode *, ScopeItem *, vector<ScopeItem> &): Assertion `code.dest.Type = VARIABLE' failed.
Aborted (core dumped)
