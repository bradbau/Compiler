--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 101 ("if")
--accepting rule at line 80 ("(")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 95 (">")
--accepting rule at line 111 ("0")
--accepting rule at line 114 (" ")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 ("	")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
<int>
<id,a>
<;>
<int>
<id,main>
<(>
<)>
<{>
<id,a>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<if>
<(>
<id,a>
<>>
Lval
<into>
ExpNumber:0
<)>
<{>
<return>
<intd>
ExpNumber:0
<;>
<}>
<return>
<into>
ExpNumber:0
<;>
<}>
CompUnits (1)
  VarDecl (1)
    IDENTIFIER a
  CompUnits (3)
    FuncDef (3)
      NOFParam (3)
      Block (4)
        BlockItems (4)
          Lval_Opassign_Stmt (4)
            LVal (4)
              IDENTIFIER a
              ArrayExps (4)
            IntConst (4)
              CONSTANTINTD: 10
          BlockItems (5)
            IF_Stmt (5)
              Cond (5)
                OPGREAT (5)
                  LVal_EXP (5)
                    LVal (5)
                      IDENTIFIER a
                      ArrayExps (5)
                  IntConst (5)
                    CONSTANTOCT: 0
              Block_Stmt (6)
                Block (6)
                  BlockItems (6)
                    Return_Stmt (6)
                      IntConst (6)
                        CONSTANTINTD: 1
            BlockItems (8)
              Return_Stmt (8)
                IntConst (8)
                  CONSTANTOCT: 0


===========================================================
Global
ID             category       type           depictor
               
a              Variable       TYPEINTEGER    NULL           
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:main
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
TraverseScopeStack no result

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   3)	FUNCTION main :
  2  (at line   4)	_t6 := #10
  3  (at line   4)	 := _t6
  4  (at line   5)	_t1 := 
  5  (at line   5)	_t4 := #0
  6  (at line   5)	IF _t1 > _t4 GOTO label0
  7  (at line   5)	GOTO label1
  8  (at line   5)	LABEL label0 :
  9  (at line   6)	_t5 := #1
 10  (at line   6)	RETURN _t5
 11  (at line   5)	LABEL label1 :
 12  (at line   8)	_t0 := #0
 13  (at line   8)	RETURN _t0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
tec type ASSIGN
tec type ASSIGN
tec type ASSIGN
tec type ASSIGN
tac type IFGT
tac type GOTO
tac type LABELDF
tec type ASSIGN
tac type RETURN
tac type LABELDF
tec type ASSIGN
tac type RETURN
tac build complete
Segmentation fault (core dumped)
