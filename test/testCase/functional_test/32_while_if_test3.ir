--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("deepWhileBr")
--accepting rule at line 80 ("(")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 76 (",")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("75")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("42")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 101 ("if")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("100")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 101 ("if")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 95 (">")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("99")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("e")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("e")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("d")
--accepting rule at line 114 (" ")
--accepting rule at line 86 ("*")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 101 ("if")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 109 ("1")
<int>
<id,deepWhileBr>
<(>
<int>
<id,a>
<,>
<int>
<id,b>
<)>
<{>
<int>
<id,c>
<;>
<id,c>
<=>
Lval
<id,a>
<+>
Lval
<id,b>
<;>
Lval
stmt1
<while>
<(>
<id,c>
<<>
Lval
<intd>
ExpNumber:0
<)>
<{>
<int>
<id,d>
<;>
<id,d>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<if>
<(>
<id,c>
<<>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,c>
<=>
Lval
<id,c>
<+>
Lval
<id,d>
<;>
Lval
stmt1
<if>
<(>
<id,c>
<>>
Lval
<intd>
ExpNumber:0
<)>
<{>
<int>
<id,e>
<;>
<id,e>
<=>
Lval
<id,d>
<*>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<if>
<(>
<intd>
ExpNumb--accepting rule at line 114 (" ")
--accepting rule at line 93 ("==")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("c")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("e")
--accepting rule at line 114 (" ")
--accepting rule at line 86 ("*")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("c")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("p")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("p")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("deepWhileBr")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("p")
--accepting rule at line 76 (",")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("p")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
er:0
<==>
<intd>
ExpNumber:0
<)>
<{>
<id,c>
<=>
Lval
<id,e>
<*>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<}>
<}>
<}>
<return>
<(>
<id,c>
<)>
Lval
<;>
<}>
<int>
<id,main>
<(>
<)>
<{>
<int>
<id,p>
<;>
<id,p>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<return>
<id,deepWhileBr>
<(>
<id,p>
<,>
Lval
<id,p>
<)>
Lval
<;>
<}>
CompUnits (1)
  FuncDef (1)
    FuncFParams (1)
      FuncFParam (1)
      FuncFParam (1)
    Block (2)
      BlockItems (2)
        VarDecl (2)
          IDENTIFIER c
        BlockItems (3)
          Lval_Opassign_Stmt (3)
            LVal (3)
              IDENTIFIER c
              ArrayExps (3)
            PLUSExp (3)
              LVal_EXP (3)
                LVal (3)
                  IDENTIFIER a
                  ArrayExps (3)
              LVal_EXP (3)
                LVal (3)
                  IDENTIFIER b
                  ArrayExps (3)
          BlockItems (4)
            While_Stmt (4)
              Cond (4)
                OPLIGHT (4)
                  LVal_EXP (4)
                    LVal (4)
                      IDENTIFIER c
                      ArrayExps (4)
                  IntConst (4)
                    CONSTANTINTD: 75
              Block_Stmt (5)
                Block (5)
                  BlockItems (5)
                    VarDecl (5)
                      IDENTIFIER d
                    BlockItems (6)
                      Lval_Opassign_Stmt (6)
                        LVal (6)
                          IDENTIFIER d
                          ArrayExps (6)
                        IntConst (6)
                          CONSTANTINTD: 42
                      BlockItems (7)
                        IF_Stmt (7)
                          Cond (7)
                            OPLIGHT (7)
                              LVal_EXP (7)
                                LVal (7)
                                  IDENTIFIER c
                                  ArrayExps (7)
                              IntConst (7)
                                CONSTANTINTD: 100
                          Block_Stmt (8)
                            Block (8)
                              BlockItems (8)
                                Lval_Opassign_Stmt (8)
                                  LVal (8)
                                    IDENTIFIER c
                                    ArrayExps (8)
                                  PLUSExp (8)
                                    LVal_EXP (8)
                                      LVal (8)
                                        IDENTIFIER c
                                        ArrayExps (8)
                                    LVal_EXP (8)
                                      LVal (8)
                                        IDENTIFIER d
                                        ArrayExps (8)
                                BlockItems (9)
                                  IF_Stmt (9)
                                    Cond (9)
                                      OPGREAT (9)
                                        LVal_EXP (9)
                                          LVal (9)
                                            IDENTIFIER c
                                            ArrayExps (9)
                                        IntConst (9)
                                          CONSTANTINTD: 99
                                    Block_Stmt (10)
                                      Block (10)
                                        BlockItems (10)
                                          VarDecl (10)
                                            IDENTIFIER e
                                          BlockItems (11)
                                            Lval_Opassign_Stmt (11)
                                              LVal (11)
                                                IDENTIFIER e
                                                ArrayExps (11)
                                              MulExp (11)
                                                LVal_EXP (11)
                                                  LVal (11)
                                                    IDENTIFIER d
                                                    ArrayExps (11)
                                                IntConst (11)
                                                  CONSTANTINTD: 2
                                            BlockItems (12)
                                              IF_Stmt (12)
                                                Cond (12)
                                                  OPEQUAL (12)
                                                    IntConst (12)
                                                      CONSTANTINTD: 1
                                                    IntConst (12)
                                                      CONSTANTINTD: 1
                                                Block_Stmt (13)
                                                  Block (13)
                                                    BlockItems (13)
                                                      Lval_Opassign_Stmt (13)
                                                        LVal (13)
                                                          IDENTIFIER c
                                                          ArrayExps (13)
                                                        MulExp (13)
                                                          LVal_EXP (13)
                                                            LVal (13)
                                                              IDENTIFIER e
                                                              ArrayExps (13)
                                                          IntConst (13)
                                                            CONSTANTINTD: 2
            BlockItems (18)
              Return_Stmt (18)
                (Exp) (18)
                  LVal_EXP (18)
                    LVal (18)
                      IDENTIFIER c
                      ArrayExps (18)
  CompUnits (21)
    FuncDef (21)
      NOFParam (21)
      Block (22)
        BlockItems (22)
          VarDecl (22)
            IDENTIFIER p
          BlockItems (23)
            Lval_Opassign_Stmt (23)
              LVal (23)
                IDENTIFIER p
                ArrayExps (23)
              IntConst (23)
                CONSTANTINTD: 2
            BlockItems (24)
              Return_Stmt (24)
                funcall (24)
                  IDENTIFIER deepWhileBr
                  FuncRParams (24)
                    LVal_EXP (24)
                      LVal (24)
                        IDENTIFIER p
                        ArrayExps (24)
                    Exps (24)
                      LVal_EXP (24)
                        LVal (24)
                          IDENTIFIER p
                          ArrayExps (24)


===========================================================
Global
ID             category       type           depictor
               
deepWhileBr    Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:deepWhileBr
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NOT NULL       
b              Variable       TYPEINTEGER    NOT NULL       
===========================================================
Local:deepWhileBr
ID             category       type           depictor
              
c              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
===========================================================
Local:block
ID             category       type           depictor
              
d              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NOT NULL       
===========================================================
Local:block
ID             category       type           depictor
              
e              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:main
ID             category       type           depictor
              
p              Variable       TYPEINTEGER    NULL           
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   1)	FUNCTION deepWhileBr :
  2  (at line   1)	PARAM a
  3  (at line   1)	PARAM b
  4  (at line   3)	_t33 := 
  5  (at line   3)	_t34 := 
  6  (at line   3)	_t32 := _t33 + _t34
  7  (at line   3)	 := _t32
  8  (at line   4)	LABEL label0 :
  9  (at line   4)	_t6 := 
 10  (at line   4)	_t9 := #75
 11  (at line   4)	IF _t6 < _t9 GOTO label1
 12  (at line   4)	GOTO label2
 13  (at line   4)	LABEL label1 :
 14  (at line   6)	_t31 := #42
 15  (at line   6)	 := _t31
 16  (at line   7)	_t10 := 
 17  (at line   7)	_t13 := #100
 18  (at line   7)	IF _t10 < _t13 GOTO label3
 19  (at line   7)	GOTO label4
 20  (at line   7)	LABEL label3 :
 21  (at line   8)	_t29 := 
 22  (at line   8)	_t30 := 
 23  (at line   8)	_t28 := _t29 + _t30
 24  (at line   8)	 := _t28
 25  (at line   9)	_t14 := 
 26  (at line   9)	_t17 := #99
 27  (at line   9)	IF _t14 > _t17 GOTO label5
 28  (at line   9)	GOTO label6
 29  (at line   9)	LABEL label5 :
 30  (at line  11)	_t26 := 
 31  (at line  11)	_t27 := #2
 32  (at line  11)	_t25 := _t26 * _t27
 33  (at line  11)	 := _t25
 34  (at line  12)	_t18 := #1
 35  (at line  12)	_t21 := #1
 36  (at line  12)	IF _t18 = _t21 GOTO label7
 37  (at line  12)	GOTO label8
 38  (at line  12)	LABEL label7 :
 39  (at line  13)	_t23 := 
 40  (at line  13)	_t24 := #2
 41  (at line  13)	_t22 := _t23 * _t24
 42  (at line  13)	 := _t22
 43  (at line  12)	LABEL label8 :
 44  (at line   9)	LABEL label6 :
 45  (at line   7)	LABEL label4 :
 46  (at line   4)	GOTO label0
 47  (at line   4)	LABEL label2 :
 48  (at line  18)	_t5 := 
 49  (at line  18)	_t4 := _t5
 50  (at line  18)	RETURN _t4

 51  (at line  21)	FUNCTION main :
 52  (at line  23)	_t3 := #2
 53  (at line  23)	 := _t3
 54  (at line  24)	_t1 := 
 55  (at line  24)	_t2 := 
 56  (at line  24)	ARG _t2
 57  (at line  24)	ARG _t1
 58  (at line  24)	_t0 := CALL deepWhileBr
 59  (at line  24)	RETURN _t0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
tec type ASSIGN
tec type ASSIGN
tac type ADD
tec type ASSIGN
tac type LABELDF
tec type ASSIGN
tec type ASSIGN
tac type IFLT
tac type GOTO
tac type LABELDF
tec type ASSIGN
tec type ASSIGN
tec type ASSIGN
tec type ASSIGN
tac type IFLT
tac type GOTO
tac type LABELDF
tec type ASSIGN
tec type ASSIGN
tac type ADD
tec type ASSIGN
tec type ASSIGN
tec type ASSIGN
tac type IFGT
tac type GOTO
tac type LABELDF
tec type ASSIGN
tec type ASSIGN
tac type MUL
compiler: ./ObjectCode/Arm.cpp:89: ARM::ARM(TACCode*, ScopeItem&): Assertion `code.dest.Type = VARIABLE' failed.
Aborted (core dumped)
