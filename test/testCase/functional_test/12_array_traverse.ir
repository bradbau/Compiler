--(end of buffer or a NUL)
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("a")
--accepting rule at line 90 ("[")
--accepting rule at line 125 ("3")
--accepting rule at line 91 ("]")
--accepting rule at line 90 ("[")
--accepting rule at line 125 ("4")
--accepting rule at line 91 ("]")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 131 ("
")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("main")
--accepting rule at line 88 ("(")
--accepting rule at line 89 (")")
--accepting rule at line 86 ("{")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("i")
--accepting rule at line 97 ("=")
--accepting rule at line 127 ("0")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("cnt")
--accepting rule at line 97 ("=")
--accepting rule at line 127 ("0")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 111 ("while")
--accepting rule at line 88 ("(")
--accepting rule at line 128 ("i")
--accepting rule at line 106 ("<=")
--accepting rule at line 125 ("3")
--accepting rule at line 92 ("+")
--accepting rule at line 125 ("4")
--accepting rule at line 93 ("-")
--accepting rule at line 125 ("2")
--accepting rule at line 89 (")")
--accepting rule at line 86 ("{")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("j")
--accepting rule at line 97 ("=")
--accepting rule at line 128 ("i")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 111 ("while")
--accepting rule at line 88 ("(")
--accepting rule at line 128 ("j")
--accepting rule at line 105 (">=")
--accepting rule at line 127 ("0")
--accepting rule at line 89 (")")
--accepting rule at line 86 ("{")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 109 ("if")
--accepting rule at line 88 ("(")
--accepting rule at line 128 ("j")
--accepting rule at line 104 ("<")
<int>
<id,a>
<[>
VarDec<intd>
<]>
VarDec<[>
<intd>
<]>
VarDec<;>
VarDefVarDefsDeclCompUnit<int>
<id,main>
<(>
<)>
FuncFParams<{>
<int>
<id,i>
VarDec<=>
<into>
<;>
InitValVarDefVarDefsDeclBlockItem<int>
<id,cnt>
VarDec<=>
<into>
<;>
InitValVarDefVarDefsDeclBlockItem<while>
<(>
<id,i>
<<=>
ArrayExpsLval
<intd>
<+>
<intd>
<->
<intd>
<)>
Cond<{>
<int>
<id,j>
VarDec<=>
<id,i>
<;>
ArrayExpsLval
InitValVarDefVarDefsDeclBlockItem<while>
<(>
<id,j>
<>=>
ArrayExpsLval
<into>
<)>
Cond<{>
<if>
<(>
<id,j>
<<>
ArrayExpsL--accepting rule at line 125 ("4")
--accepting rule at line 98 ("&&")
--accepting rule at line 128 ("i")
--accepting rule at line 93 ("-")
--accepting rule at line 128 ("j")
--accepting rule at line 104 ("<")
--accepting rule at line 125 ("3")
--accepting rule at line 89 (")")
--accepting rule at line 86 ("{")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("a")
--accepting rule at line 90 ("[")
--accepting rule at line 128 ("i")
--accepting rule at line 93 ("-")
--accepting rule at line 128 ("j")
--accepting rule at line 91 ("]")
--accepting rule at line 90 ("[")
--accepting rule at line 128 ("j")
--accepting rule at line 91 ("]")
--accepting rule at line 97 ("=")
--accepting rule at line 128 ("cnt")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("cnt")
--accepting rule at line 97 ("=")
--accepting rule at line 125 ("1")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 87 ("}")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("j")
--accepting rule at line 97 ("=")
--accepting rule at line 128 ("j")
--accepting rule at line 93 ("-")
--accepting rule at line 125 ("1")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 87 ("}")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("i")
--accepting rule at line 97 ("=")
val
<intd>
<&&>
Cond<id,i>
<->
ArrayExpsLval
<id,j>
<<>
ArrayExpsLval
<intd>
<)>
CondCond<{>
<id,a>
<[>
<id,i>
<->
ArrayExpsLval
<id,j>
<]>
ArrayExpsLval
<[>
<id,j>
<]>
ArrayExpsLval
<=>
ArrayExpsArrayExpsArrayExpsLval
<id,cnt>
<;>
ArrayExpsLval
stmt1
BlockItem<id,cnt>
<=>
ArrayExpsLval
<intd>
<;>
stmt1
BlockItem<}>
BlockItemsBlockItemsBlockItemsBlockStmt<id,j>
StmtBlockItem<=>
ArrayExpsLval
<id,j>
<->
ArrayExpsLval
<intd>
<;>
stmt1
BlockItem<}>
BlockItemsBlockItemsBlockItemsBlockStmtStmtBlockItem<id,i>
<=>--accepting rule at line 128 ("i")
--accepting rule at line 92 ("+")
--accepting rule at line 125 ("1")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 87 ("}")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 124 ("return")
--accepting rule at line 130 (" ")
--accepting rule at line 127 ("0")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 87 ("}")
--(end of buffer or a NUL)
--EOF (start condition 0)

ArrayExpsLval
<id,i>
<+>
ArrayExpsLval
<intd>
<;>
stmt1
BlockItem<}>
BlockItemsBlockItemsBlockItemsBlockItemsBlockStmtStmtBlockItem<return>
<into>
<;>
StmtBlockItem<}>
BlockItemsBlockItemsBlockItemsBlockItemsBlockItemsBlockCompUnitCompUnitsCompUnitsCompUnitsCompilerCompUnits (1)
  VarDecl (1)
    ArrayDec (1)
      ArrayDec (1)
        IDENTIFIER a  CompUnits (3)
    FuncDef (3)
      FuncFParam (3)
      Block (4)
        BlockItems (4)
          VarDecl (4)
            VarOPassign (4)
              IDENTIFIER i              ConstInitVal (4)
                IntConst (4)
                  CONSTANTOCT: 0
          BlockItems (5)
            VarDecl (5)
              VarOPassign (5)
                IDENTIFIER cnt                ConstInitVal (5)
                  IntConst (5)
                    CONSTANTOCT: 0
            BlockItems (6)
              While_Stmt (6)
                Cond (6)
                  OPLIGHTEQ (6)
                    LVal_EXP (6)
                      LVal (6)
                        IDENTIFIER i                    MINUSExp (6)
                      PLUSExp (6)
                        IntConst (6)
                          CONSTANTINTD: 3
                        IntConst (6)
                          CONSTANTINTD: 4
                      IntConst (6)
                        CONSTANTINTD: 2
                Block_Stmt (7)
                  Block (7)
                    BlockItems (7)
                      VarDecl (7)
                        VarOPassign (7)
                          IDENTIFIER j                          ConstInitVal (7)
                            LVal_EXP (7)
                              LVal (7)
                                IDENTIFIER i                      BlockItems (8)
                        While_Stmt (8)
                          Cond (8)
                            OPGREATEQ (8)
                              LVal_EXP (8)
                                LVal (8)
                                  IDENTIFIER j                              IntConst (8)
                                CONSTANTOCT: 0
                          Block_Stmt (9)
                            Block (9)
                              BlockItems (9)
                                IF_Stmt (9)
                                  Cond_And (9)
                                    Cond (9)
                                      OPLIGHT (9)
                                        LVal_EXP (9)
                                          LVal (9)
                                            IDENTIFIER j                                        IntConst (9)
                                          CONSTANTINTD: 4
                                    Cond (9)
                                      OPLIGHT (9)
                                        MINUSExp (9)
                                          LVal_EXP (9)
                                            LVal (9)
                                              IDENTIFIER i                                          LVal_EXP (9)
                                            LVal (9)
                                              IDENTIFIER j                                        IntConst (9)
                                          CONSTANTINTD: 3
                                  Block_Stmt (10)
                                    Block (10)
                                      BlockItems (10)
                                        Lval_Opassign_Stmt (10)
                                          LVal (10)
                                            IDENTIFIER a                                            ArrayExps (10)
                                              MINUSExp (10)
                                                LVal_EXP (10)
                                                  LVal (10)
                                                    IDENTIFIER i                                                LVal_EXP (10)
                                                  LVal (10)
                                                    IDENTIFIER j                                              ArrayExps (10)
                                                LVal_EXP (10)
                                                  LVal (10)
                                                    IDENTIFIER j                                          LVal_EXP (10)
                                            LVal (10)
                                              IDENTIFIER cnt                                        BlockItems (11)
                                          Lval_Opassign_Stmt (11)
                                            LVal (11)
                                              IDENTIFIER cnt                                            IntConst (11)
                                              CONSTANTINTD: 1
                                BlockItems (13)
                                  Lval_Opassign_Stmt (13)
                                    LVal (13)
                                      IDENTIFIER j                                    MINUSExp (13)
                                      LVal_EXP (13)
                                        LVal (13)
                                          IDENTIFIER j                                      IntConst (13)
                                        CONSTANTINTD: 1
                        BlockItems (15)
                          Lval_Opassign_Stmt (15)
                            LVal (15)
                              IDENTIFIER i                            PLUSExp (15)
                              LVal_EXP (15)
                                LVal (15)
                                  IDENTIFIER i                              IntConst (15)
                                CONSTANTINTD: 1
              BlockItems (17)
                Return_Stmt (17)
                  IntConst (17)
                    CONSTANTOCT: 0


===========================================================
Global
ID             category       type           depictor
               
a              Array          TYPEINTEGER    NULL           
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:main
ID             category       type           depictor
              
i              Variable       TYPEINTEGER    NULL           
cnt            Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
===========================================================
Local:block
ID             category       type           depictor
              
j              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
