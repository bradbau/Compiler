--(end of buffer or a NUL)
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("a")
--accepting rule at line 84 (",")
--accepting rule at line 128 ("b")
--accepting rule at line 84 (",")
--accepting rule at line 128 ("c")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 131 ("
")
--accepting rule at line 107 ("void")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("add")
--accepting rule at line 88 ("(")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("a")
--accepting rule at line 84 (",")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("b")
--accepting rule at line 89 (")")
--accepting rule at line 86 ("{")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("c")
--accepting rule at line 97 ("=")
--accepting rule at line 128 ("a")
--accepting rule at line 92 ("+")
--accepting rule at line 128 ("b")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 124 ("return")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 87 ("}")
--accepting rule at line 131 ("
")
--accepting rule at line 131 ("
")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("main")
--accepting rule at line 88 ("(")
--accepting rule at line 89 (")")
--accepting rule at line 86 ("{")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("a")
--accepting rule at line 97 ("=")
--accepting rule at line 125 ("3")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("b")
--accepting rule at line 97 ("=")
--accepting rule at line 125 ("2")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("add")
<int>
<id,a>
<,>
VarDecVarDef<id,b>
VarDec<,>
VarDef<id,c>
VarDec<;>
VarDefVarDefsVarDefsVarDefsDeclCompUnit<void>
<id,add>
<(>
<int>
<id,a>
<,>
FuncFParam<int>
<id,b>
<)>
FuncFParamFuncFParamsFuncFParams<{>
<id,c>
<=>
ArrayExpsLval
<id,a>
<+>
ArrayExpsLval
<id,b>
<;>
ArrayExpsLval
stmt1
BlockItem<return>
<;>
StmtBlockItem<}>
BlockItemsBlockItemsBlockItemsBlockCompUnit<int>
<id,main>
<(>
<)>
FuncFParams<{>
<id,a>
<=>
ArrayExpsLval
<intd>
<;>
stmt1
BlockItem<id,b>
<=>
ArrayExpsLval
<intd>
<;>
stmt1
BlockItem--accepting rule at line 88 ("(")
--accepting rule at line 128 ("a")
--accepting rule at line 84 (",")
--accepting rule at line 128 ("b")
--accepting rule at line 89 (")")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 124 ("return")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("c")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 87 ("}")
--(end of buffer or a NUL)
--EOF (start condition 0)
<id,add>
<(>
<id,a>
<,>
ArrayExpsLval
<id,b>
<)>
ArrayExpsLval
<;>
StmtBlockItem<return>
<id,c>
<;>
ArrayExpsLval
StmtBlockItem<}>
BlockItemsBlockItemsBlockItemsBlockItemsBlockItemsBlockCompUnitCompUnitsCompUnitsCompUnitsCompUnitsCompilerCompUnits (1)
  VarDecl (1)
    IDENTIFIER a    VarDefs (1)
      IDENTIFIER b      VarDefs (1)
        IDENTIFIER c  CompUnits (3)
    FuncDef (3)
      FuncFParams (3)
        FuncFParam (3)
        FuncFParam (3)
      Block (4)
        BlockItems (4)
          Lval_Opassign_Stmt (4)
            LVal (4)
              IDENTIFIER c            PLUSExp (4)
              LVal_EXP (4)
                LVal (4)
                  IDENTIFIER a              LVal_EXP (4)
                LVal (4)
                  IDENTIFIER b          BlockItems (5)
            Return_Stmt (5)
    CompUnits (8)
      FuncDef (8)
        FuncFParam (8)
        Block (9)
          BlockItems (9)
            Lval_Opassign_Stmt (9)
              LVal (9)
                IDENTIFIER a              IntConst (9)
                CONSTANTINTD: 3
            BlockItems (10)
              Lval_Opassign_Stmt (10)
                LVal (10)
                  IDENTIFIER b                IntConst (10)
                  CONSTANTINTD: 2
              BlockItems (11)
                Exp_Stmt (11)
                  funcall (11)
                    IDENTIFIER add                    FuncRParams (11)
                      LVal_EXP (11)
                        LVal (11)
                          IDENTIFIER a                      Exps (0)
                BlockItems (12)
                  Return_Stmt (12)
                    LVal_EXP (12)
                      LVal (12)
                        IDENTIFIER c

===========================================================
Global
ID             category       type           depictor
               
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
c              Variable       TYPEINTEGER    NULL           
add            Function       void           NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:add
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
===========================================================
Local:add
ID             category       type           depictor
              
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NULL           
Segmentation fault (core dumped)
