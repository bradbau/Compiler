--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 89 ("=")
--accepting rule at line 109 ("5")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("s")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("10")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
--accepting rule at line 78 ("{")
--accepting rule at line 109 ("9")
--accepting rule at line 76 (",")
--accepting rule at line 109 ("8")
--accepting rule at line 76 (",")
--accepting rule at line 109 ("7")
--accepting rule at line 76 (",")
--accepting rule at line 109 ("6")
--accepting rule at line 76 (",")
--accepting rule at line 109 ("5")
--accepting rule at line 76 (",")
--accepting rule at line 109 ("4")
--accepting rule at line 76 (",")
--accepting rule at line 109 ("3")
--accepting rule at line 76 (",")
--accepting rule at line 109 ("2")
--accepting rule at line 76 (",")
--accepting rule at line 109 ("1")
--accepting rule at line 79 ("}")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 89 ("=")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("s")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
--accepting rule at line 97 (">=")
--accepting rule at line 112 ("a")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 89 ("=")
--accepting rule at line 112 ("i")
--accepting rule at line 84 ("+")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
<int>
<id,a>
<=>
<intd>
ExpNumber:0
<;>
<int>
<id,s>
<[>
<intd>
ExpNumber:0
<]>
<=>
<{>
<intd>
ExpNumber:0
<,>
<intd>
ExpNumber:0
<,>
<intd>
ExpNumber:0
<,>
<intd>
ExpNumber:0
<,>
<intd>
ExpNumber:0
<,>
<intd>
ExpNumber:0
<,>
<intd>
ExpNumber:0
<,>
<intd>
ExpNumber:0
<,>
<intd>
ExpNumber:0
<}>
<;>
<int>
<id,main>
<(>
<)>
<{>
<int>
<id,i>
<=>
<into>
ExpNumber:0
<;>
<while>
<(>
<id,s>
<[>
<id,i>
<]>
Lval
<>=>
Lval
<id,a>
<)>
Lval
<{>
<id,i>
<=>
Lval
<id,i>
<+>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<i--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--(end of buffer or a NUL)
--EOF (start condition 0)
d,i>
<;>
Lval
<}>
CompUnits (1)
  VarDecl (1)
    VarOPassign (1)
      IDENTIFIER a
      ConstInitVal (1)
        IntConst (1)
          CONSTANTINTD: 5
  CompUnits (2)
    VarDecl (2)
      VarOPassign (2)
        ArrayDec: demmision=0
          IDENTIFIER s
        ConstInitVal (2)
          ConstInitVal (2)
            IntConst (2)
              CONSTANTINTD: 9
          ConstInitValList (2)
            ConstInitVal (2)
              IntConst (2)
                CONSTANTINTD: 8
            ConstInitValList (2)
              ConstInitVal (2)
                IntConst (2)
                  CONSTANTINTD: 7
              ConstInitValList (2)
                ConstInitVal (2)
                  IntConst (2)
                    CONSTANTINTD: 6
                ConstInitValList (2)
                  ConstInitVal (2)
                    IntConst (2)
                      CONSTANTINTD: 5
                  ConstInitValList (2)
                    ConstInitVal (2)
                      IntConst (2)
                        CONSTANTINTD: 4
                    ConstInitValList (2)
                      ConstInitVal (2)
                        IntConst (2)
                          CONSTANTINTD: 3
                      ConstInitValList (2)
                        ConstInitVal (2)
                          IntConst (2)
                            CONSTANTINTD: 2
                        ConstInitValList (2)
                          ConstInitVal (2)
                            IntConst (2)
                              CONSTANTINTD: 1
    CompUnits (4)
      FuncDef (4)
        NOFParam (4)
        Block (5)
          BlockItems (5)
            VarDecl (5)
              VarOPassign (5)
                IDENTIFIER i
                ConstInitVal (5)
                  IntConst (5)
                    CONSTANTOCT: 0
            BlockItems (6)
              While_Stmt (6)
                Cond (6)
                  OPGREATEQ (6)
                    LVal_EXP (6)
                      LVal (6)
                        IDENTIFIER s
                        ArrayExps (6)
                          LVal_EXP (6)
                            LVal (6)
                              IDENTIFIER i
                              ArrayExps (6)
                          ArrayExps (6)
                    LVal_EXP (6)
                      LVal (6)
                        IDENTIFIER a
                        ArrayExps (6)
                Block_Stmt (7)
                  Block (7)
                    BlockItems (7)
                      Lval_Opassign_Stmt (7)
                        LVal (7)
                          IDENTIFIER i
                          ArrayExps (7)
                        PLUSExp (7)
                          LVal_EXP (7)
                            LVal (7)
                              IDENTIFIER i
                              ArrayExps (7)
                          IntConst (7)
                            CONSTANTINTD: 1
              BlockItems (9)
                Return_Stmt (9)
                  LVal_EXP (9)
                    LVal (9)
                      IDENTIFIER i
                      ArrayExps (9)


===========================================================
Global
ID             category       type           depictor
               
a              Variable       TYPEINTEGER    NULL           
s              Array          TYPEINTEGER    NULL           
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:main
ID             category       type           depictor
              
i              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
Segmentation fault (core dumped)
