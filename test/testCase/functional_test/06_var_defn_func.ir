arg S
--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("defn")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("4")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 89 ("=")
--accepting rule at line 112 ("defn")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
<int>
<id,defn>
<(>
<)>
<{>
<return>
<intd>
ExpNumber:0
<;>
<}>
<int>
<id,main>
<(>
<)>
<{>
<int>
<id,a>
<=>
<id,defn>
<(>
<)>
<;>
<return>
<id,a>
<;>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--(end of buffer or a NUL)
--EOF (start condition 0)
Lval
<}>
CompUnits (1)
  FuncDef (1)
    NOFParam (1)
    Block (2)
      BlockItems (2)
        Return_Stmt (2)
          IntConst (2)
            CONSTANTINTD: 4
  CompUnits (5)
    FuncDef (5)
      NOFParam (5)
      Block (6)
        BlockItems (6)
          VarDecl (6)
            VarOPassign (6)
              IDENTIFIER a
              ConstInitVal (6)
                funcall (6)
                  IDENTIFIER defn
          BlockItems (7)
            Return_Stmt (7)
              LVal_EXP (7)
                LVal (7)
                  IDENTIFIER a
                  ArrayExps (7)


===========================================================
Global
ID             category       type           depictor
               
defn           Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:defn
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:defn
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
===========================================================
456
Segmentation fault (core dumped)
