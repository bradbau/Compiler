--(end of buffer or a NUL)
--accepting rule at line 74 ("// Use minus with sub in one expr
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
<int>
<id,main>
<(>
<)>
<{>
<int>
<id,a>
<;>
<int>
<id,b>
<;>
<id,a>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<->
<intd>
ExpNumber:0
<;>
stmt1
<id,b>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,a>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 112 ("b")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<->
<id,b>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<->
<(>
<id,a>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 81 (")")
Lval
<id,b>
<)>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 88 ("%")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<%>
<->
<(>
<id,a>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("b")
--accepting rule at line 81 (")")
Lval
<id,b>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putint")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 81 (")")
Lval
<;>
stmt1
<id,putint>
<(>
<id,a>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Lval
<;>
<return>
<into>
ExpNumber:0
<;>
<}>
CompUnits (2)
  FuncDef (2)
    NOFParam (2)
    Block (3)
      BlockItems (3)
        VarDecl (3)
          IDENTIFIER a
        BlockItems (4)
          VarDecl (4)
            IDENTIFIER b
          BlockItems (5)
            Lval_Opassign_Stmt (5)
              LVal (5)
                IDENTIFIER a
                ArrayExps (5)
              OPMINUS_Exp (5)
                IntConst (5)
                  CONSTANTINTD: 2
            BlockItems (6)
              Lval_Opassign_Stmt (6)
                LVal (6)
                  IDENTIFIER b
                  ArrayExps (6)
                IntConst (6)
                  CONSTANTINTD: 1
              BlockItems (7)
                Lval_Opassign_Stmt (7)
                  LVal (7)
                    IDENTIFIER a
                    ArrayExps (7)
                  PLUSExp (7)
                    MINUSExp (7)
                      LVal_EXP (7)
                        LVal (7)
                          IDENTIFIER a
                          ArrayExps (7)
                      OPMINUS_Exp (7)
                        LVal_EXP (7)
                          LVal (7)
                            IDENTIFIER b
                            ArrayExps (7)
                    OPMINUS_Exp (7)
                      MODExp (7)
                        (Exp) (7)
                          PLUSExp (7)
                            LVal_EXP (7)
                              LVal (7)
                                IDENTIFIER a
                                ArrayExps (7)
                            LVal_EXP (7)
                              LVal (7)
                                IDENTIFIER b
                                ArrayExps (7)
                        OPMINUS_Exp (7)
                          (Exp) (7)
                            MINUSExp (7)
                              LVal_EXP (7)
                                LVal (7)
                                  IDENTIFIER a
                                  ArrayExps (7)
                              LVal_EXP (7)
                                LVal (7)
                                  IDENTIFIER b
                                  ArrayExps (7)
                BlockItems (8)
                  Exp_Stmt (8)
                    funcall (8)
                      IDENTIFIER putint
                      FuncRParams (8)
                        LVal_EXP (8)
                          LVal (8)
                            IDENTIFIER a
                            ArrayExps (8)
                  BlockItems (9)
                    Return_Stmt (9)
                      IntConst (9)
                        CONSTANTOCT: 0


===========================================================
Global
ID             category       type           depictor
               
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
b              Variable       TYPEINTEGER    NULL           
===========================================================
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   2)	FUNCTION main :
  2  (at line   5)	_t20 := #2
  3  (at line   5)	_t19 := #0 - _t20
  4  (at line   5)	 := _t19
  5  (at line   6)	_t18 := #1
  6  (at line   6)	 := _t18
  7  (at line   7)	_t5 := 
  8  (at line   7)	_t7 := 
  9  (at line   7)	_t6 := #0 - _t7
 10  (at line   7)	_t3 := _t5 - _t6
 11  (at line   7)	_t12 := 
 12  (at line   7)	_t13 := 
 13  (at line   7)	_t11 := _t12 + _t13
 14  (at line   7)	_t9 := _t11
 15  (at line   7)	_t16 := 
 16  (at line   7)	_t17 := 
 17  (at line   7)	_t15 := _t16 - _t17
 18  (at line   7)	_t14 := _t15
 19  (at line   7)	_t10 := #0 - _t14
 20  (at line   7)	_t8 := _t9 % _t10
 21  (at line   7)	_t4 := #0 - _t8
 22  (at line   7)	_t2 := _t3 + _t4
 23  (at line   7)	 := _t2
 24  (at line   8)	_t1 := 
 25  (at line   8)	ARG _t1
 26  (at line   8)	CALL 
 27  (at line   9)	_t0 := #0
 28  (at line   9)	RETURN _t0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
tec type ASSIGN
findregister: insldr rd=0,r1=11,r2 offset=0,op2type=1, insefft=0
tac type SUB
compiler: ./ObjectCode/Arm.cpp:75: ARM::ARM(TACCode*, ScopeItem&): Assertion `code.dest.Type = VARIABLE' failed.
Aborted (core dumped)
