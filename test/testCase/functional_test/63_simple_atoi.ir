-o<int>
<id,atoi_>
<(>
<int>
<id,src>
<[>
<]>
<)>
<{>
<int>
<id,s>
<;>
<id,s>
<=>
Lval
<into>
ExpNumber:0
<;>
stmt1
<int>
<id,isMinus>
<;>
<id,isMinus>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,i>
<;>
<id,i>
<=>
Lval
<into>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,src>
<[>
<id,i>
<]>
Lval
<==>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,i>
<=>
Lval
<id,i>
<+>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<if>
<(>
<id,src>
<[>
<id,i>
<]>
Lval
<==>
Lval
<intd>
ExpNumber:0
<||>
<id,src>
<[>
<id,i>
<]>
Lval
<==>
Lval
<intd>
ExpNumber:0
<)>
<{>
<if>
<(>
<id,src>
<[>
<id,i>
<]>
Lval
<==>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,isMinus>
<=>
Lval
<->
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,i>
<=>
Lval
<id,i>
<+>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<else>
<if>
<(>
<id,src>
<[>
<id,i>
<]>
Lval
<<>
Lval
<intd>
ExpNumber:0
<||>
<id,src>
<[>
<id,i>
<]>
Lval
<>>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,s>
<=>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<return>
<id,s>
<;>
Lval
<}>
<while>
<(>
<id,src>
<[>
<id,i>
<]>
Lval
<!=>
Lval
<into>
ExpNumber:0
<&&>
<id,src>
<[>
<id,i>
<]>
Lval
<>>
Lval
<intd>
ExpNumber:0
<&&>
<id,src>
<[>
<id,i>
<]>
Lval
<<>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,s>
<=>
Lval
<id,s>
<*>
Lval
<intd>
ExpNumber:0
<+>
<id,src>
<[>
<id,i>
<]>
Lval
<->
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,i>
<=>
Lval
<id,i>
<+>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<id,s>
<*>
Lval
<id,isMinus>
<;>
Lval
<}>
<int>
<id,main>
<(>
<)>
<{>
<int>
<id,string>
<[>
<intd>
ExpNumber:0
<]>
<;>
<int>
<id,temp>
<;>
<id,temp>
<=>
Lval
<into>
ExpNumber:0
<;>
stmt1
<int>
<id,i>
<;>
<id,i>
<=>
Lval
<into>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,temp>
<!=>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,temp>
<=>
Lval
<id,getch>
<(>
<)>
<;>
stmt1
<id,string>
<[>
<id,i>
<]>
Lval
<=>
Lval
<id,temp>
<;>
Lval
stmt1
<id,i>
<=>
Lval
<id,i>
<+>
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,string>
<[>
<id,i>
<]>
Lval
<=>
Lval
<into>
ExpNumber:0
<;>
stmt1
<id,i>
<=>
Lval
<id,atoi_>
<(>
<id,string>
<)>
Lval
<;>
stmt1
<id,putint>
<(>
<id,i>
<)>
Lval
<;>
<return>
<into>
ExpNumber:0
<;>
<}>
CompUnits (2)
  FuncDef (2)
    ArrayFuncFParam (2)
      ArrayExps (2)
    Block (3)
      BlockItems (3)
        VarDecl (3)
          IDENTIFIER s
        BlockItems (4)
          Lval_Opassign_Stmt (4)
            LVal (4)
              IDENTIFIER s
              ArrayExps (4)
            IntConst (4)
              CONSTANTOCT: 0
          BlockItems (5)
            VarDecl (5)
              IDENTIFIER isMinus
            BlockItems (6)
              Lval_Opassign_Stmt (6)
                LVal (6)
                  IDENTIFIER isMinus
                  ArrayExps (6)
                IntConst (6)
                  CONSTANTINTD: 1
              BlockItems (7)
                VarDecl (7)
                  IDENTIFIER i
                BlockItems (8)
                  Lval_Opassign_Stmt (8)
                    LVal (8)
                      IDENTIFIER i
                      ArrayExps (8)
                    IntConst (8)
                      CONSTANTOCT: 0
                  BlockItems (9)
                    While_Stmt (9)
                      Cond (9)
                        OPEQUAL (9)
                          LVal_EXP (9)
                            LVal (9)
                              IDENTIFIER src
                              ArrayExps (9)
                                LVal_EXP (9)
                                  LVal (9)
                                    IDENTIFIER i
                                    ArrayExps (9)
                                ArrayExps (9)
                          IntConst (9)
                            CONSTANTINTD: 32
                      Block_Stmt (10)
                        Block (10)
                          BlockItems (10)
                            Lval_Opassign_Stmt (10)
                              LVal (10)
                                IDENTIFIER i
                                ArrayExps (10)
                              PLUSExp (10)
                                LVal_EXP (10)
                                  LVal (10)
                                    IDENTIFIER i
                                    ArrayExps (10)
                                IntConst (10)
                                  CONSTANTINTD: 1
                    BlockItems (13)
                      IF_ELSE_Stmt (13)
                        Cond_Or (13)
                          Cond (13)
                            OPEQUAL (13)
                              LVal_EXP (13)
                                LVal (13)
                                  IDENTIFIER src
                                  ArrayExps (13)
                                    LVal_EXP (13)
                                      LVal (13)
                                        IDENTIFIER i
                                        ArrayExps (13)
                                    ArrayExps (13)
                              IntConst (13)
                                CONSTANTINTD: 43
                          Cond (13)
                            OPEQUAL (13)
                              LVal_EXP (13)
                                LVal (13)
                                  IDENTIFIER src
                                  ArrayExps (13)
                                    LVal_EXP (13)
                                      LVal (13)
                                        IDENTIFIER i
                                        ArrayExps (13)
                                    ArrayExps (13)
                              IntConst (13)
                                CONSTANTINTD: 45
                        Block_Stmt (14)
                          Block (14)
                            BlockItems (14)
                              IF_Stmt (14)
                                Cond (14)
                                  OPEQUAL (14)
                                    LVal_EXP (14)
                                      LVal (14)
                                        IDENTIFIER src
                                        ArrayExps (14)
                                          LVal_EXP (14)
                                            LVal (14)
                                              IDENTIFIER i
                                              ArrayExps (14)
                                          ArrayExps (14)
                                    IntConst (14)
                                      CONSTANTINTD: 45
                                Block_Stmt (15)
                                  Block (15)
                                    BlockItems (15)
                                      Lval_Opassign_Stmt (15)
                                        LVal (15)
                                          IDENTIFIER isMinus
                                          ArrayExps (15)
                                        OPMINUS_Exp (15)
                                          IntConst (15)
                                            CONSTANTINTD: 1
                              BlockItems (17)
                                Lval_Opassign_Stmt (17)
                                  LVal (17)
                                    IDENTIFIER i
                                    ArrayExps (17)
                                  PLUSExp (17)
                                    LVal_EXP (17)
                                      LVal (17)
                                        IDENTIFIER i
                                        ArrayExps (17)
                                    IntConst (17)
                                      CONSTANTINTD: 1
                        IF_Stmt (18)
                          Cond_Or (18)
                            Cond (18)
                              OPLIGHT (18)
                                LVal_EXP (18)
                                  LVal (18)
                                    IDENTIFIER src
                                    ArrayExps (18)
                                      LVal_EXP (18)
                                        LVal (18)
                                          IDENTIFIER i
                                          ArrayExps (18)
                                      ArrayExps (18)
                                IntConst (18)
                                  CONSTANTINTD: 48
                            Cond (18)
                              OPGREAT (18)
                                LVal_EXP (18)
                                  LVal (18)
                                    IDENTIFIER src
                                    ArrayExps (18)
                                      LVal_EXP (18)
                                        LVal (18)
                                          IDENTIFIER i
                                          ArrayExps (18)
                                      ArrayExps (18)
                                IntConst (18)
                                  CONSTANTINTD: 57
                          Block_Stmt (20)
                            Block (20)
                              BlockItems (20)
                                Lval_Opassign_Stmt (20)
                                  LVal (20)
                                    IDENTIFIER s
                                    ArrayExps (20)
                                  IntConst (20)
                                    CONSTANTINTD: 2147483647
                                BlockItems (21)
                                  Return_Stmt (21)
                                    LVal_EXP (21)
                                      LVal (21)
                                        IDENTIFIER s
                                        ArrayExps (21)
                      BlockItems (24)
                        While_Stmt (24)
                          Cond_And (24)
                            Cond_And (24)
                              Cond (24)
                                OPNOTEQUAL (24)
                                  LVal_EXP (24)
                                    LVal (24)
                                      IDENTIFIER src
                                      ArrayExps (24)
                                        LVal_EXP (24)
                                          LVal (24)
                                            IDENTIFIER i
                                            ArrayExps (24)
                                        ArrayExps (24)
                                  IntConst (24)
                                    CONSTANTOCT: 0
                              Cond (24)
                                OPGREAT (24)
                                  LVal_EXP (24)
                                    LVal (24)
                                      IDENTIFIER src
                                      ArrayExps (24)
                                        LVal_EXP (24)
                                          LVal (24)
                                            IDENTIFIER i
                                            ArrayExps (24)
                                        ArrayExps (24)
                                  IntConst (24)
                                    CONSTANTINTD: 47
                            Cond (24)
                              OPLIGHT (24)
                                LVal_EXP (24)
                                  LVal (24)
                                    IDENTIFIER src
                                    ArrayExps (24)
                                      LVal_EXP (24)
                                        LVal (24)
                                          IDENTIFIER i
                                          ArrayExps (24)
                                      ArrayExps (24)
                                IntConst (24)
                                  CONSTANTINTD: 58
                          Block_Stmt (25)
                            Block (25)
                              BlockItems (25)
                                Lval_Opassign_Stmt (25)
                                  LVal (25)
                                    IDENTIFIER s
                                    ArrayExps (25)
                                  MINUSExp (25)
                                    PLUSExp (25)
                                      MulExp (25)
                                        LVal_EXP (25)
                                          LVal (25)
                                            IDENTIFIER s
                                            ArrayExps (25)
                                        IntConst (25)
                                          CONSTANTINTD: 10
                                      LVal_EXP (25)
                                        LVal (25)
                                          IDENTIFIER src
                                          ArrayExps (25)
                                            LVal_EXP (25)
                                              LVal (25)
                                                IDENTIFIER i
                                                ArrayExps (25)
                                            ArrayExps (25)
                                    IntConst (25)
                                      CONSTANTINTD: 48
                                BlockItems (26)
                                  Lval_Opassign_Stmt (26)
                                    LVal (26)
                                      IDENTIFIER i
                                      ArrayExps (26)
                                    PLUSExp (26)
                                      LVal_EXP (26)
                                        LVal (26)
                                          IDENTIFIER i
                                          ArrayExps (26)
                                      IntConst (26)
                                        CONSTANTINTD: 1
                        BlockItems (28)
                          Return_Stmt (28)
                            MulExp (28)
                              LVal_EXP (28)
                                LVal (28)
                                  IDENTIFIER s
                                  ArrayExps (28)
                              LVal_EXP (28)
                                LVal (28)
                                  IDENTIFIER isMinus
                                  ArrayExps (28)
  CompUnits (31)
    FuncDef (31)
      NOFParam (31)
      Block (32)
        BlockItems (32)
          VarDecl (32)
            ArrayDec: demmision=0
              IDENTIFIER string
          BlockItems (33)
            VarDecl (33)
              IDENTIFIER temp
            BlockItems (34)
              Lval_Opassign_Stmt (34)
                LVal (34)
                  IDENTIFIER temp
                  ArrayExps (34)
                IntConst (34)
                  CONSTANTOCT: 0
              BlockItems (35)
                VarDecl (35)
                  IDENTIFIER i
                BlockItems (36)
                  Lval_Opassign_Stmt (36)
                    LVal (36)
                      IDENTIFIER i
                      ArrayExps (36)
                    IntConst (36)
                      CONSTANTOCT: 0
                  BlockItems (37)
                    While_Stmt (37)
                      Cond (37)
                        OPNOTEQUAL (37)
                          LVal_EXP (37)
                            LVal (37)
                              IDENTIFIER temp
                              ArrayExps (37)
                          IntConst (37)
                            CONSTANTINTD: 10
                      Block_Stmt (38)
                        Block (38)
                          BlockItems (38)
                            Lval_Opassign_Stmt (38)
                              LVal (38)
                                IDENTIFIER temp
                                ArrayExps (38)
                              funcall (38)
                                IDENTIFIER getch
                            BlockItems (39)
                              Lval_Opassign_Stmt (39)
                                LVal (39)
                                  IDENTIFIER string
                                  ArrayExps (39)
                                    LVal_EXP (39)
                                      LVal (39)
                                        IDENTIFIER i
                                        ArrayExps (39)
                                    ArrayExps (39)
                                LVal_EXP (39)
                                  LVal (39)
                                    IDENTIFIER temp
                                    ArrayExps (39)
                              BlockItems (40)
                                Lval_Opassign_Stmt (40)
                                  LVal (40)
                                    IDENTIFIER i
                                    ArrayExps (40)
                                  PLUSExp (40)
                                    LVal_EXP (40)
                                      LVal (40)
                                        IDENTIFIER i
                                        ArrayExps (40)
                                    IntConst (40)
                                      CONSTANTINTD: 1
                    BlockItems (42)
                      Lval_Opassign_Stmt (42)
                        LVal (42)
                          IDENTIFIER string
                          ArrayExps (42)
                            LVal_EXP (42)
                              LVal (42)
                                IDENTIFIER i
                                ArrayExps (42)
                            ArrayExps (42)
                        IntConst (42)
                          CONSTANTOCT: 0
                      BlockItems (43)
                        Lval_Opassign_Stmt (43)
                          LVal (43)
                            IDENTIFIER i
                            ArrayExps (43)
                          funcall (43)
                            IDENTIFIER atoi_
                            FuncRParams (43)
                              LVal_EXP (43)
                                LVal (43)
                                  IDENTIFIER string
                                  ArrayExps (43)
                        BlockItems (44)
                          Exp_Stmt (44)
                            funcall (44)
                              IDENTIFIER putint
                              FuncRParams (44)
                                LVal_EXP (44)
                                  LVal (44)
                                    IDENTIFIER i
                                    ArrayExps (44)
                          BlockItems (45)
                            Return_Stmt (45)
                              IntConst (45)
                                CONSTANTOCT: 0


===========================================================
Global
ID             category       type           depictor
               
putf           Function       void           NULL           
putarray       Function       void           NOT NULL       
putchar        Function       void           NOT NULL       
putint         Function       void           NOT NULL       
getarray       Function       int            NOT NULL       
getchar        Function       int            NOT NULL       
getint         Function       int            NOT NULL       
atoi_          Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:putarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:putchar
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:putint
ID             category       type           depictor
              
a              Variable       int            NULL           
===========================================================
===========================================================
Local:putint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getarray
ID             category       type           depictor
              
a              Array          int            ----------> dim=1
===========================================================
===========================================================
Local:getarray
ID             category       type           depictor
              
scope type is wrong
               Variable                      NULL           
===========================================================
===========================================================
Formal:getchar
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getchar
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:getint
ID             category       type           depictor
              
               NOParam                       NULL           
===========================================================
===========================================================
Local:getint
ID             category       type           depictor
              
===========================================================
===========================================================
Formal:atoi_
ID             category       type           depictor
              
src            Array          TYPEINTEGER    ----------> dim=1
===========================================================
===========================================================
Local:atoi_
ID             category       type           depictor
              
s              Variable       TYPEINTEGER    NULL           
isMinus        Variable       TYPEINTEGER    NULL           
i              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NOT NULL       
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
string         Array          TYPEINTEGER    ----------> dim=1
temp           Variable       TYPEINTEGER    NULL           
i              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
===========================================================
456
789
789
456
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
456
789
789
789
456
789
789
789
456
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
terminate called after throwing an instance of 'std::runtime_error'
  what():  TraverseScopeStack no result
Aborted (core dumped)
