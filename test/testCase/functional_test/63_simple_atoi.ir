arg S
--(end of buffer or a NUL)
--accepting rule at line 74 ("// Simple atoi program
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("atoi_")
--accepting rule at line 80 ("(")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("src")
--accepting rule at line 82 ("[")
--accepting rule at line 83 ("]")
--accepting rule at line 81 (")")
<int>
<id,atoi_>
<(>
<int>
<id,src>
<[>
<]>
<)>
33333333333
1111111111111111
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("s")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("s")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
<{>
<int>
<id,s>
<;>
<id,s>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("isMinus")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("isMinus")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<int>
<id,isMinus>
<;>
<id,isMinus>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,i>
<;>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("src")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<into>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,src>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 93 ("==")
Lval
<==>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("32")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 114 (" ")
--accepting rule at line 74 ("// 跳过空白符
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,i>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 114 (" ")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 101 ("if")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("src")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<if>
<(>
<id,src>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 93 ("==")
Lval
<==>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("43")
--accepting rule at line 114 (" ")
--accepting rule at line 91 ("||")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("src")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<intd>
ExpNumber:0
<||>
<id,src>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 93 ("==")
Lval
<==>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("45")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 101 ("if")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("src")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<intd>
ExpNumber:0
<)>
<{>
<if>
<(>
<id,src>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 93 ("==")
Lval
<==>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("45")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("isMinus")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,isMinus>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<->
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,i>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 114 (" ")
--accepting rule at line 102 ("else")
--accepting rule at line 114 (" ")
--accepting rule at line 101 ("if")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("src")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<else>
<if>
<(>
<id,src>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<<>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("48")
--accepting rule at line 114 (" ")
--accepting rule at line 91 ("||")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("src")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<intd>
ExpNumber:0
<||>
<id,src>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 95 (">")
Lval
<>>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("57")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 74 ("//如果第一位既不是符号也不是数字，直接返回异常值
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("s")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,s>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("2147483647")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("s")
--accepting rule at line 75 (";")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<return>
<id,s>
<;>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("src")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<}>
<while>
<(>
<id,src>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 94 ("!=")
Lval
<!=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 114 (" ")
--accepting rule at line 90 ("&&")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("src")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<into>
ExpNumber:0
<&&>
<id,src>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 95 (">")
Lval
<>>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("47")
--accepting rule at line 114 (" ")
--accepting rule at line 90 ("&&")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("src")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<intd>
ExpNumber:0
<&&>
<id,src>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<<>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("58")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("s")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,s>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("s")
--accepting rule at line 114 (" ")
--accepting rule at line 86 ("*")
Lval
<id,s>
<*>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("src")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<intd>
ExpNumber:0
<+>
<id,src>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<->
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("48")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,i>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("s")
--accepting rule at line 114 (" ")
--accepting rule at line 86 ("*")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<id,s>
<*>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("isMinus")
--accepting rule at line 75 (";")
Lval
<id,isMinus>
<;>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("string")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("500")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("temp")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("temp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<}>
<int>
<id,main>
<(>
<)>
<{>
<int>
<id,string>
<[>
<intd>
ExpNumber:0
<]>
<;>
<int>
<id,temp>
<;>
<id,temp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<int>
<id,i>
<;>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("temp")
--accepting rule at line 114 (" ")
--accepting rule at line 94 ("!=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,temp>
<!=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 81 (")")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("temp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,temp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("getch")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("string")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<id,getch>
<(>
<)>
<;>
stmt1
<id,string>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("temp")
--accepting rule at line 75 (";")
Lval
<id,temp>
<;>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,i>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("string")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,string>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("atoi_")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("string")
--accepting rule at line 81 (")")
Lval
<id,atoi_>
<(>
<id,string>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putint")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("i")
--accepting rule at line 81 (")")
Lval
<;>
stmt1
<id,putint>
<(>
<id,i>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Lval
<;>
<return>
<into>
ExpNumber:0
<;>
<}>
CompUnits (2)
  FuncDef (2)
    FuncFParam (2)
      ArrayExps (2)
    Block (3)
      BlockItems (3)
        VarDecl (3)
          IDENTIFIER s
        BlockItems (4)
          Lval_Opassign_Stmt (4)
            LVal (4)
              IDENTIFIER s
              ArrayExps (4)
            IntConst (4)
              CONSTANTOCT: 0
          BlockItems (5)
            VarDecl (5)
              IDENTIFIER isMinus
            BlockItems (6)
              Lval_Opassign_Stmt (6)
                LVal (6)
                  IDENTIFIER isMinus
                  ArrayExps (6)
                IntConst (6)
                  CONSTANTINTD: 1
              BlockItems (7)
                VarDecl (7)
                  IDENTIFIER i
                BlockItems (8)
                  Lval_Opassign_Stmt (8)
                    LVal (8)
                      IDENTIFIER i
                      ArrayExps (8)
                    IntConst (8)
                      CONSTANTOCT: 0
                  BlockItems (9)
                    While_Stmt (9)
                      Cond (9)
                        OPEQUAL (9)
                          LVal_EXP (9)
                            LVal (9)
                              IDENTIFIER src
                              ArrayExps (9)
                                LVal_EXP (9)
                                  LVal (9)
                                    IDENTIFIER i
                                    ArrayExps (9)
                                ArrayExps (9)
                          IntConst (9)
                            CONSTANTINTD: 32
                      Block_Stmt (10)
                        Block (10)
                          BlockItems (10)
                            Lval_Opassign_Stmt (10)
                              LVal (10)
                                IDENTIFIER i
                                ArrayExps (10)
                              PLUSExp (10)
                                LVal_EXP (10)
                                  LVal (10)
                                    IDENTIFIER i
                                    ArrayExps (10)
                                IntConst (10)
                                  CONSTANTINTD: 1
                    BlockItems (13)
                      IF_ELSE_Stmt (13)
                        Cond_Or (13)
                          Cond (13)
                            OPEQUAL (13)
                              LVal_EXP (13)
                                LVal (13)
                                  IDENTIFIER src
                                  ArrayExps (13)
                                    LVal_EXP (13)
                                      LVal (13)
                                        IDENTIFIER i
                                        ArrayExps (13)
                                    ArrayExps (13)
                              IntConst (13)
                                CONSTANTINTD: 43
                          Cond (13)
                            OPEQUAL (13)
                              LVal_EXP (13)
                                LVal (13)
                                  IDENTIFIER src
                                  ArrayExps (13)
                                    LVal_EXP (13)
                                      LVal (13)
                                        IDENTIFIER i
                                        ArrayExps (13)
                                    ArrayExps (13)
                              IntConst (13)
                                CONSTANTINTD: 45
                        Block_Stmt (14)
                          Block (14)
                            BlockItems (14)
                              IF_Stmt (14)
                                Cond (14)
                                  OPEQUAL (14)
                                    LVal_EXP (14)
                                      LVal (14)
                                        IDENTIFIER src
                                        ArrayExps (14)
                                          LVal_EXP (14)
                                            LVal (14)
                                              IDENTIFIER i
                                              ArrayExps (14)
                                          ArrayExps (14)
                                    IntConst (14)
                                      CONSTANTINTD: 45
                                Block_Stmt (15)
                                  Block (15)
                                    BlockItems (15)
                                      Lval_Opassign_Stmt (15)
                                        LVal (15)
                                          IDENTIFIER isMinus
                                          ArrayExps (15)
                                        OPMINUS_Exp (15)
                                          IntConst (15)
                                            CONSTANTINTD: 1
                              BlockItems (17)
                                Lval_Opassign_Stmt (17)
                                  LVal (17)
                                    IDENTIFIER i
                                    ArrayExps (17)
                                  PLUSExp (17)
                                    LVal_EXP (17)
                                      LVal (17)
                                        IDENTIFIER i
                                        ArrayExps (17)
                                    IntConst (17)
                                      CONSTANTINTD: 1
                        IF_Stmt (18)
                          Cond_Or (18)
                            Cond (18)
                              OPLIGHT (18)
                                LVal_EXP (18)
                                  LVal (18)
                                    IDENTIFIER src
                                    ArrayExps (18)
                                      LVal_EXP (18)
                                        LVal (18)
                                          IDENTIFIER i
                                          ArrayExps (18)
                                      ArrayExps (18)
                                IntConst (18)
                                  CONSTANTINTD: 48
                            Cond (18)
                              OPGREAT (18)
                                LVal_EXP (18)
                                  LVal (18)
                                    IDENTIFIER src
                                    ArrayExps (18)
                                      LVal_EXP (18)
                                        LVal (18)
                                          IDENTIFIER i
                                          ArrayExps (18)
                                      ArrayExps (18)
                                IntConst (18)
                                  CONSTANTINTD: 57
                          Block_Stmt (20)
                            Block (20)
                              BlockItems (20)
                                Lval_Opassign_Stmt (20)
                                  LVal (20)
                                    IDENTIFIER s
                                    ArrayExps (20)
                                  IntConst (20)
                                    CONSTANTINTD: 2147483647
                                BlockItems (21)
                                  Return_Stmt (21)
                                    LVal_EXP (21)
                                      LVal (21)
                                        IDENTIFIER s
                                        ArrayExps (21)
                      BlockItems (24)
                        While_Stmt (24)
                          Cond_And (24)
                            Cond_And (24)
                              Cond (24)
                                OPNOTEQUAL (24)
                                  LVal_EXP (24)
                                    LVal (24)
                                      IDENTIFIER src
                                      ArrayExps (24)
                                        LVal_EXP (24)
                                          LVal (24)
                                            IDENTIFIER i
                                            ArrayExps (24)
                                        ArrayExps (24)
                                  IntConst (24)
                                    CONSTANTOCT: 0
                              Cond (24)
                                OPGREAT (24)
                                  LVal_EXP (24)
                                    LVal (24)
                                      IDENTIFIER src
                                      ArrayExps (24)
                                        LVal_EXP (24)
                                          LVal (24)
                                            IDENTIFIER i
                                            ArrayExps (24)
                                        ArrayExps (24)
                                  IntConst (24)
                                    CONSTANTINTD: 47
                            Cond (24)
                              OPLIGHT (24)
                                LVal_EXP (24)
                                  LVal (24)
                                    IDENTIFIER src
                                    ArrayExps (24)
                                      LVal_EXP (24)
                                        LVal (24)
                                          IDENTIFIER i
                                          ArrayExps (24)
                                      ArrayExps (24)
                                IntConst (24)
                                  CONSTANTINTD: 58
                          Block_Stmt (25)
                            Block (25)
                              BlockItems (25)
                                Lval_Opassign_Stmt (25)
                                  LVal (25)
                                    IDENTIFIER s
                                    ArrayExps (25)
                                  MINUSExp (25)
                                    PLUSExp (25)
                                      MulExp (25)
                                        LVal_EXP (25)
                                          LVal (25)
                                            IDENTIFIER s
                                            ArrayExps (25)
                                        IntConst (25)
                                          CONSTANTINTD: 10
                                      LVal_EXP (25)
                                        LVal (25)
                                          IDENTIFIER src
                                          ArrayExps (25)
                                            LVal_EXP (25)
                                              LVal (25)
                                                IDENTIFIER i
                                                ArrayExps (25)
                                            ArrayExps (25)
                                    IntConst (25)
                                      CONSTANTINTD: 48
                                BlockItems (26)
                                  Lval_Opassign_Stmt (26)
                                    LVal (26)
                                      IDENTIFIER i
                                      ArrayExps (26)
                                    PLUSExp (26)
                                      LVal_EXP (26)
                                        LVal (26)
                                          IDENTIFIER i
                                          ArrayExps (26)
                                      IntConst (26)
                                        CONSTANTINTD: 1
                        BlockItems (28)
                          Return_Stmt (28)
                            MulExp (28)
                              LVal_EXP (28)
                                LVal (28)
                                  IDENTIFIER s
                                  ArrayExps (28)
                              LVal_EXP (28)
                                LVal (28)
                                  IDENTIFIER isMinus
                                  ArrayExps (28)
  CompUnits (31)
    FuncDef (31)
      NOFParam (31)
      Block (32)
        BlockItems (32)
          VarDecl (32)
            ArrayDec: demmision=0
              IDENTIFIER string
          BlockItems (33)
            VarDecl (33)
              IDENTIFIER temp
            BlockItems (34)
              Lval_Opassign_Stmt (34)
                LVal (34)
                  IDENTIFIER temp
                  ArrayExps (34)
                IntConst (34)
                  CONSTANTOCT: 0
              BlockItems (35)
                VarDecl (35)
                  IDENTIFIER i
                BlockItems (36)
                  Lval_Opassign_Stmt (36)
                    LVal (36)
                      IDENTIFIER i
                      ArrayExps (36)
                    IntConst (36)
                      CONSTANTOCT: 0
                  BlockItems (37)
                    While_Stmt (37)
                      Cond (37)
                        OPNOTEQUAL (37)
                          LVal_EXP (37)
                            LVal (37)
                              IDENTIFIER temp
                              ArrayExps (37)
                          IntConst (37)
                            CONSTANTINTD: 10
                      Block_Stmt (38)
                        Block (38)
                          BlockItems (38)
                            Lval_Opassign_Stmt (38)
                              LVal (38)
                                IDENTIFIER temp
                                ArrayExps (38)
                              funcall (38)
                                IDENTIFIER getch
                            BlockItems (39)
                              Lval_Opassign_Stmt (39)
                                LVal (39)
                                  IDENTIFIER string
                                  ArrayExps (39)
                                    LVal_EXP (39)
                                      LVal (39)
                                        IDENTIFIER i
                                        ArrayExps (39)
                                    ArrayExps (39)
                                LVal_EXP (39)
                                  LVal (39)
                                    IDENTIFIER temp
                                    ArrayExps (39)
                              BlockItems (40)
                                Lval_Opassign_Stmt (40)
                                  LVal (40)
                                    IDENTIFIER i
                                    ArrayExps (40)
                                  PLUSExp (40)
                                    LVal_EXP (40)
                                      LVal (40)
                                        IDENTIFIER i
                                        ArrayExps (40)
                                    IntConst (40)
                                      CONSTANTINTD: 1
                    BlockItems (42)
                      Lval_Opassign_Stmt (42)
                        LVal (42)
                          IDENTIFIER string
                          ArrayExps (42)
                            LVal_EXP (42)
                              LVal (42)
                                IDENTIFIER i
                                ArrayExps (42)
                            ArrayExps (42)
                        IntConst (42)
                          CONSTANTOCT: 0
                      BlockItems (43)
                        Lval_Opassign_Stmt (43)
                          LVal (43)
                            IDENTIFIER i
                            ArrayExps (43)
                          funcall (43)
                            IDENTIFIER atoi_
                            FuncRParams (43)
                              LVal_EXP (43)
                                LVal (43)
                                  IDENTIFIER string
                                  ArrayExps (43)
                        BlockItems (44)
                          Exp_Stmt (44)
                            funcall (44)
                              IDENTIFIER putint
                              FuncRParams (44)
                                LVal_EXP (44)
                                  LVal (44)
                                    IDENTIFIER i
                                    ArrayExps (44)
                          BlockItems (45)
                            Return_Stmt (45)
                              IntConst (45)
                                CONSTANTOCT: 0


===========================================================
Global
ID             category       type           depictor
               
atoi_          Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:atoi_
ID             category       type           depictor
              
src            Array          TYPEINTEGER    ----------> dim=1
===========================================================
===========================================================
Local:atoi_
ID             category       type           depictor
              
s              Variable       TYPEINTEGER    NULL           
isMinus        Variable       TYPEINTEGER    NULL           
i              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NOT NULL       
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
string         Array          TYPEINTEGER    ----------> dim=1
temp           Variable       TYPEINTEGER    NULL           
i              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
===========================================================
456
789
789
456
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
456
789
789
789
456
789
789
789
456
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
TraverseScopeStack no result
789
789
789
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
TraverseScopeStack no result
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   2)	FUNCTION atoi_ :
  2  (at line   2)	PARAM src
  3  (at line   4)	_t0 := #0
  4  (at line   4)	s := _t0
  5  (at line   6)	_t1 := #1
  6  (at line   6)	isMinus := _t1
  7  (at line   8)	_t2 := #0
  8  (at line   8)	i := _t2
  9  (at line   9)	LABEL label0 :
 10  (at line   9)	_t8 := i
 11  (at line   9)	_t3 := src[_t8]
 12  (at line   9)	_t10 := #32
 13  (at line   9)	IF _t3 = _t10 GOTO label1
 14  (at line   9)	GOTO label2
 15  (at line   9)	LABEL label1 :
 16  (at line  10)	_t12 := i
 17  (at line  10)	_t13 := #1
 18  (at line  10)	_t11 := _t12 + _t13
 19  (at line  10)	i := _t11
 20  (at line   9)	GOTO label0
 21  (at line   9)	LABEL label2 :
 22  (at line  13)	_t19 := i
 23  (at line  13)	_t14 := src[_t19]
 24  (at line  13)	_t21 := #43
 25  (at line  13)	IF _t14 = _t21 GOTO label3
 26  (at line  13)	GOTO label5
 27  (at line  13)	LABEL label5 :
 28  (at line  13)	_t27 := i
 29  (at line  13)	_t22 := src[_t27]
 30  (at line  13)	_t29 := #45
 31  (at line  13)	IF _t22 = _t29 GOTO label3
 32  (at line  13)	GOTO label4
 33  (at line  13)	LABEL label3 :
 34  (at line  14)	_t35 := i
 35  (at line  14)	_t30 := src[_t35]
 36  (at line  14)	_t37 := #45
 37  (at line  14)	IF _t30 = _t37 GOTO label6
 38  (at line  14)	GOTO label7
 39  (at line  14)	LABEL label6 :
 40  (at line  15)	_t39 := #1
 41  (at line  15)	_t38 := #0 - _t39
 42  (at line  15)	isMinus := _t38
 43  (at line  14)	LABEL label7 :
 44  (at line  17)	_t41 := i
 45  (at line  17)	_t42 := #1
 46  (at line  17)	_t40 := _t41 + _t42
 47  (at line  17)	i := _t40
 48  (at line  13)	GOTO label8
 49  (at line  13)	LABEL label4 :
 50  (at line  18)	_t48 := i
 51  (at line  18)	_t43 := src[_t48]
 52  (at line  18)	_t50 := #48
 53  (at line  18)	IF _t43 < _t50 GOTO label9
 54  (at line  18)	GOTO label11
 55  (at line  18)	LABEL label11 :
 56  (at line  18)	_t56 := i
 57  (at line  18)	_t51 := src[_t56]
 58  (at line  18)	_t58 := #57
 59  (at line  18)	IF _t51 > _t58 GOTO label9
 60  (at line  18)	GOTO label10
 61  (at line  18)	LABEL label9 :
 62  (at line  20)	_t59 := #2147483647
 63  (at line  20)	s := _t59
 64  (at line  21)	_t60 := s
 65  (at line  21)	RETURN _t60
 66  (at line  18)	LABEL label10 :
 67  (at line  13)	LABEL label8 :
 68  (at line  24)	LABEL label12 :
 69  (at line  24)	_t66 := i
 70  (at line  24)	_t61 := src[_t66]
 71  (at line  24)	_t68 := #0
 72  (at line  24)	IF _t61 != _t68 GOTO label16
 73  (at line  24)	GOTO label14
 74  (at line  24)	LABEL label16 :
 75  (at line  24)	_t74 := i
 76  (at line  24)	_t69 := src[_t74]
 77  (at line  24)	_t76 := #47
 78  (at line  24)	IF _t69 > _t76 GOTO label15
 79  (at line  24)	GOTO label14
 80  (at line  24)	LABEL label15 :
 81  (at line  24)	_t82 := i
 82  (at line  24)	_t77 := src[_t82]
 83  (at line  24)	_t84 := #58
 84  (at line  24)	IF _t77 < _t84 GOTO label13
 85  (at line  24)	GOTO label14
 86  (at line  24)	LABEL label13 :
 87  (at line  25)	_t90 := s
 88  (at line  25)	_t91 := #10
 89  (at line  25)	_t88 := _t90 * _t91
 90  (at line  25)	_t94 := i
 91  (at line  25)	_t89 := src[_t94]
 92  (at line  25)	_t86 := _t88 + _t89
 93  (at line  25)	_t87 := #48
 94  (at line  25)	_t85 := _t86 - _t87
 95  (at line  25)	s := _t85
 96  (at line  26)	_t97 := i
 97  (at line  26)	_t98 := #1
 98  (at line  26)	_t96 := _t97 + _t98
 99  (at line  26)	i := _t96
100  (at line  24)	GOTO label12
101  (at line  24)	LABEL label14 :
102  (at line  28)	_t100 := s
103  (at line  28)	_t101 := isMinus
104  (at line  28)	_t99 := _t100 * _t101
105  (at line  28)	RETURN _t99

106  (at line  31)	FUNCTION main :
107  (at line  34)	_t102 := #0
108  (at line  34)	temp := _t102
109  (at line  36)	_t103 := #0
110  (at line  36)	i := _t103
111  (at line  37)	LABEL label17 :
112  (at line  37)	_t104 := temp
113  (at line  37)	_t107 := #10
114  (at line  37)	IF _t104 != _t107 GOTO label18
115  (at line  37)	GOTO label19
116  (at line  37)	LABEL label18 :
117  (at line  38)	_t108 := CALL 
118  (at line  38)	temp := _t108
119  (at line  39)	_t109 := temp
120  (at line  39)	_t112 := i
121  (at line  39)	string[_t112] := _t109
122  (at line  40)	_t115 := i
123  (at line  40)	_t116 := #1
124  (at line  40)	_t114 := _t115 + _t116
125  (at line  40)	i := _t114
126  (at line  37)	GOTO label17
127  (at line  37)	LABEL label19 :
128  (at line  42)	_t117 := #0
129  (at line  42)	_t120 := i
130  (at line  42)	string[_t120] := _t117
131  (at line  32)	_t124 := #500
132  (at line  43)	ARG string[_t124]
133  (at line  43)	_t122 := CALL atoi_
134  (at line  43)	i := _t122
135  (at line  44)	_t125 := i
136  (at line  44)	ARG _t125
137  (at line  44)	CALL 
138  (at line  45)	_t126 := #0
139  (at line  45)	RETURN _t126


===========================================================
Global
ID             category       type           depictor
               
atoi_          Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:atoi_
ID             category       type           depictor
              
src            Array          TYPEINTEGER    ----------> dim=1
scope type is wrong
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
scope type is wrong
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
Variable offset count+4 :s
Variable offset count+4 :s
Variable offset count+4 :s
Variable offset count+4 :s
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t0
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t1
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t2
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t3
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t6
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t7
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t8
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t9
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t10
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t11
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t12
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t13
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t14
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t17
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t18
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t19
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t20
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t21
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t22
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t25
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t26
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t27
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t28
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t29
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t43
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t46
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t47
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t48
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t49
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t50
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t51
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t54
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t55
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t56
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t57
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t58
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t59
Variable offset count+4 :_t60
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t61
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t64
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t65
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t66
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t67
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t68
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t69
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t72
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t73
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t74
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t75
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t76
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t77
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t80
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t81
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t82
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t83
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t84
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t85
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t86
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t87
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t88
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t89
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t90
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t91
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t92
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t93
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t94
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t95
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t96
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t97
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t98
Variable offset count+4 :_t99
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t100
scope type not local in functiondf
scopeprev:1
Variable offset count+4 :_t101
tec type ASSIGN
findregister: insldr rd=0,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=1,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=2,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=3,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=4,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=5,r1=11,r2 offset=0,op2type=1, insefft=0
tac type LABELDF
L0:

tec type ASSIGN
findregister: insldr rd=6,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tec type ASSIGN
findregister: insldr rd=8,r1=11,r2 offset=0,op2type=1, insefft=0
tac type IFEQ
findregister: insldr rd=9,r1=11,r2 offset=0,op2type=1, insefft=0
tac type GOTO
Goto string  ControlInstruction tostring
INS B tostring
B L2

tac type LABELDF
L1:

tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type ADD
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type GOTO
Goto string  ControlInstruction tostring
INS B tostring
B L0

tac type LABELDF
L2:

tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type IFEQ
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type GOTO
Goto string  ControlInstruction tostring
INS B tostring
B L5

tac type LABELDF
L5:

tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type IFEQ
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type GOTO
Goto string  ControlInstruction tostring
INS B tostring
B L4

tac type LABELDF
L3:

tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type IFEQ
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type GOTO
Goto string  ControlInstruction tostring
INS B tostring
B L7

tac type LABELDF
L6:

tec type ASSIGN
findregister: insldr rd=10,r1=11,r2 offset=0,op2type=1, insefft=0
tac type SUB
compiler: ./ObjectCode/Arm.cpp:85: ARM::ARM(TACCode *, ScopeItem &): Assertion `code.dest.Type = VARIABLE' failed.
Aborted (core dumped)
