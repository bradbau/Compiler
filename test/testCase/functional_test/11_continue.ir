--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 89 ("=")
--accepting rule at line 109 ("10")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 95 (">")
--accepting rule at line 111 ("0")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 101 ("if")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 95 (">")
--accepting rule at line 109 ("5")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 89 ("=")
--accepting rule at line 112 ("a")
--accepting rule at line 85 ("-")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 105 ("continue")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--(end of buffer or a NUL)
--EOF (start condition 0)
<int>
<id,main>
<(>
<)>
<{>
<int>
<id,a>
<=>
<intd>
ExpNumber:0
<;>
<while>
<(>
<id,a>
<>>
Lval
<into>
ExpNumber:0
<)>
<{>
<if>
<(>
<id,a>
<>>
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,a>
<=>
Lval
<id,a>
<->
Lval
<intd>
ExpNumber:0
<;>
stmt1
<continue>
<;>
<}>
<return>
<id,a>
<;>
Lval
<}>
<return>
<id,a>
<;>
Lval
<}>
CompUnits (1)
  FuncDef (1)
    NOFParam (1)
    Block (2)
      BlockItems (2)
        VarDecl (2)
          VarOPassign (2)
            IDENTIFIER a
            ConstInitVal (2)
              IntConst (2)
                CONSTANTINTD: 10
        BlockItems (3)
          While_Stmt (3)
            Cond (3)
              OPGREAT (3)
                LVal_EXP (3)
                  LVal (3)
                    IDENTIFIER a
                    ArrayExps (3)
                IntConst (3)
                  CONSTANTOCT: 0
            Block_Stmt (4)
              Block (4)
                BlockItems (4)
                  IF_Stmt (4)
                    Cond (4)
                      OPGREAT (4)
                        LVal_EXP (4)
                          LVal (4)
                            IDENTIFIER a
                            ArrayExps (4)
                        IntConst (4)
                          CONSTANTINTD: 5
                    Block_Stmt (5)
                      Block (5)
                        BlockItems (5)
                          Lval_Opassign_Stmt (5)
                            LVal (5)
                              IDENTIFIER a
                              ArrayExps (5)
                            MINUSExp (5)
                              LVal_EXP (5)
                                LVal (5)
                                  IDENTIFIER a
                                  ArrayExps (5)
                              IntConst (5)
                                CONSTANTINTD: 1
                          BlockItems (6)
                            Continue_Stmt (6)
                  BlockItems (8)
                    Return_Stmt (8)
                      LVal_EXP (8)
                        LVal (8)
                          IDENTIFIER a
                          ArrayExps (8)
          BlockItems (10)
            Return_Stmt (10)
              LVal_EXP (10)
                LVal (10)
                  IDENTIFIER a
                  ArrayExps (10)


===========================================================
Global
ID             category       type           depictor
               
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:main
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
TraverseScopeStack no result
TraverseScopeStack no result
TraverseScopeStack no result

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   1)	FUNCTION main :
  2  (at line   2)	a := #10
  3  (at line   3)	LABEL label0 :
  4  (at line   3)	_t1 := 
  5  (at line   3)	_t4 := #0
  6  (at line   3)	IF _t1 > _t4 GOTO label1
  7  (at line   3)	GOTO label2
  8  (at line   3)	LABEL label1 :
  9  (at line   4)	_t6 := 
 10  (at line   4)	_t9 := #5
 11  (at line   4)	IF _t6 > _t9 GOTO label3
 12  (at line   4)	GOTO label4
 13  (at line   4)	LABEL label3 :
 14  (at line   5)	_t11 := 
 15  (at line   5)	_t12 := #1
 16  (at line   5)	_t10 := _t11 - _t12
 17  (at line   5)	 := _t10
 18  (at line   0)	GOTO label-1
 19  (at line   4)	LABEL label4 :
 20  (at line   8)	_t5 := 
 21  (at line   8)	RETURN _t5
 22  (at line   3)	GOTO label0
 23  (at line   3)	LABEL label2 :
 24  (at line  10)	_t0 := 
 25  (at line  10)	RETURN _t0
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
tec type ASSIGN
findregister: insldr rd=0,r1=11,r2 offset=0,op2type=1, insefft=0
tac type LABELDF
tec type ASSIGN
findregister: insldr rd=1,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=2,r1=11,r2 offset=0,op2type=1, insefft=0
tac type IFGT
tac type GOTO
tac type LABELDF
tec type ASSIGN
findregister: insldr rd=3,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=4,r1=11,r2 offset=0,op2type=1, insefft=0
tac type IFGT
tac type GOTO
tac type LABELDF
tec type ASSIGN
findregister: insldr rd=5,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=6,r1=11,r2 offset=0,op2type=1, insefft=0
tac type SUB
compiler: ./ObjectCode/Arm.cpp:75: ARM::ARM(TACCode*, ScopeItem&): Assertion `code.dest.Type = VARIABLE' failed.
Aborted (core dumped)
