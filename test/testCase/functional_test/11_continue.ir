--(end of buffer or a NUL)
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("main")
--accepting rule at line 88 ("(")
--accepting rule at line 89 (")")
--accepting rule at line 86 ("{")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 108 ("int")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("a")
--accepting rule at line 97 ("=")
--accepting rule at line 125 ("10")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 111 ("while")
--accepting rule at line 88 ("(")
--accepting rule at line 128 ("a")
--accepting rule at line 103 (">")
--accepting rule at line 127 ("0")
--accepting rule at line 89 (")")
--accepting rule at line 86 ("{")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 109 ("if")
--accepting rule at line 88 ("(")
--accepting rule at line 128 ("a")
--accepting rule at line 103 (">")
--accepting rule at line 125 ("5")
--accepting rule at line 89 (")")
--accepting rule at line 86 ("{")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("a")
--accepting rule at line 97 ("=")
--accepting rule at line 128 ("a")
--accepting rule at line 93 ("-")
--accepting rule at line 125 ("1")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 113 ("continue")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 87 ("}")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 124 ("return")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("a")
--accepting rule at line 83 (";")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 87 ("}")
--accepting rule at line 131 ("
")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 130 (" ")
--accepting rule at line 124 ("return")
--accepting rule at line 130 (" ")
--accepting rule at line 128 ("a")
--accepting rule at line 83 (";")
<int>
<id,main>
<(>
<)>
FuncFParams<{>
<int>
<id,a>
VarDec<=>
<intd>
<;>
InitValVarDefVarDefsDeclBlockItem<while>
<(>
<id,a>
<>>
ArrayExpsLval
<into>
<)>
Cond<{>
<if>
<(>
<id,a>
<>>
ArrayExpsLval
<intd>
<)>
Cond<{>
<id,a>
<=>
ArrayExpsLval
<id,a>
<->
ArrayExpsLval
<intd>
<;>
stmt1
BlockItem<continue>
<;>
StmtBlockItem<}>
BlockItemsBlockItemsBlockItemsBlockStmt<return>
StmtBlockItem<id,a>
<;>
ArrayExpsLval
StmtBlockItem<}>
BlockItemsBlockItemsBlockItemsBlockStmtStmtBlockItem<return>
<id,a>
<;>
ArrayExpsLval
--accepting rule at line 131 ("
")
--accepting rule at line 87 ("}")
--(end of buffer or a NUL)
--EOF (start condition 0)
StmtBlockItem<}>
BlockItemsBlockItemsBlockItemsBlockItemsBlockCompUnitCompUnitsCompUnitsCompilerCompUnits (1)
  FuncDef (1)
    FuncFParam (1)
    Block (2)
      BlockItems (2)
        VarDecl (2)
          VarOPassign (2)
            IDENTIFIER a            ConstInitVal (2)
              IntConst (2)
                CONSTANTINTD: 10
        BlockItems (3)
          While_Stmt (3)
            Cond (3)
              OPGREAT (3)
                LVal_EXP (3)
                  LVal (3)
                    IDENTIFIER a                IntConst (3)
                  CONSTANTOCT: 0
            Block_Stmt (4)
              Block (4)
                BlockItems (4)
                  IF_Stmt (4)
                    Cond (4)
                      OPGREAT (4)
                        LVal_EXP (4)
                          LVal (4)
                            IDENTIFIER a                        IntConst (4)
                          CONSTANTINTD: 5
                    Block_Stmt (5)
                      Block (5)
                        BlockItems (5)
                          Lval_Opassign_Stmt (5)
                            LVal (5)
                              IDENTIFIER a                            MINUSExp (5)
                              LVal_EXP (5)
                                LVal (5)
                                  IDENTIFIER a                              IntConst (5)
                                CONSTANTINTD: 1
                          BlockItems (6)
                            Continue_Stmt (6)
                  BlockItems (8)
                    Return_Stmt (8)
                      LVal_EXP (8)
                        LVal (8)
                          IDENTIFIER a          BlockItems (10)
            Return_Stmt (10)
              LVal_EXP (10)
                LVal (10)
                  IDENTIFIER a

===========================================================
Global
ID             category       type           depictor
               
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
Local:main
ID             category       type           depictor
              
a              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
