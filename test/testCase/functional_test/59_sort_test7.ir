arg S
--(end of buffer or a NUL)
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("Merge")
--accepting rule at line 80 ("(")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("array")
--accepting rule at line 82 ("[")
--accepting rule at line 83 ("]")
--accepting rule at line 76 (",")
<int>
<id,n>
<;>
<int>
<id,Merge>
<(>
<int>
<id,array>
<[>
<]>
<,>
33333333333
1111111111111111
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("low")
--accepting rule at line 76 (",")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("middle")
--accepting rule at line 76 (",")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("high")
--accepting rule at line 81 (")")
--accepting rule at line 115 ("
")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n1")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
<int>
<id,low>
<,>
<int>
<id,middle>
<,>
<int>
<id,high>
<)>
<{>
<int>
<id,n1>
<;>
<id,n1>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("middle")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,middle>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("low")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,low>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n2")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,n2>
<;>
<id,n2>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("high")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,high>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("middle")
--accepting rule at line 75 (";")
Lval
<id,middle>
<;>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("L")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("10")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("R")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("10")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<int>
<id,L>
<[>
<intd>
ExpNumber:0
<]>
<;>
<int>
<id,R>
<[>
<intd>
ExpNumber:0
<]>
<;>
<int>
<id,i>
<;>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<int>
<id,j>
<;>
<id,j>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<into>
ExpNumber:0
<;>
stmt1
<while>
<(>
<id,i>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n1")
--accepting rule at line 81 (")")
Lval
<id,n1>
<)>
33333333333
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("L")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<{>
<id,L>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("array")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,array>
<[>
<id,i>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("low")
--accepting rule at line 83 ("]")
Lval
<id,low>
<]>
33333333333
--accepting rule at line 75 (";")
Lval
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,i>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<while>
<(>
<id,j>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n2")
--accepting rule at line 81 (")")
Lval
<id,n2>
<)>
33333333333
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("R")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 83 ("]")
Lval
<{>
<id,R>
<[>
<id,j>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("array")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,array>
<[>
<id,j>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("middle")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,middle>
<+>
33333333333
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
Lval
<intd>
ExpNumber:0
<]>
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<id,j>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,j>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<id,j>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<int>
<id,k>
<;>
<id,k>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("low")
--accepting rule at line 75 (";")
Lval
<id,low>
<;>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("i")
--accepting rule at line 94 ("!=")
Lval
stmt1
<while>
<(>
<id,i>
<!=>
33333333333
--accepting rule at line 112 ("n1")
--accepting rule at line 114 (" ")
--accepting rule at line 90 ("&&")
Lval
<id,n1>
<&&>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 94 ("!=")
Lval
<id,j>
<!=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n2")
--accepting rule at line 81 (")")
Lval
<id,n2>
<)>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 101 ("if")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("L")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<{>
<if>
<(>
<id,L>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<<>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("R")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 83 ("]")
Lval
<id,R>
<[>
<id,j>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<+>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("array")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("k")
--accepting rule at line 83 ("]")
Lval
<intd>
ExpNumber:0
<)>
<{>
<id,array>
<[>
<id,k>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("L")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<id,L>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 75 (";")
Lval
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<id,k>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,k>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,i>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 102 ("else")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("array")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("k")
--accepting rule at line 83 ("]")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<else>
<{>
<id,array>
<[>
<id,k>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("R")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 83 ("]")
Lval
<id,R>
<[>
<id,j>
<]>
33333333333
--accepting rule at line 75 (";")
Lval
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<id,k>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,k>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,j>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,j>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<}>
<while>
<(>
<id,i>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n1")
--accepting rule at line 81 (")")
Lval
<id,n1>
<)>
33333333333
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("array")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("k")
--accepting rule at line 83 ("]")
Lval
<{>
<id,array>
<[>
<id,k>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("L")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<id,L>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 75 (";")
Lval
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<id,k>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,k>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,i>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<while>
<(>
<id,j>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n2")
--accepting rule at line 81 (")")
Lval
<id,n2>
<)>
33333333333
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("array")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("k")
--accepting rule at line 83 ("]")
Lval
<{>
<id,array>
<[>
<id,k>
<]>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<=>
33333333333
22222222222222
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("R")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("j")
--accepting rule at line 83 ("]")
Lval
<id,R>
<[>
<id,j>
<]>
33333333333
--accepting rule at line 75 (";")
Lval
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
stmt1
<id,k>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("k")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,k>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,j>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("j")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,j>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("MergeSort")
--accepting rule at line 80 ("(")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("array")
--accepting rule at line 82 ("[")
--accepting rule at line 83 ("]")
--accepting rule at line 76 (",")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<into>
ExpNumber:0
<;>
<}>
<int>
<id,MergeSort>
<(>
<int>
<id,array>
<[>
<]>
<,>
33333333333
1111111111111111
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("p")
--accepting rule at line 76 (",")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("q")
--accepting rule at line 81 (")")
--accepting rule at line 115 ("
")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 101 ("if")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("p")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
<int>
<id,p>
<,>
<int>
<id,q>
<)>
<{>
<if>
<(>
<id,p>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("q")
--accepting rule at line 81 (")")
Lval
<id,q>
<)>
33333333333
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("mid")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("mid")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<{>
<int>
<id,mid>
<;>
<id,mid>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("p")
--accepting rule at line 84 ("+")
Lval
<(>
<id,p>
<+>
33333333333
--accepting rule at line 112 ("q")
--accepting rule at line 81 (")")
Lval
<id,q>
<)>
33333333333
--accepting rule at line 87 ("/")
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
</>
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,tmp>
<;>
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("MergeSort")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("array")
--accepting rule at line 76 (",")
Lval
<id,MergeSort>
<(>
<id,array>
<,>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("p")
--accepting rule at line 76 (",")
Lval
<id,p>
<,>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("mid")
--accepting rule at line 81 (")")
Lval
<id,mid>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<;>
stmt1
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("mid")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,mid>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("MergeSort")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("array")
--accepting rule at line 76 (",")
Lval
<id,MergeSort>
<(>
<id,array>
<,>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 76 (",")
Lval
<id,tmp>
<,>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("q")
--accepting rule at line 81 (")")
Lval
<id,q>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<;>
stmt1
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("Merge")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("array")
--accepting rule at line 76 (",")
Lval
<id,Merge>
<(>
<id,array>
<,>
33333333333
--accepting rule at line 112 ("p")
--accepting rule at line 76 (",")
Lval
<id,p>
<,>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("mid")
--accepting rule at line 76 (",")
Lval
<id,mid>
<,>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("q")
--accepting rule at line 81 (")")
Lval
<id,q>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 115 ("
")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("main")
--accepting rule at line 80 ("(")
--accepting rule at line 81 (")")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<;>
stmt1
<}>
<return>
<into>
ExpNumber:0
<;>
<}>
<int>
<id,main>
<(>
<)>
<{>
<id,n>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("10")
--accepting rule at line 83 ("]")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 111 ("0")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<;>
<id,a>
<[>
<into>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("4")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("1")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("3")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("2")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("9")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("3")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("2")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("4")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("5")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("6")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("6")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("7")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("5")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("8")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("7")
--accepting rule at line 75 (";")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 109 ("9")
--accepting rule at line 83 ("]")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,a>
<[>
<intd>
ExpNumber:0
<]>
<=>
33333333333
22222222222222
--accepting rule at line 109 ("8")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<int>
<id,i>
<;>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 100 ("int")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<into>
ExpNumber:0
<;>
stmt1
<int>
<id,tmp>
<;>
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 114 (" ")
--accepting rule at line 85 ("-")
Lval
<id,n>
<->
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("MergeSort")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("a")
--accepting rule at line 76 (",")
Lval
<id,MergeSort>
<(>
<id,a>
<,>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 76 (",")
Lval
<id,i>
<,>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 81 (")")
Lval
<id,tmp>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 103 ("while")
--accepting rule at line 114 (" ")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 96 ("<")
Lval
<;>
stmt1
<while>
<(>
<id,i>
<<>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("n")
--accepting rule at line 81 (")")
Lval
<id,n>
<)>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 78 ("{")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<{>
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("a")
--accepting rule at line 82 ("[")
--accepting rule at line 112 ("i")
--accepting rule at line 83 ("]")
Lval
<id,a>
<[>
<id,i>
<]>
33333333333
--accepting rule at line 75 (";")
Lval
<;>
33333333333
22222222222222
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putint")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("tmp")
--accepting rule at line 81 (")")
Lval
stmt1
<id,putint>
<(>
<id,tmp>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("tmp")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<;>
<id,tmp>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("10")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("putch")
--accepting rule at line 80 ("(")
--accepting rule at line 112 ("tmp")
--accepting rule at line 81 (")")
Lval
<intd>
ExpNumber:0
<;>
stmt1
<id,putch>
<(>
<id,tmp>
<)>
33333333333
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 89 ("=")
Lval
<;>
<id,i>
<=>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 112 ("i")
--accepting rule at line 114 (" ")
--accepting rule at line 84 ("+")
Lval
<id,i>
<+>
33333333333
--accepting rule at line 114 (" ")
--accepting rule at line 109 ("1")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 114 (" ")
--accepting rule at line 108 ("return")
--accepting rule at line 114 (" ")
--accepting rule at line 111 ("0")
--accepting rule at line 75 (";")
--accepting rule at line 115 ("
")
--accepting rule at line 79 ("}")
--accepting rule at line 115 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Lval
<intd>
ExpNumber:0
<;>
stmt1
<}>
<return>
<into>
ExpNumber:0
<;>
<}>
CompUnits (1)
  VarDecl (1)
    IDENTIFIER n
  CompUnits (2)
    FuncDef (2)
      FuncFParams (2)
        FuncFParam (2)
          ArrayExps (2)
        FuncFParams (2)
          FuncFParam (2)
          FuncFParams (2)
            FuncFParam (2)
            FuncFParam (2)
      Block (4)
        BlockItems (4)
          VarDecl (4)
            IDENTIFIER n1
          BlockItems (5)
            Lval_Opassign_Stmt (5)
              LVal (5)
                IDENTIFIER n1
                ArrayExps (5)
              PLUSExp (5)
                MINUSExp (5)
                  LVal_EXP (5)
                    LVal (5)
                      IDENTIFIER middle
                      ArrayExps (5)
                  LVal_EXP (5)
                    LVal (5)
                      IDENTIFIER low
                      ArrayExps (5)
                IntConst (5)
                  CONSTANTINTD: 1
            BlockItems (6)
              VarDecl (6)
                IDENTIFIER n2
              BlockItems (7)
                Lval_Opassign_Stmt (7)
                  LVal (7)
                    IDENTIFIER n2
                    ArrayExps (7)
                  MINUSExp (7)
                    LVal_EXP (7)
                      LVal (7)
                        IDENTIFIER high
                        ArrayExps (7)
                    LVal_EXP (7)
                      LVal (7)
                        IDENTIFIER middle
                        ArrayExps (7)
                BlockItems (8)
                  VarDecl (8)
                    ArrayDec: demmision=0
                      IDENTIFIER L
                  BlockItems (9)
                    VarDecl (9)
                      ArrayDec: demmision=0
                        IDENTIFIER R
                    BlockItems (10)
                      VarDecl (10)
                        IDENTIFIER i
                      BlockItems (11)
                        Lval_Opassign_Stmt (11)
                          LVal (11)
                            IDENTIFIER i
                            ArrayExps (11)
                          IntConst (11)
                            CONSTANTOCT: 0
                        BlockItems (12)
                          VarDecl (12)
                            IDENTIFIER j
                          BlockItems (13)
                            Lval_Opassign_Stmt (13)
                              LVal (13)
                                IDENTIFIER j
                                ArrayExps (13)
                              IntConst (13)
                                CONSTANTOCT: 0
                            BlockItems (15)
                              While_Stmt (15)
                                Cond (15)
                                  OPLIGHT (15)
                                    LVal_EXP (15)
                                      LVal (15)
                                        IDENTIFIER i
                                        ArrayExps (15)
                                    LVal_EXP (15)
                                      LVal (15)
                                        IDENTIFIER n1
                                        ArrayExps (15)
                                Block_Stmt (16)
                                  Block (16)
                                    BlockItems (16)
                                      Lval_Opassign_Stmt (16)
                                        LVal (16)
                                          IDENTIFIER L
                                          ArrayExps (16)
                                            LVal_EXP (16)
                                              LVal (16)
                                                IDENTIFIER i
                                                ArrayExps (16)
                                            ArrayExps (16)
                                        LVal_EXP (16)
                                          LVal (16)
                                            IDENTIFIER array
                                            ArrayExps (16)
                                              PLUSExp (16)
                                                LVal_EXP (16)
                                                  LVal (16)
                                                    IDENTIFIER i
                                                    ArrayExps (16)
                                                LVal_EXP (16)
                                                  LVal (16)
                                                    IDENTIFIER low
                                                    ArrayExps (16)
                                              ArrayExps (16)
                                      BlockItems (17)
                                        Lval_Opassign_Stmt (17)
                                          LVal (17)
                                            IDENTIFIER i
                                            ArrayExps (17)
                                          PLUSExp (17)
                                            LVal_EXP (17)
                                              LVal (17)
                                                IDENTIFIER i
                                                ArrayExps (17)
                                            IntConst (17)
                                              CONSTANTINTD: 1
                              BlockItems (19)
                                While_Stmt (19)
                                  Cond (19)
                                    OPLIGHT (19)
                                      LVal_EXP (19)
                                        LVal (19)
                                          IDENTIFIER j
                                          ArrayExps (19)
                                      LVal_EXP (19)
                                        LVal (19)
                                          IDENTIFIER n2
                                          ArrayExps (19)
                                  Block_Stmt (20)
                                    Block (20)
                                      BlockItems (20)
                                        Lval_Opassign_Stmt (20)
                                          LVal (20)
                                            IDENTIFIER R
                                            ArrayExps (20)
                                              LVal_EXP (20)
                                                LVal (20)
                                                  IDENTIFIER j
                                                  ArrayExps (20)
                                              ArrayExps (20)
                                          LVal_EXP (20)
                                            LVal (20)
                                              IDENTIFIER array
                                              ArrayExps (20)
                                                PLUSExp (20)
                                                  PLUSExp (20)
                                                    LVal_EXP (20)
                                                      LVal (20)
                                                        IDENTIFIER j
                                                        ArrayExps (20)
                                                    LVal_EXP (20)
                                                      LVal (20)
                                                        IDENTIFIER middle
                                                        ArrayExps (20)
                                                  IntConst (20)
                                                    CONSTANTINTD: 1
                                                ArrayExps (20)
                                        BlockItems (21)
                                          Lval_Opassign_Stmt (21)
                                            LVal (21)
                                              IDENTIFIER j
                                              ArrayExps (21)
                                            PLUSExp (21)
                                              LVal_EXP (21)
                                                LVal (21)
                                                  IDENTIFIER j
                                                  ArrayExps (21)
                                              IntConst (21)
                                                CONSTANTINTD: 1
                                BlockItems (23)
                                  Lval_Opassign_Stmt (23)
                                    LVal (23)
                                      IDENTIFIER i
                                      ArrayExps (23)
                                    IntConst (23)
                                      CONSTANTOCT: 0
                                  BlockItems (24)
                                    Lval_Opassign_Stmt (24)
                                      LVal (24)
                                        IDENTIFIER j
                                        ArrayExps (24)
                                      IntConst (24)
                                        CONSTANTOCT: 0
                                    BlockItems (25)
                                      VarDecl (25)
                                        IDENTIFIER k
                                      BlockItems (26)
                                        Lval_Opassign_Stmt (26)
                                          LVal (26)
                                            IDENTIFIER k
                                            ArrayExps (26)
                                          LVal_EXP (26)
                                            LVal (26)
                                              IDENTIFIER low
                                              ArrayExps (26)
                                        BlockItems (27)
                                          While_Stmt (27)
                                            Cond_And (27)
                                              Cond (27)
                                                OPNOTEQUAL (27)
                                                  LVal_EXP (27)
                                                    LVal (27)
                                                      IDENTIFIER i
                                                      ArrayExps (27)
                                                  LVal_EXP (27)
                                                    LVal (27)
                                                      IDENTIFIER n1
                                                      ArrayExps (27)
                                              Cond (27)
                                                OPNOTEQUAL (27)
                                                  LVal_EXP (27)
                                                    LVal (27)
                                                      IDENTIFIER j
                                                      ArrayExps (27)
                                                  LVal_EXP (27)
                                                    LVal (27)
                                                      IDENTIFIER n2
                                                      ArrayExps (27)
                                            Block_Stmt (29)
                                              Block (29)
                                                BlockItems (29)
                                                  IF_ELSE_Stmt (29)
                                                    Cond (29)
                                                      OPLIGHT (29)
                                                        LVal_EXP (29)
                                                          LVal (29)
                                                            IDENTIFIER L
                                                            ArrayExps (29)
                                                              LVal_EXP (29)
                                                                LVal (29)
                                                                  IDENTIFIER i
                                                                  ArrayExps (29)
                                                              ArrayExps (29)
                                                        PLUSExp (29)
                                                          LVal_EXP (29)
                                                            LVal (29)
                                                              IDENTIFIER R
                                                              ArrayExps (29)
                                                                LVal_EXP (29)
                                                                  LVal (29)
                                                                    IDENTIFIER j
                                                                    ArrayExps (29)
                                                                ArrayExps (29)
                                                          IntConst (29)
                                                            CONSTANTINTD: 1
                                                    Block_Stmt (30)
                                                      Block (30)
                                                        BlockItems (30)
                                                          Lval_Opassign_Stmt (30)
                                                            LVal (30)
                                                              IDENTIFIER array
                                                              ArrayExps (30)
                                                                LVal_EXP (30)
                                                                  LVal (30)
                                                                    IDENTIFIER k
                                                                    ArrayExps (30)
                                                                ArrayExps (30)
                                                            LVal_EXP (30)
                                                              LVal (30)
                                                                IDENTIFIER L
                                                                ArrayExps (30)
                                                                  LVal_EXP (30)
                                                                    LVal (30)
                                                                      IDENTIFIER i
                                                                      ArrayExps (30)
                                                                  ArrayExps (30)
                                                          BlockItems (31)
                                                            Lval_Opassign_Stmt (31)
                                                              LVal (31)
                                                                IDENTIFIER k
                                                                ArrayExps (31)
                                                              PLUSExp (31)
                                                                LVal_EXP (31)
                                                                  LVal (31)
                                                                    IDENTIFIER k
                                                                    ArrayExps (31)
                                                                IntConst (31)
                                                                  CONSTANTINTD: 1
                                                            BlockItems (32)
                                                              Lval_Opassign_Stmt (32)
                                                                LVal (32)
                                                                  IDENTIFIER i
                                                                  ArrayExps (32)
                                                                PLUSExp (32)
                                                                  LVal_EXP (32)
                                                                    LVal (32)
                                                                      IDENTIFIER i
                                                                      ArrayExps (32)
                                                                  IntConst (32)
                                                                    CONSTANTINTD: 1
                                                    Block_Stmt (35)
                                                      Block (35)
                                                        BlockItems (35)
                                                          Lval_Opassign_Stmt (35)
                                                            LVal (35)
                                                              IDENTIFIER array
                                                              ArrayExps (35)
                                                                LVal_EXP (35)
                                                                  LVal (35)
                                                                    IDENTIFIER k
                                                                    ArrayExps (35)
                                                                ArrayExps (35)
                                                            LVal_EXP (35)
                                                              LVal (35)
                                                                IDENTIFIER R
                                                                ArrayExps (35)
                                                                  LVal_EXP (35)
                                                                    LVal (35)
                                                                      IDENTIFIER j
                                                                      ArrayExps (35)
                                                                  ArrayExps (35)
                                                          BlockItems (36)
                                                            Lval_Opassign_Stmt (36)
                                                              LVal (36)
                                                                IDENTIFIER k
                                                                ArrayExps (36)
                                                              PLUSExp (36)
                                                                LVal_EXP (36)
                                                                  LVal (36)
                                                                    IDENTIFIER k
                                                                    ArrayExps (36)
                                                                IntConst (36)
                                                                  CONSTANTINTD: 1
                                                            BlockItems (37)
                                                              Lval_Opassign_Stmt (37)
                                                                LVal (37)
                                                                  IDENTIFIER j
                                                                  ArrayExps (37)
                                                                PLUSExp (37)
                                                                  LVal_EXP (37)
                                                                    LVal (37)
                                                                      IDENTIFIER j
                                                                      ArrayExps (37)
                                                                  IntConst (37)
                                                                    CONSTANTINTD: 1
                                          BlockItems (40)
                                            While_Stmt (40)
                                              Cond (40)
                                                OPLIGHT (40)
                                                  LVal_EXP (40)
                                                    LVal (40)
                                                      IDENTIFIER i
                                                      ArrayExps (40)
                                                  LVal_EXP (40)
                                                    LVal (40)
                                                      IDENTIFIER n1
                                                      ArrayExps (40)
                                              Block_Stmt (41)
                                                Block (41)
                                                  BlockItems (41)
                                                    Lval_Opassign_Stmt (41)
                                                      LVal (41)
                                                        IDENTIFIER array
                                                        ArrayExps (41)
                                                          LVal_EXP (41)
                                                            LVal (41)
                                                              IDENTIFIER k
                                                              ArrayExps (41)
                                                          ArrayExps (41)
                                                      LVal_EXP (41)
                                                        LVal (41)
                                                          IDENTIFIER L
                                                          ArrayExps (41)
                                                            LVal_EXP (41)
                                                              LVal (41)
                                                                IDENTIFIER i
                                                                ArrayExps (41)
                                                            ArrayExps (41)
                                                    BlockItems (42)
                                                      Lval_Opassign_Stmt (42)
                                                        LVal (42)
                                                          IDENTIFIER k
                                                          ArrayExps (42)
                                                        PLUSExp (42)
                                                          LVal_EXP (42)
                                                            LVal (42)
                                                              IDENTIFIER k
                                                              ArrayExps (42)
                                                          IntConst (42)
                                                            CONSTANTINTD: 1
                                                      BlockItems (43)
                                                        Lval_Opassign_Stmt (43)
                                                          LVal (43)
                                                            IDENTIFIER i
                                                            ArrayExps (43)
                                                          PLUSExp (43)
                                                            LVal_EXP (43)
                                                              LVal (43)
                                                                IDENTIFIER i
                                                                ArrayExps (43)
                                                            IntConst (43)
                                                              CONSTANTINTD: 1
                                            BlockItems (46)
                                              While_Stmt (46)
                                                Cond (46)
                                                  OPLIGHT (46)
                                                    LVal_EXP (46)
                                                      LVal (46)
                                                        IDENTIFIER j
                                                        ArrayExps (46)
                                                    LVal_EXP (46)
                                                      LVal (46)
                                                        IDENTIFIER n2
                                                        ArrayExps (46)
                                                Block_Stmt (47)
                                                  Block (47)
                                                    BlockItems (47)
                                                      Lval_Opassign_Stmt (47)
                                                        LVal (47)
                                                          IDENTIFIER array
                                                          ArrayExps (47)
                                                            LVal_EXP (47)
                                                              LVal (47)
                                                                IDENTIFIER k
                                                                ArrayExps (47)
                                                            ArrayExps (47)
                                                        LVal_EXP (47)
                                                          LVal (47)
                                                            IDENTIFIER R
                                                            ArrayExps (47)
                                                              LVal_EXP (47)
                                                                LVal (47)
                                                                  IDENTIFIER j
                                                                  ArrayExps (47)
                                                              ArrayExps (47)
                                                      BlockItems (48)
                                                        Lval_Opassign_Stmt (48)
                                                          LVal (48)
                                                            IDENTIFIER k
                                                            ArrayExps (48)
                                                          PLUSExp (48)
                                                            LVal_EXP (48)
                                                              LVal (48)
                                                                IDENTIFIER k
                                                                ArrayExps (48)
                                                            IntConst (48)
                                                              CONSTANTINTD: 1
                                                        BlockItems (49)
                                                          Lval_Opassign_Stmt (49)
                                                            LVal (49)
                                                              IDENTIFIER j
                                                              ArrayExps (49)
                                                            PLUSExp (49)
                                                              LVal_EXP (49)
                                                                LVal (49)
                                                                  IDENTIFIER j
                                                                  ArrayExps (49)
                                                              IntConst (49)
                                                                CONSTANTINTD: 1
                                              BlockItems (51)
                                                Return_Stmt (51)
                                                  IntConst (51)
                                                    CONSTANTOCT: 0
    CompUnits (54)
      FuncDef (54)
        FuncFParams (54)
          FuncFParam (54)
            ArrayExps (54)
          FuncFParams (54)
            FuncFParam (54)
            FuncFParam (54)
        Block (56)
          BlockItems (56)
            IF_Stmt (56)
              Cond (56)
                OPLIGHT (56)
                  LVal_EXP (56)
                    LVal (56)
                      IDENTIFIER p
                      ArrayExps (56)
                  LVal_EXP (56)
                    LVal (56)
                      IDENTIFIER q
                      ArrayExps (56)
              Block_Stmt (58)
                Block (58)
                  BlockItems (58)
                    VarDecl (58)
                      IDENTIFIER mid
                    BlockItems (59)
                      Lval_Opassign_Stmt (59)
                        LVal (59)
                          IDENTIFIER mid
                          ArrayExps (59)
                        DIVIDEExp (59)
                          (Exp) (59)
                            PLUSExp (59)
                              LVal_EXP (59)
                                LVal (59)
                                  IDENTIFIER p
                                  ArrayExps (59)
                              LVal_EXP (59)
                                LVal (59)
                                  IDENTIFIER q
                                  ArrayExps (59)
                          IntConst (59)
                            CONSTANTINTD: 2
                      BlockItems (60)
                        VarDecl (60)
                          IDENTIFIER tmp
                        BlockItems (61)
                          Lval_Opassign_Stmt (61)
                            LVal (61)
                              IDENTIFIER tmp
                              ArrayExps (61)
                            funcall (61)
                              IDENTIFIER MergeSort
                              FuncRParams (61)
                                LVal_EXP (61)
                                  LVal (61)
                                    IDENTIFIER array
                                    ArrayExps (61)
                                Exps (61)
                                  LVal_EXP (61)
                                    LVal (61)
                                      IDENTIFIER p
                                      ArrayExps (61)
                                  Exps (61)
                                    LVal_EXP (61)
                                      LVal (61)
                                        IDENTIFIER mid
                                        ArrayExps (61)
                          BlockItems (62)
                            Lval_Opassign_Stmt (62)
                              LVal (62)
                                IDENTIFIER tmp
                                ArrayExps (62)
                              PLUSExp (62)
                                LVal_EXP (62)
                                  LVal (62)
                                    IDENTIFIER mid
                                    ArrayExps (62)
                                IntConst (62)
                                  CONSTANTINTD: 1
                            BlockItems (63)
                              Lval_Opassign_Stmt (63)
                                LVal (63)
                                  IDENTIFIER tmp
                                  ArrayExps (63)
                                funcall (63)
                                  IDENTIFIER MergeSort
                                  FuncRParams (63)
                                    LVal_EXP (63)
                                      LVal (63)
                                        IDENTIFIER array
                                        ArrayExps (63)
                                    Exps (63)
                                      LVal_EXP (63)
                                        LVal (63)
                                          IDENTIFIER tmp
                                          ArrayExps (63)
                                      Exps (63)
                                        LVal_EXP (63)
                                          LVal (63)
                                            IDENTIFIER q
                                            ArrayExps (63)
                              BlockItems (64)
                                Lval_Opassign_Stmt (64)
                                  LVal (64)
                                    IDENTIFIER tmp
                                    ArrayExps (64)
                                  funcall (64)
                                    IDENTIFIER Merge
                                    FuncRParams (64)
                                      LVal_EXP (64)
                                        LVal (64)
                                          IDENTIFIER array
                                          ArrayExps (64)
                                      Exps (64)
                                        LVal_EXP (64)
                                          LVal (64)
                                            IDENTIFIER p
                                            ArrayExps (64)
                                        Exps (64)
                                          LVal_EXP (64)
                                            LVal (64)
                                              IDENTIFIER mid
                                              ArrayExps (64)
                                          Exps (64)
                                            LVal_EXP (64)
                                              LVal (64)
                                                IDENTIFIER q
                                                ArrayExps (64)
            BlockItems (66)
              Return_Stmt (66)
                IntConst (66)
                  CONSTANTOCT: 0
      CompUnits (69)
        FuncDef (69)
          NOFParam (69)
          Block (70)
            BlockItems (70)
              Lval_Opassign_Stmt (70)
                LVal (70)
                  IDENTIFIER n
                  ArrayExps (70)
                IntConst (70)
                  CONSTANTINTD: 10
              BlockItems (71)
                VarDecl (71)
                  ArrayDec: demmision=0
                    IDENTIFIER a
                BlockItems (72)
                  Lval_Opassign_Stmt (72)
                    LVal (72)
                      IDENTIFIER a
                      ArrayExps (72)
                        IntConst (72)
                          CONSTANTOCT: 0
                        ArrayExps (72)
                    IntConst (72)
                      CONSTANTINTD: 4
                  BlockItems (72)
                    Lval_Opassign_Stmt (72)
                      LVal (72)
                        IDENTIFIER a
                        ArrayExps (72)
                          IntConst (72)
                            CONSTANTINTD: 1
                          ArrayExps (72)
                      IntConst (72)
                        CONSTANTINTD: 3
                    BlockItems (72)
                      Lval_Opassign_Stmt (72)
                        LVal (72)
                          IDENTIFIER a
                          ArrayExps (72)
                            IntConst (72)
                              CONSTANTINTD: 2
                            ArrayExps (72)
                        IntConst (72)
                          CONSTANTINTD: 9
                      BlockItems (72)
                        Lval_Opassign_Stmt (72)
                          LVal (72)
                            IDENTIFIER a
                            ArrayExps (72)
                              IntConst (72)
                                CONSTANTINTD: 3
                              ArrayExps (72)
                          IntConst (72)
                            CONSTANTINTD: 2
                        BlockItems (72)
                          Lval_Opassign_Stmt (72)
                            LVal (72)
                              IDENTIFIER a
                              ArrayExps (72)
                                IntConst (72)
                                  CONSTANTINTD: 4
                                ArrayExps (72)
                            IntConst (72)
                              CONSTANTOCT: 0
                          BlockItems (73)
                            Lval_Opassign_Stmt (73)
                              LVal (73)
                                IDENTIFIER a
                                ArrayExps (73)
                                  IntConst (73)
                                    CONSTANTINTD: 5
                                  ArrayExps (73)
                              IntConst (73)
                                CONSTANTINTD: 1
                            BlockItems (73)
                              Lval_Opassign_Stmt (73)
                                LVal (73)
                                  IDENTIFIER a
                                  ArrayExps (73)
                                    IntConst (73)
                                      CONSTANTINTD: 6
                                    ArrayExps (73)
                                IntConst (73)
                                  CONSTANTINTD: 6
                              BlockItems (73)
                                Lval_Opassign_Stmt (73)
                                  LVal (73)
                                    IDENTIFIER a
                                    ArrayExps (73)
                                      IntConst (73)
                                        CONSTANTINTD: 7
                                      ArrayExps (73)
                                  IntConst (73)
                                    CONSTANTINTD: 5
                                BlockItems (73)
                                  Lval_Opassign_Stmt (73)
                                    LVal (73)
                                      IDENTIFIER a
                                      ArrayExps (73)
                                        IntConst (73)
                                          CONSTANTINTD: 8
                                        ArrayExps (73)
                                    IntConst (73)
                                      CONSTANTINTD: 7
                                  BlockItems (73)
                                    Lval_Opassign_Stmt (73)
                                      LVal (73)
                                        IDENTIFIER a
                                        ArrayExps (73)
                                          IntConst (73)
                                            CONSTANTINTD: 9
                                          ArrayExps (73)
                                      IntConst (73)
                                        CONSTANTINTD: 8
                                    BlockItems (74)
                                      VarDecl (74)
                                        IDENTIFIER i
                                      BlockItems (75)
                                        Lval_Opassign_Stmt (75)
                                          LVal (75)
                                            IDENTIFIER i
                                            ArrayExps (75)
                                          IntConst (75)
                                            CONSTANTOCT: 0
                                        BlockItems (76)
                                          VarDecl (76)
                                            IDENTIFIER tmp
                                          BlockItems (77)
                                            Lval_Opassign_Stmt (77)
                                              LVal (77)
                                                IDENTIFIER tmp
                                                ArrayExps (77)
                                              MINUSExp (77)
                                                LVal_EXP (77)
                                                  LVal (77)
                                                    IDENTIFIER n
                                                    ArrayExps (77)
                                                IntConst (77)
                                                  CONSTANTINTD: 1
                                            BlockItems (78)
                                              Lval_Opassign_Stmt (78)
                                                LVal (78)
                                                  IDENTIFIER i
                                                  ArrayExps (78)
                                                funcall (78)
                                                  IDENTIFIER MergeSort
                                                  FuncRParams (78)
                                                    LVal_EXP (78)
                                                      LVal (78)
                                                        IDENTIFIER a
                                                        ArrayExps (78)
                                                    Exps (78)
                                                      LVal_EXP (78)
                                                        LVal (78)
                                                          IDENTIFIER i
                                                          ArrayExps (78)
                                                      Exps (78)
                                                        LVal_EXP (78)
                                                          LVal (78)
                                                            IDENTIFIER tmp
                                                            ArrayExps (78)
                                              BlockItems (79)
                                                While_Stmt (79)
                                                  Cond (79)
                                                    OPLIGHT (79)
                                                      LVal_EXP (79)
                                                        LVal (79)
                                                          IDENTIFIER i
                                                          ArrayExps (79)
                                                      LVal_EXP (79)
                                                        LVal (79)
                                                          IDENTIFIER n
                                                          ArrayExps (79)
                                                  Block_Stmt (80)
                                                    Block (80)
                                                      BlockItems (80)
                                                        Lval_Opassign_Stmt (80)
                                                          LVal (80)
                                                            IDENTIFIER tmp
                                                            ArrayExps (80)
                                                          LVal_EXP (80)
                                                            LVal (80)
                                                              IDENTIFIER a
                                                              ArrayExps (80)
                                                                LVal_EXP (80)
                                                                  LVal (80)
                                                                    IDENTIFIER i
                                                                    ArrayExps (80)
                                                                ArrayExps (80)
                                                        BlockItems (81)
                                                          Exp_Stmt (81)
                                                            funcall (81)
                                                              IDENTIFIER putint
                                                              FuncRParams (81)
                                                                LVal_EXP (81)
                                                                  LVal (81)
                                                                    IDENTIFIER tmp
                                                                    ArrayExps (81)
                                                          BlockItems (82)
                                                            Lval_Opassign_Stmt (82)
                                                              LVal (82)
                                                                IDENTIFIER tmp
                                                                ArrayExps (82)
                                                              IntConst (82)
                                                                CONSTANTINTD: 10
                                                            BlockItems (83)
                                                              Exp_Stmt (83)
                                                                funcall (83)
                                                                  IDENTIFIER putch
                                                                  FuncRParams (83)
                                                                    LVal_EXP (83)
                                                                      LVal (83)
                                                                        IDENTIFIER tmp
                                                                        ArrayExps (83)
                                                              BlockItems (84)
                                                                Lval_Opassign_Stmt (84)
                                                                  LVal (84)
                                                                    IDENTIFIER i
                                                                    ArrayExps (84)
                                                                  PLUSExp (84)
                                                                    LVal_EXP (84)
                                                                      LVal (84)
                                                                        IDENTIFIER i
                                                                        ArrayExps (84)
                                                                    IntConst (84)
                                                                      CONSTANTINTD: 1
                                                BlockItems (86)
                                                  Return_Stmt (86)
                                                    IntConst (86)
                                                      CONSTANTOCT: 0


===========================================================
Global
ID             category       type           depictor
               
n              Variable       TYPEINTEGER    NULL           
Merge          Function       TYPEINTEGER    NOT NULL       
MergeSort      Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:Merge
ID             category       type           depictor
              
array          Array          TYPEINTEGER    ----------> dim=1
low            Variable       TYPEINTEGER    NOT NULL       
middle         Variable       TYPEINTEGER    NOT NULL       
high           Variable       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Local:Merge
ID             category       type           depictor
              
n1             Variable       TYPEINTEGER    NULL           
n2             Variable       TYPEINTEGER    NULL           
L              Array          TYPEINTEGER    ----------> dim=1
R              Array          TYPEINTEGER    ----------> dim=1
i              Variable       TYPEINTEGER    NULL           
j              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
k              Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NOT NULL       
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
               Block          BLOCKStmt      NULL           
               Block          BLOCKStmt      NULL           
===========================================================
===========================================================
Formal:MergeSort
ID             category       type           depictor
              
array          Array          TYPEINTEGER    ----------> dim=1
p              Variable       TYPEINTEGER    NOT NULL       
q              Variable       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Local:MergeSort
ID             category       type           depictor
              
               Block          BLOCKStmt      NOT NULL       
===========================================================
===========================================================
Local:block
ID             category       type           depictor
              
mid            Variable       TYPEINTEGER    NULL           
tmp            Variable       TYPEINTEGER    NULL           
===========================================================
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
===========================================================
===========================================================
Local:main
ID             category       type           depictor
              
a              Array          TYPEINTEGER    ----------> dim=1
i              Variable       TYPEINTEGER    NULL           
tmp            Variable       TYPEINTEGER    NULL           
               Block          BLOCKStmt      NULL           
===========================================================
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
456
789
456
789
789
789
456
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
123
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
TraverseScopeStack no result
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
TraverseScopeStack no result
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
789
456

~~~~TAC~~~~~
 No  Source Position	TACCode
_______________________________________
  0  (at line   0)	CALL main

  1  (at line   2)	FUNCTION Merge :
  2  (at line   2)	PARAM array
  3  (at line   2)	PARAM low
  4  (at line   2)	PARAM middle
  5  (at line   2)	PARAM high
  6  (at line   5)	_t3 := middle
  7  (at line   5)	_t4 := low
  8  (at line   5)	_t1 := _t3 - _t4
  9  (at line   5)	_t2 := #1
 10  (at line   5)	_t0 := _t1 + _t2
 11  (at line   5)	n1 := _t0
 12  (at line   7)	_t6 := high
 13  (at line   7)	_t7 := middle
 14  (at line   7)	_t5 := _t6 - _t7
 15  (at line   7)	n2 := _t5
 16  (at line  11)	_t8 := #0
 17  (at line  11)	i := _t8
 18  (at line  13)	_t9 := #0
 19  (at line  13)	j := _t9
 20  (at line  15)	LABEL label0 :
 21  (at line  15)	_t10 := i
 22  (at line  15)	_t13 := n1
 23  (at line  15)	IF _t10 < _t13 GOTO label1
 24  (at line  15)	GOTO label2
 25  (at line  15)	LABEL label1 :
 26  (at line  16)	_t18 := i
 27  (at line  16)	_t19 := low
 28  (at line  16)	_t17 := _t18 + _t19
 29  (at line  16)	_t14 := array[_t17]
 30  (at line  16)	_t23 := i
 31  (at line  16)	L[_t23] := _t14
 32  (at line  17)	_t26 := i
 33  (at line  17)	_t27 := #1
 34  (at line  17)	_t25 := _t26 + _t27
 35  (at line  17)	i := _t25
 36  (at line  15)	GOTO label0
 37  (at line  15)	LABEL label2 :
 38  (at line  19)	LABEL label3 :
 39  (at line  19)	_t28 := j
 40  (at line  19)	_t31 := n2
 41  (at line  19)	IF _t28 < _t31 GOTO label4
 42  (at line  19)	GOTO label5
 43  (at line  19)	LABEL label4 :
 44  (at line  20)	_t38 := j
 45  (at line  20)	_t39 := middle
 46  (at line  20)	_t36 := _t38 + _t39
 47  (at line  20)	_t37 := #1
 48  (at line  20)	_t35 := _t36 + _t37
 49  (at line  20)	_t32 := array[_t35]
 50  (at line  20)	_t43 := j
 51  (at line  20)	R[_t43] := _t32
 52  (at line  21)	_t46 := j
 53  (at line  21)	_t47 := #1
 54  (at line  21)	_t45 := _t46 + _t47
 55  (at line  21)	j := _t45
 56  (at line  19)	GOTO label3
 57  (at line  19)	LABEL label5 :
 58  (at line  23)	_t48 := #0
 59  (at line  23)	i := _t48
 60  (at line  24)	_t49 := #0
 61  (at line  24)	j := _t49
 62  (at line  26)	_t50 := low
 63  (at line  26)	k := _t50
 64  (at line  27)	LABEL label6 :
 65  (at line  27)	_t51 := i
 66  (at line  27)	_t54 := n1
 67  (at line  27)	IF _t51 != _t54 GOTO label9
 68  (at line  27)	GOTO label8
 69  (at line  27)	LABEL label9 :
 70  (at line  27)	_t55 := j
 71  (at line  27)	_t58 := n2
 72  (at line  27)	IF _t55 != _t58 GOTO label7
 73  (at line  27)	GOTO label8
 74  (at line  27)	LABEL label7 :
 75  (at line  29)	_t64 := i
 76  (at line  29)	_t59 := L[_t64]
 77  (at line  29)	_t71 := j
 78  (at line  29)	_t67 := R[_t71]
 79  (at line  29)	_t68 := #1
 80  (at line  29)	_t66 := _t67 + _t68
 81  (at line  29)	IF _t59 < _t66 GOTO label10
 82  (at line  29)	GOTO label11
 83  (at line  29)	LABEL label10 :
 84  (at line  30)	_t76 := i
 85  (at line  30)	_t73 := L[_t76]
 86  (at line  30)	_t80 := k
 87  (at line  30)	array[_t80] := _t73
 88  (at line  31)	_t83 := k
 89  (at line  31)	_t84 := #1
 90  (at line  31)	_t82 := _t83 + _t84
 91  (at line  31)	k := _t82
 92  (at line  32)	_t86 := i
 93  (at line  32)	_t87 := #1
 94  (at line  32)	_t85 := _t86 + _t87
 95  (at line  32)	i := _t85
 96  (at line  29)	GOTO label12
 97  (at line  29)	LABEL label11 :
 98  (at line  35)	_t91 := j
 99  (at line  35)	_t88 := R[_t91]
100  (at line  35)	_t95 := k
101  (at line  35)	array[_t95] := _t88
102  (at line  36)	_t98 := k
103  (at line  36)	_t99 := #1
104  (at line  36)	_t97 := _t98 + _t99
105  (at line  36)	k := _t97
106  (at line  37)	_t101 := j
107  (at line  37)	_t102 := #1
108  (at line  37)	_t100 := _t101 + _t102
109  (at line  37)	j := _t100
110  (at line  29)	LABEL label12 :
111  (at line  27)	GOTO label6
112  (at line  27)	LABEL label8 :
113  (at line  40)	LABEL label13 :
114  (at line  40)	_t103 := i
115  (at line  40)	_t106 := n1
116  (at line  40)	IF _t103 < _t106 GOTO label14
117  (at line  40)	GOTO label15
118  (at line  40)	LABEL label14 :
119  (at line  41)	_t110 := i
120  (at line  41)	_t107 := L[_t110]
121  (at line  41)	_t114 := k
122  (at line  41)	array[_t114] := _t107
123  (at line  42)	_t117 := k
124  (at line  42)	_t118 := #1
125  (at line  42)	_t116 := _t117 + _t118
126  (at line  42)	k := _t116
127  (at line  43)	_t120 := i
128  (at line  43)	_t121 := #1
129  (at line  43)	_t119 := _t120 + _t121
130  (at line  43)	i := _t119
131  (at line  40)	GOTO label13
132  (at line  40)	LABEL label15 :
133  (at line  46)	LABEL label16 :
134  (at line  46)	_t122 := j
135  (at line  46)	_t125 := n2
136  (at line  46)	IF _t122 < _t125 GOTO label17
137  (at line  46)	GOTO label18
138  (at line  46)	LABEL label17 :
139  (at line  47)	_t129 := j
140  (at line  47)	_t126 := R[_t129]
141  (at line  47)	_t133 := k
142  (at line  47)	array[_t133] := _t126
143  (at line  48)	_t136 := k
144  (at line  48)	_t137 := #1
145  (at line  48)	_t135 := _t136 + _t137
146  (at line  48)	k := _t135
147  (at line  49)	_t139 := j
148  (at line  49)	_t140 := #1
149  (at line  49)	_t138 := _t139 + _t140
150  (at line  49)	j := _t138
151  (at line  46)	GOTO label16
152  (at line  46)	LABEL label18 :
153  (at line  51)	_t141 := #0
154  (at line  51)	RETURN _t141

155  (at line  54)	FUNCTION MergeSort :
156  (at line  54)	PARAM array
157  (at line  54)	PARAM p
158  (at line  54)	PARAM q
159  (at line  56)	_t142 := p
160  (at line  56)	_t145 := q
161  (at line  56)	IF _t142 < _t145 GOTO label19
162  (at line  56)	GOTO label20
163  (at line  56)	LABEL label19 :
164  (at line  59)	_t150 := p
165  (at line  59)	_t151 := q
166  (at line  59)	_t149 := _t150 + _t151
167  (at line  59)	_t147 := _t149
168  (at line  59)	_t148 := #2
169  (at line  59)	_t146 := _t147 / _t148
170  (at line  59)	mid := _t146
171  (at line  61)	_t155 := p
172  (at line  61)	_t156 := mid
173  (at line  61)	ARG _t156
174  (at line  61)	ARG _t155
175  (at line  61)	ARG array[]
176  (at line  61)	_t152 := CALL MergeSort
177  (at line  61)	tmp := _t152
178  (at line  62)	_t158 := mid
179  (at line  62)	_t159 := #1
180  (at line  62)	_t157 := _t158 + _t159
181  (at line  62)	tmp := _t157
182  (at line  63)	_t163 := tmp
183  (at line  63)	_t164 := q
184  (at line  63)	ARG _t164
185  (at line  63)	ARG _t163
186  (at line  63)	ARG array[]
187  (at line  63)	_t160 := CALL MergeSort
188  (at line  63)	tmp := _t160
189  (at line  64)	_t168 := p
190  (at line  64)	_t169 := mid
191  (at line  64)	_t170 := q
192  (at line  64)	ARG _t170
193  (at line  64)	ARG _t169
194  (at line  64)	ARG _t168
195  (at line  64)	ARG array[]
196  (at line  64)	_t165 := CALL Merge
197  (at line  64)	tmp := _t165
198  (at line  56)	LABEL label20 :
199  (at line  66)	_t171 := #0
200  (at line  66)	RETURN _t171

201  (at line  69)	FUNCTION main :
202  (at line  70)	_t172 := #10
203  (at line  70)	n := _t172
204  (at line  72)	_t173 := #4
205  (at line  72)	_t176 := #0
206  (at line  72)	a[_t176] := _t173
207  (at line  72)	_t178 := #3
208  (at line  72)	_t181 := #1
209  (at line  72)	a[_t181] := _t178
210  (at line  72)	_t183 := #9
211  (at line  72)	_t186 := #2
212  (at line  72)	a[_t186] := _t183
213  (at line  72)	_t188 := #2
214  (at line  72)	_t191 := #3
215  (at line  72)	a[_t191] := _t188
216  (at line  72)	_t193 := #0
217  (at line  72)	_t196 := #4
218  (at line  72)	a[_t196] := _t193
219  (at line  73)	_t198 := #1
220  (at line  73)	_t201 := #5
221  (at line  73)	a[_t201] := _t198
222  (at line  73)	_t203 := #6
223  (at line  73)	_t206 := #6
224  (at line  73)	a[_t206] := _t203
225  (at line  73)	_t208 := #5
226  (at line  73)	_t211 := #7
227  (at line  73)	a[_t211] := _t208
228  (at line  73)	_t213 := #7
229  (at line  73)	_t216 := #8
230  (at line  73)	a[_t216] := _t213
231  (at line  73)	_t218 := #8
232  (at line  73)	_t221 := #9
233  (at line  73)	a[_t221] := _t218
234  (at line  75)	_t223 := #0
235  (at line  75)	i := _t223
236  (at line  77)	_t225 := n
237  (at line  77)	_t226 := #1
238  (at line  77)	_t224 := _t225 - _t226
239  (at line  77)	tmp := _t224
240  (at line  71)	_t229 := #10
241  (at line  78)	_t230 := i
242  (at line  78)	_t231 := tmp
243  (at line  78)	ARG _t231
244  (at line  78)	ARG _t230
245  (at line  78)	ARG a[_t229]
246  (at line  78)	_t227 := CALL MergeSort
247  (at line  78)	i := _t227
248  (at line  79)	LABEL label21 :
249  (at line  79)	_t232 := i
250  (at line  79)	_t235 := n
251  (at line  79)	IF _t232 < _t235 GOTO label22
252  (at line  79)	GOTO label23
253  (at line  79)	LABEL label22 :
254  (at line  80)	_t239 := i
255  (at line  80)	_t236 := a[_t239]
256  (at line  80)	tmp := _t236
257  (at line  81)	_t241 := tmp
258  (at line  81)	ARG _t241
259  (at line  81)	CALL 
260  (at line  82)	_t242 := #10
261  (at line  82)	tmp := _t242
262  (at line  83)	_t243 := tmp
263  (at line  83)	ARG _t243
264  (at line  83)	CALL 
265  (at line  84)	_t245 := i
266  (at line  84)	_t246 := #1
267  (at line  84)	_t244 := _t245 + _t246
268  (at line  84)	i := _t244
269  (at line  79)	GOTO label21
270  (at line  79)	LABEL label23 :
271  (at line  86)	_t247 := #0
272  (at line  86)	RETURN _t247


===========================================================
Global
ID             category       type           depictor
               
n              Variable       TYPEINTEGER    NULL           
Merge          Function       TYPEINTEGER    NOT NULL       
MergeSort      Function       TYPEINTEGER    NOT NULL       
main           Function       TYPEINTEGER    NOT NULL       
===========================================================
===========================================================
Formal:Merge
ID             category       type           depictor
              
array          Array          TYPEINTEGER    ----------> dim=1
low            Variable       TYPEINTEGER    NOT NULL       
middle         Variable       TYPEINTEGER    NOT NULL       
high           Variable       TYPEINTEGER    NOT NULL       
scope type is wrong
===========================================================
Formal:MergeSort
ID             category       type           depictor
              
array          Array          TYPEINTEGER    ----------> dim=1
p              Variable       TYPEINTEGER    NOT NULL       
q              Variable       TYPEINTEGER    NOT NULL       
scope type is wrong
===========================================================
Formal:main
ID             category       type           depictor
              
               NOParam                       NOT NULL       
scope type is wrong
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build assembly code
tac type FUNCTIONDF
Variable offset count+4 :n1
Variable offset count+4 :n1
Variable offset count+4 :n1
Variable offset count+4 :n1
Variable offset count+4 :n1
Variable offset count+4 :n1
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t0
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t1
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t2
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t3
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t4
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t5
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t6
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t7
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t8
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t9
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t10
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t13
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t14
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t15
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t16
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t17
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t18
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t19
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t20
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t21
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t22
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t23
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t24
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t25
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t26
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t27
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t28
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t31
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t32
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t33
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t34
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t35
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t36
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t37
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t38
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t39
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t40
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t41
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t42
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t43
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t44
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t45
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t46
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t47
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t48
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t49
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t50
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t51
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t54
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t55
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t58
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t103
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t106
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t107
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t108
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t109
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t110
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t111
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t112
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t113
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t114
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t115
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t116
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t117
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t118
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t119
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t120
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t121
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t122
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t125
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t126
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t127
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t128
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t129
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t130
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t131
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t132
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t133
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t134
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t135
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t136
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t137
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t138
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t139
scope type not local in functiondf
scopeprev:0
Variable offset count+4 :_t140
Variable offset count+4 :_t141
tec type ASSIGN
findregister: insldr rd=0,r1=11,r2 offset=0,op2type=1, insefft=0
tec type ASSIGN
findregister: insldr rd=1,r1=11,r2 offset=0,op2type=1, insefft=0
findregister: insldr rd=2,r1=11,r2 offset=0,op2type=1, insefft=0
tac type SUB
compiler: ./ObjectCode/Arm.cpp:85: ARM::ARM(TACCode *, ScopeItem &): Assertion `code.dest.Type = VARIABLE' failed.
Aborted (core dumped)
